{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ChatWithSource.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWithSource = () => {\n  _s();\n  const {\n    sourceName\n  } = useParams();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    // Ensure new data loading for changed sourceName\n  }, [sourceName]);\n  const sendMessage = async () => {\n    if (!input) return;\n    const userMessage = {\n      text: input,\n      user: 'Me'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    try {\n      const response = await axios.post(`/chat-with-source/${sourceName}/`, {\n        question: input,\n        filters: JSON.stringify({})\n      });\n      console.log('Received response from API:', response.data);\n      let formattedContent = formatResponse(response.data.response.content);\n      const botMessage = {\n        text: formattedContent,\n        user: 'Bot'\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage = {\n        text: 'Sorry, an error occurred while processing your request.',\n        user: 'Bot'\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setInput('');\n    }\n  };\n  const formatResponse = response => {\n    // Custom formatting logic\n    response = response.replace(/\\[(.*?)\\]/g, '\\n\\n');\n    response = response.replace(/(\\w+)\\.\\n\\n/g, '$1\\n');\n    response = response.replace(/\\.\\n\\n/g, '.\\n');\n    response = response.replace(/^\\s+|\\s+$/g, '');\n    response = response.replace(/^\"|\"$/g, '');\n    response = response.replace(/\\.\\s+(\\d+)\\./g, '$1.');\n    response = response.replace(/^\\.\\s*/gm, '');\n    response = response.replace(/([^.\\n])$/gm, '.');\n\n    // Link and email formatting\n    const linkRegex = /(https?:\\/\\/[^\\s]+)/g;\n    const urlRegex = /go\\/([^\\s]+)/g;\n    const emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/g;\n    response = response.replace(linkRegex, (match, url) => `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${url}</a>`);\n    response = response.replace(urlRegex, (match, sometext) => `<a href=\"http://go/${sometext}\" target=\"_blank\" rel=\"noopener noreferrer\">go/${sometext}</a>`);\n    response = response.replace(emailRegex, (match, email) => `<a href=\"mailto:${email}\">${email}</a>`);\n    return response;\n  };\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text).then(() => {\n      alert('Copied to clipboard!');\n    }, err => {\n      console.error('Failed to copy text: ', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      padding: '20px',\n      borderRadius: '8px',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat with Source: \", sourceName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f0f0f0',\n        padding: '10px',\n        minHeight: '300px',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        overflowY: 'auto'\n      },\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: message.text\n          },\n          style: {\n            flexGrow: 1,\n            marginLeft: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), message.user === 'Bot' && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: '10px',\n            background: 'none',\n            border: 'none',\n            cursor: 'pointer',\n            padding: '0'\n          },\n          onClick: () => copyToClipboard(message.text),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/copy-icon.png\",\n            alt: \"Copy\",\n            style: {\n              width: '20px',\n              height: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: e => e.key === 'Enter' ? sendMessage() : null,\n      style: {\n        width: 'calc(100% - 20px)',\n        padding: '10px',\n        margin: '10px 0',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        padding: '10px 20px',\n        backgroundColor: '#007bff',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        marginRight: '10px'\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/sources'),\n      style: {\n        padding: '10px 20px',\n        backgroundColor: '#6c757d',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer'\n      },\n      children: \"Back to Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWithSource, \"FuYrc8Tr9v2FtUavTBf6MKCJQQQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatWithSource;\nexport default ChatWithSource;\nvar _c;\n$RefreshReg$(_c, \"ChatWithSource\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","ChatWithSource","_s","sourceName","navigate","messages","setMessages","input","setInput","sendMessage","userMessage","text","user","prevMessages","response","post","question","filters","JSON","stringify","console","log","data","formattedContent","formatResponse","content","botMessage","error","errorMessage","replace","linkRegex","urlRegex","emailRegex","match","url","sometext","email","copyToClipboard","navigator","clipboard","writeText","then","alert","err","style","backgroundColor","padding","borderRadius","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","minHeight","border","overflowY","map","message","index","marginBottom","display","alignItems","dangerouslySetInnerHTML","__html","flexGrow","marginLeft","background","cursor","onClick","src","alt","width","height","type","value","onChange","e","target","onKeyPress","key","margin","color","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ChatWithSource.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ChatWithSource = () => {\r\n    const { sourceName } = useParams();\r\n    const navigate = useNavigate();\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Ensure new data loading for changed sourceName\r\n    }, [sourceName]);\r\n\r\n    const sendMessage = async () => {\r\n        if (!input) return;\r\n\r\n        const userMessage = {\r\n            text: input,\r\n            user: 'Me',\r\n        };\r\n        setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n        try {\r\n            const response = await axios.post(`/chat-with-source/${sourceName}/`, {\r\n                question: input,\r\n                filters: JSON.stringify({}),\r\n            });\r\n            console.log('Received response from API:', response.data);\r\n            let formattedContent = formatResponse(response.data.response.content);\r\n\r\n            const botMessage = {\r\n                text: formattedContent,\r\n                user: 'Bot'\r\n            };\r\n            setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n            const errorMessage = {\r\n                text: 'Sorry, an error occurred while processing your request.',\r\n                user: 'Bot'\r\n            };\r\n            setMessages((prevMessages) => [...prevMessages, errorMessage]);\r\n        } finally {\r\n            setInput('');\r\n        }\r\n    };\r\n\r\n    const formatResponse = (response) => {\r\n        // Custom formatting logic\r\n        response = response.replace(/\\[(.*?)\\]/g, '\\n\\n');\r\n        response = response.replace(/(\\w+)\\.\\n\\n/g, '$1\\n');\r\n        response = response.replace(/\\.\\n\\n/g, '.\\n');\r\n        response = response.replace(/^\\s+|\\s+$/g, '');\r\n        response = response.replace(/^\"|\"$/g, '');\r\n        response = response.replace(/\\.\\s+(\\d+)\\./g, '$1.');\r\n        response = response.replace(/^\\.\\s*/gm, '');\r\n        response = response.replace(/([^.\\n])$/gm, '.');\r\n\r\n        // Link and email formatting\r\n        const linkRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n        const urlRegex = /go\\/([^\\s]+)/g;\r\n        const emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/g;\r\n\r\n        response = response.replace(linkRegex, (match, url) => `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${url}</a>`);\r\n        response = response.replace(urlRegex, (match, sometext) => `<a href=\"http://go/${sometext}\" target=\"_blank\" rel=\"noopener noreferrer\">go/${sometext}</a>`);\r\n        response = response.replace(emailRegex, (match, email) => `<a href=\"mailto:${email}\">${email}</a>`);\r\n\r\n        return response;\r\n    };\r\n\r\n    const copyToClipboard = (text) => {\r\n        navigator.clipboard.writeText(text).then(() => {\r\n            alert('Copied to clipboard!');\r\n        }, (err) => {\r\n            console.error('Failed to copy text: ', err);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={{ backgroundColor: 'white', padding: '20px', borderRadius: '8px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h2>Chat with Source: {sourceName}</h2>\r\n            <div style={{ backgroundColor: '#f0f0f0', padding: '10px', minHeight: '300px', border: '1px solid #ccc', borderRadius: '4px', overflowY: 'auto' }}>\r\n                {messages.map((message, index) => (\r\n                    <div key={index} style={{ marginBottom: '10px', display: 'flex', alignItems: 'center' }}>\r\n                        <strong>{message.user}:</strong>\r\n                        <span dangerouslySetInnerHTML={{ __html: message.text }} style={{ flexGrow: 1, marginLeft: '10px' }} />\r\n                        {message.user === 'Bot' && (\r\n                            <button\r\n                                style={{\r\n                                    marginLeft: '10px',\r\n                                    background: 'none',\r\n                                    border: 'none',\r\n                                    cursor: 'pointer',\r\n                                    padding: '0'\r\n                                }}\r\n                                onClick={() => copyToClipboard(message.text)}\r\n                            >\r\n                                <img src=\"/copy-icon.png\" alt=\"Copy\" style={{ width: '20px', height: '20px' }} />\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onKeyPress={(e) => (e.key === 'Enter' ? sendMessage() : null)}\r\n                style={{ width: 'calc(100% - 20px)', padding: '10px', margin: '10px 0', borderRadius: '4px', border: '1px solid #ccc' }}\r\n            />\r\n            <button\r\n                onClick={sendMessage}\r\n                style={{\r\n                    padding: '10px 20px',\r\n                    backgroundColor: '#007bff',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer',\r\n                    marginRight: '10px'\r\n                }}\r\n            >\r\n                Send\r\n            </button>\r\n            <button\r\n                onClick={() => navigate('/sources')}\r\n                style={{\r\n                    padding: '10px 20px',\r\n                    backgroundColor: '#6c757d',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer'\r\n                }}\r\n            >\r\n                Back to Sources\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatWithSource;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}