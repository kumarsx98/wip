{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ChatWithSource.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from './Header';\nimport ConversationBox from './ConversationBox';\nimport InputBox from './InputBox';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWithSource() {\n  _s();\n  const {\n    sourceName\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [question, setQuestion] = useState('');\n  const conversationBoxRef = useRef(null);\n  useEffect(() => {\n    if (conversationBoxRef.current) {\n      conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const message = e.target.message.value.trim();\n    if (message !== '') {\n      setIsLoading(true);\n      setShowSpinner(true);\n      setMessages(prevMessages => [...prevMessages, {\n        text: message,\n        sender: 'user'\n      }]);\n      setQuestion('');\n      try {\n        const response = await axios.post(`/chat-with-source/${sourceName}/`, {\n          question: message,\n          filters: JSON.stringify({})\n        });\n        console.log('Received response from API:', response.data);\n        if (response.data.error) {\n          throw new Error(response.data.error);\n        }\n        let formattedContent = formatResponse(response.data.response.content);\n        setMessages(prevMessages => [...prevMessages, {\n          text: formattedContent,\n          sender: 'bot',\n          copyButton: true,\n          filenames: response.data.response.references ? response.data.response.references.map(ref => ref.filename) : []\n        }]);\n      } catch (error) {\n        console.error('Error occurred during API request:', error);\n        let errorMessage = 'Sorry, an error occurred while processing your request.';\n        if (error.response) {\n          errorMessage = `Error: ${error.response.data.error || error.response.statusText}`;\n          if (error.response.data.details) {\n            errorMessage += ` Details: ${error.response.data.details}`;\n          }\n        } else if (error.request) {\n          errorMessage = 'No response received from the server.';\n        } else {\n          errorMessage = error.message;\n        }\n        setMessages(prevMessages => [...prevMessages, {\n          text: errorMessage,\n          sender: 'bot',\n          copyButton: false\n        }]);\n      } finally {\n        setIsLoading(false);\n        setShowSpinner(false);\n      }\n    }\n  };\n  const formatResponse = response => {\n    response = response.replace(/\\[(.*?)\\]/g, '\\n\\n');\n    response = response.replace(/(\\w+)\\.\\n\\n/g, '$1\\n');\n    response = response.replace(/\\.\\n\\n/g, '.\\n');\n    response = response.replace(/^\\s+|\\s+$/g, '');\n    response = response.replace(/^\"|\"$/g, '');\n    response = response.replace(/\\.\\s+(\\d+)\\./g, '$1.');\n    response = response.replace(/^\\.\\s*/gm, '');\n    response = response.replace(/([^.\\n])$/gm, '.');\n    const linkRegex = /(https?:\\/\\/[^\\s]+)/g;\n    response = response.replace(linkRegex, (match, url) => {\n      return `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${url}</a>`;\n    });\n    const urlRegex = /go\\/([^\\s]+)/g;\n    response = response.replace(urlRegex, (match, sometext) => {\n      const href = `http://go/${sometext}`;\n      return `<a href=\"${href}\" target=\"_blank\" rel=\"noopener noreferrer\">go/${sometext}</a>`;\n    });\n    const emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/g;\n    response = response.replace(emailRegex, (match, email) => {\n      const href = `mailto:${email}`;\n      return `<a href=\"${href}\">${email}</a>`;\n    });\n    return response;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ChatWithSource`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConversationBox, {\n      className: `conversation-box`,\n      messages: messages,\n      isLoading: isLoading,\n      conversationBoxRef: conversationBoxRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      question: question,\n      setQuestion: setQuestion,\n      handleSendMessage: handleSendMessage,\n      isLoading: isLoading,\n      showSpinner: showSpinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWithSource, \"JlrNPDV9WhETtwbdGYfuuYOavFk=\", false, function () {\n  return [useParams];\n});\n_c = ChatWithSource;\nexport default ChatWithSource;\nvar _c;\n$RefreshReg$(_c, \"ChatWithSource\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useParams","axios","Header","ConversationBox","InputBox","jsxDEV","_jsxDEV","ChatWithSource","_s","sourceName","messages","setMessages","isLoading","setIsLoading","showSpinner","setShowSpinner","question","setQuestion","conversationBoxRef","current","scrollTop","scrollHeight","handleSendMessage","e","preventDefault","message","target","value","trim","prevMessages","text","sender","response","post","filters","JSON","stringify","console","log","data","error","Error","formattedContent","formatResponse","content","copyButton","filenames","references","map","ref","filename","errorMessage","statusText","details","request","replace","linkRegex","match","url","urlRegex","sometext","href","emailRegex","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ChatWithSource.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from './Header';\r\nimport ConversationBox from './ConversationBox';\r\nimport InputBox from './InputBox';\r\nimport './App.css';\r\n\r\nfunction ChatWithSource() {\r\n  const { sourceName } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [question, setQuestion] = useState('');\r\n  const conversationBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (conversationBoxRef.current) {\r\n      conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const message = e.target.message.value.trim();\r\n\r\n    if (message !== '') {\r\n      setIsLoading(true);\r\n      setShowSpinner(true);\r\n      setMessages(prevMessages => [...prevMessages, { text: message, sender: 'user' }]);\r\n      setQuestion('');\r\n\r\n      try {\r\n        const response = await axios.post(`/chat-with-source/${sourceName}/`, {\r\n          question: message,\r\n          filters: JSON.stringify({})\r\n        });\r\n        console.log('Received response from API:', response.data);\r\n\r\n        if (response.data.error) {\r\n          throw new Error(response.data.error);\r\n        }\r\n\r\n        let formattedContent = formatResponse(response.data.response.content);\r\n\r\n        setMessages(prevMessages => [\r\n          ...prevMessages,\r\n          {\r\n            text: formattedContent,\r\n            sender: 'bot',\r\n            copyButton: true,\r\n            filenames: response.data.response.references ? response.data.response.references.map((ref) => ref.filename) : [],\r\n          },\r\n        ]);\r\n\r\n      } catch (error) {\r\n        console.error('Error occurred during API request:', error);\r\n        let errorMessage = 'Sorry, an error occurred while processing your request.';\r\n        if (error.response) {\r\n          errorMessage = `Error: ${error.response.data.error || error.response.statusText}`;\r\n          if (error.response.data.details) {\r\n            errorMessage += ` Details: ${error.response.data.details}`;\r\n          }\r\n        } else if (error.request) {\r\n          errorMessage = 'No response received from the server.';\r\n        } else {\r\n          errorMessage = error.message;\r\n        }\r\n        setMessages(prevMessages => [\r\n          ...prevMessages,\r\n          {\r\n            text: errorMessage,\r\n            sender: 'bot',\r\n            copyButton: false,\r\n          },\r\n        ]);\r\n      } finally {\r\n        setIsLoading(false);\r\n        setShowSpinner(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatResponse = (response) => {\r\n    response = response.replace(/\\[(.*?)\\]/g, '\\n\\n');\r\n    response = response.replace(/(\\w+)\\.\\n\\n/g, '$1\\n');\r\n    response = response.replace(/\\.\\n\\n/g, '.\\n');\r\n    response = response.replace(/^\\s+|\\s+$/g, '');\r\n    response = response.replace(/^\"|\"$/g, '');\r\n    response = response.replace(/\\.\\s+(\\d+)\\./g, '$1.');\r\n    response = response.replace(/^\\.\\s*/gm, '');\r\n    response = response.replace(/([^.\\n])$/gm, '.');\r\n\r\n    const linkRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n    response = response.replace(linkRegex, (match, url) => {\r\n      return `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${url}</a>`;\r\n    });\r\n\r\n    const urlRegex = /go\\/([^\\s]+)/g;\r\n    response = response.replace(urlRegex, (match, sometext) => {\r\n      const href = `http://go/${sometext}`;\r\n      return `<a href=\"${href}\" target=\"_blank\" rel=\"noopener noreferrer\">go/${sometext}</a>`;\r\n    });\r\n\r\n    const emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/g;\r\n    response = response.replace(emailRegex, (match, email) => {\r\n      const href = `mailto:${email}`;\r\n      return `<a href=\"${href}\">${email}</a>`;\r\n    });\r\n\r\n    return response;\r\n  };\r\n\r\n  return (\r\n    <div className={`ChatWithSource`}>\r\n      <Header />\r\n      <ConversationBox\r\n        className={`conversation-box`}\r\n        messages={messages}\r\n        isLoading={isLoading}\r\n        conversationBoxRef={conversationBoxRef}\r\n      />\r\n      <InputBox\r\n        question={question}\r\n        setQuestion={setQuestion}\r\n        handleSendMessage={handleSendMessage}\r\n        isLoading={isLoading}\r\n        showSpinner={showSpinner}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWithSource;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}