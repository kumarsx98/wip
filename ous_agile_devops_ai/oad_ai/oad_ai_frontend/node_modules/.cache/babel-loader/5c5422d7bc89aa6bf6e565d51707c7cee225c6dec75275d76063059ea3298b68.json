{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListSources() {\n  _s();\n  const [globalSources, setGlobalSources] = useState([]);\n  const [privateSources, setPrivateSources] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadSteps, setUploadSteps] = useState([]);\n  const [sortField, setSortField] = useState('filename');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const formatDate = dateString => {\n    if (dateString && dateString !== '') {\n      return new Date(dateString).toLocaleString();\n    }\n    return 'N/A';\n  };\n  const handleSort = field => {\n    if (field === sortField) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n  const sortDocuments = docs => {\n    return docs.sort((a, b) => {\n      let comparison = 0;\n      if (a[sortField] < b[sortField]) {\n        comparison = -1;\n      } else if (a[sortField] > b[sortField]) {\n        comparison = 1;\n      }\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  };\n  const refreshData = async () => {\n    await fetchSources();\n    if (selectedSource) {\n      await fetchDocuments(selectedSource);\n    }\n  };\n  useEffect(() => {\n    refreshData();\n  }, []);\n  const fetchSources = async () => {\n    setIsLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.get('/chatbot1/list-sources/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        setGlobalSources(response.data.global_sources || []);\n        setPrivateSources(response.data.private_sources || []);\n      } else {\n        setMessage('An error occurred while fetching the sources.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error during source fetching:', error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred while fetching the sources.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchDocuments = async source => {\n    setIsLoading(true);\n    setMessage('');\n    setSelectedSource(source);\n    try {\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200 && response.data.documents) {\n        const docs = response.data.documents.documents.map(doc => ({\n          ...doc,\n          path: doc.path || `/chatbot1/media/documents/${source}/${doc.filename}`,\n          created_at: doc.created_at || null,\n          modified_at: doc.modified_at || null\n        }));\n        setDocuments(docs);\n        setMessage(docs.length === 0 ? 'No documents found.' : '');\n      } else {\n        setMessage('An error occurred while fetching the documents.');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error during document fetching:', error);\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'An error occurred while fetching the documents.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getCookie = name => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  };\n  const handleSyncSource = async () => {\n    try {\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      alert(response.data.message);\n      fetchDocuments(selectedSource);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error syncing source:', error);\n      alert(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'An error occurred during synchronization. Please check the server logs for more details.');\n    }\n  };\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile || !selectedSource) {\n      setMessage('Please select a file and a source to upload.');\n      return;\n    }\n    setIsLoading(true);\n    setMessage('');\n    setUploadProgress(0);\n    setUploadStatus('Preparing upload...');\n    setUploadSteps([]);\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true,\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n          setUploadStatus(`Uploading: ${percentCompleted}%`);\n        }\n      });\n      if (response.status === 200 || response.status === 201) {\n        setUploadStatus('Upload successful. Processing document...');\n        setUploadSteps(prevSteps => [...prevSteps, 'Document uploaded successfully']);\n        await pollUploadStatus(selectedSource, response.data.task_id);\n      } else if (response.status === 202) {\n        setUploadStatus('Document replaced successfully. Processing...');\n        setUploadSteps(prevSteps => [...prevSteps, 'Document replaced successfully']);\n        await pollUploadStatus(selectedSource, response.data.task_id);\n      } else {\n        setUploadStatus('Upload failed');\n        setMessage('An error occurred while uploading the document.');\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Error during document upload:', error);\n      setUploadStatus('Upload failed');\n      setMessage(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'An error occurred while uploading the document.');\n    } finally {\n      setIsLoading(false);\n      setUploadProgress(0);\n      setSelectedFile(null);\n    }\n  };\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\n    for (let i = 0; i < maxAttempts; i++) {\n      try {\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\n          headers: {\n            'X-CSRFToken': getCookie('csrftoken')\n          },\n          withCredentials: true\n        });\n        if (response.data.status === 'SUCCESS') {\n          setUploadStatus('Upload and processing completed successfully');\n          setUploadSteps(prevSteps => [...prevSteps, 'Document processed successfully']);\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          await fetchDocuments(source);\n          return;\n        } else if (response.data.status === 'ERROR') {\n          setUploadStatus('Upload failed');\n          setUploadSteps(prevSteps => [...prevSteps, 'Error during document processing']);\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          return;\n        }\n        setUploadStatus(`Processing document... (Attempt ${i + 1}/${maxAttempts})`);\n        setUploadSteps(prevSteps => [...prevSteps, `Processing attempt ${i + 1}`]);\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      } catch (error) {\n        console.error('Error polling upload status:', error);\n        setUploadStatus('Error checking upload status');\n        setMessage(`Error checking upload status: ${error.message}`);\n        return;\n      }\n    }\n    setUploadStatus('Upload status check timed out');\n    setMessage('Upload status check timed out. The upload may still be in progress.');\n  };\n  const renderSourceList = (sources, title) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), sources.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sources.map(source => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchDocuments(source),\n          style: {\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            padding: '10px',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSyncSource(source),\n          style: {\n            backgroundColor: '#28a745',\n            color: 'white',\n            border: 'none',\n            padding: '10px',\n            borderRadius: '5px',\n            marginLeft: '10px',\n            cursor: 'pointer'\n          },\n          children: \"Sync\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this)]\n      }, source, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No sources available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n  const renderDocumentList = () => {\n    const sortedDocuments = sortDocuments(documents);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: '#444',\n          marginTop: '20px'\n        },\n        children: \"Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSort('filename'),\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    color: '#007bff',\n                    cursor: 'pointer'\n                  },\n                  children: [\"Filename \", sortField === 'filename' && (sortDirection === 'asc' ? '↑' : '↓')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSort('created_at'),\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    color: '#007bff',\n                    cursor: 'pointer'\n                  },\n                  children: [\"Created At \", sortField === 'created_at' && (sortDirection === 'asc' ? '↑' : '↓')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSort('modified_at'),\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    color: '#007bff',\n                    cursor: 'pointer'\n                  },\n                  children: [\"Modified At \", sortField === 'modified_at' && (sortDirection === 'asc' ? '↑' : '↓')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Path\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: sortedDocuments.map((doc, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(doc.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(doc.modified_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: doc.path,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: doc.path\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No documents available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: \"List Sources and Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Source:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSelectedSource(e.target.value),\n          value: selectedSource,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), [...globalSources, ...privateSources].map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: source,\n            children: source\n          }, source, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        style: {\n          backgroundColor: '#007bff',\n          color: 'white',\n          border: 'none',\n          padding: '10px',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", uploadStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Progress: \", uploadProgress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: step\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderSourceList(globalSources, 'Global Sources'), renderSourceList(privateSources, 'Private Sources')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderDocumentList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n}\n_s(ListSources, \"bXOcoTJkMuDheJQ4Edvd8dOpS/A=\");\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ListSources","_s","globalSources","setGlobalSources","privateSources","setPrivateSources","selectedSource","setSelectedSource","documents","setDocuments","message","setMessage","isLoading","setIsLoading","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","uploadSteps","setUploadSteps","sortField","setSortField","sortDirection","setSortDirection","formatDate","dateString","Date","toLocaleString","handleSort","field","sortDocuments","docs","sort","a","b","comparison","refreshData","fetchSources","fetchDocuments","response","get","headers","getCookie","withCredentials","status","data","global_sources","private_sources","error","_error$response","_error$response$data","console","source","map","doc","path","filename","created_at","modified_at","length","_error$response2","_error$response2$data","name","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","handleSyncSource","post","alert","_error$response3","_error$response3$data","handleFileChange","event","target","files","handleUpload","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","prevSteps","pollUploadStatus","task_id","_error$response4","_error$response4$data","taskId","maxAttempts","JSON","stringify","full_response","Promise","resolve","setTimeout","renderSourceList","sources","title","children","style","color","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","backgroundColor","border","padding","borderRadius","cursor","marginLeft","renderDocumentList","sortedDocuments","background","index","href","rel","textAlign","onChange","e","value","type","step","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ListSources() {\r\n  const [globalSources, setGlobalSources] = useState([]);\r\n  const [privateSources, setPrivateSources] = useState([]);\r\n  const [selectedSource, setSelectedSource] = useState(null);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [uploadSteps, setUploadSteps] = useState([]);\r\n  const [sortField, setSortField] = useState('filename');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n\r\n  const formatDate = (dateString) => {\r\n    if (dateString && dateString !== '') {\r\n      return new Date(dateString).toLocaleString();\r\n    }\r\n    return 'N/A';\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    if (field === sortField) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const sortDocuments = (docs) => {\r\n    return docs.sort((a, b) => {\r\n      let comparison = 0;\r\n      if (a[sortField] < b[sortField]) {\r\n        comparison = -1;\r\n      } else if (a[sortField] > b[sortField]) {\r\n        comparison = 1;\r\n      }\r\n      return sortDirection === 'asc' ? comparison : -comparison;\r\n    });\r\n  };\r\n\r\n  const refreshData = async () => {\r\n    await fetchSources();\r\n    if (selectedSource) {\r\n      await fetchDocuments(selectedSource);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, []);\r\n\r\n  const fetchSources = async () => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-sources/', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setGlobalSources(response.data.global_sources || []);\r\n        setPrivateSources(response.data.private_sources || []);\r\n      } else {\r\n        setMessage('An error occurred while fetching the sources.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during source fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the sources.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDocuments = async (source) => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setSelectedSource(source);\r\n\r\n    try {\r\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200 && response.data.documents) {\r\n        const docs = response.data.documents.documents.map(doc => ({\r\n          ...doc,\r\n          path: doc.path || `/chatbot1/media/documents/${source}/${doc.filename}`,\r\n          created_at: doc.created_at || null,\r\n          modified_at: doc.modified_at || null\r\n        }));\r\n        setDocuments(docs);\r\n        setMessage(docs.length === 0 ? 'No documents found.' : '');\r\n      } else {\r\n        setMessage('An error occurred while fetching the documents.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the documents.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const handleSyncSource = async () => {\r\n    try {\r\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n      alert(response.data.message);\r\n      fetchDocuments(selectedSource);\r\n    } catch (error) {\r\n      console.error('Error syncing source:', error);\r\n      alert(error.response?.data?.error || 'An error occurred during synchronization. Please check the server logs for more details.');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile || !selectedSource) {\r\n      setMessage('Please select a file and a source to upload.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setUploadProgress(0);\r\n    setUploadStatus('Preparing upload...');\r\n    setUploadSteps([]);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n\r\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percentCompleted);\r\n          setUploadStatus(`Uploading: ${percentCompleted}%`);\r\n        }\r\n      });\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        setUploadStatus('Upload successful. Processing document...');\r\n        setUploadSteps(prevSteps => [...prevSteps, 'Document uploaded successfully']);\r\n        await pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else if (response.status === 202) {\r\n        setUploadStatus('Document replaced successfully. Processing...');\r\n        setUploadSteps(prevSteps => [...prevSteps, 'Document replaced successfully']);\r\n        await pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else {\r\n        setUploadStatus('Upload failed');\r\n        setMessage('An error occurred while uploading the document.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document upload:', error);\r\n      setUploadStatus('Upload failed');\r\n      setMessage(error.response?.data?.error || 'An error occurred while uploading the document.');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setUploadProgress(0);\r\n      setSelectedFile(null);\r\n    }\r\n  };\r\n\r\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\r\n    for (let i = 0; i < maxAttempts; i++) {\r\n      try {\r\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\r\n          headers: {\r\n            'X-CSRFToken': getCookie('csrftoken'),\r\n          },\r\n          withCredentials: true\r\n        });\r\n\r\n        if (response.data.status === 'SUCCESS') {\r\n          setUploadStatus('Upload and processing completed successfully');\r\n          setUploadSteps(prevSteps => [...prevSteps, 'Document processed successfully']);\r\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          await fetchDocuments(source);\r\n          return;\r\n        } else if (response.data.status === 'ERROR') {\r\n          setUploadStatus('Upload failed');\r\n          setUploadSteps(prevSteps => [...prevSteps, 'Error during document processing']);\r\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          return;\r\n        }\r\n\r\n        setUploadStatus(`Processing document... (Attempt ${i + 1}/${maxAttempts})`);\r\n        setUploadSteps(prevSteps => [...prevSteps, `Processing attempt ${i + 1}`]);\r\n        await new Promise(resolve => setTimeout(resolve, 5000));\r\n      } catch (error) {\r\n        console.error('Error polling upload status:', error);\r\n        setUploadStatus('Error checking upload status');\r\n        setMessage(`Error checking upload status: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setUploadStatus('Upload status check timed out');\r\n    setMessage('Upload status check timed out. The upload may still be in progress.');\r\n  };\r\n\r\n  const renderSourceList = (sources, title) => (\r\n    <div>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>{title}</h2>\r\n      {sources.length > 0 ? (\r\n        <ul>\r\n          {sources.map(source => (\r\n            <li key={source} style={{ marginBottom: '10px' }}>\r\n              <button onClick={() => fetchDocuments(source)} style={{ backgroundColor: '#007bff', color: 'white', border: 'none', padding: '10px', borderRadius: '5px', cursor: 'pointer' }}>\r\n                {source}\r\n              </button>\r\n              <button onClick={() => handleSyncSource(source)} style={{ backgroundColor: '#28a745', color: 'white', border: 'none', padding: '10px', borderRadius: '5px', marginLeft: '10px', cursor: 'pointer' }}>\r\n                Sync\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No sources available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderDocumentList = () => {\r\n    const sortedDocuments = sortDocuments(documents);\r\n\r\n    return (\r\n      <div>\r\n        <h2 style={{ color: '#444', marginTop: '20px' }}>Documents</h2>\r\n        {documents.length > 0 ? (\r\n          <div>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <button onClick={() => handleSort('filename')} style={{ background: 'none', border: 'none', color: '#007bff', cursor: 'pointer' }}>\r\n                      Filename {sortField === 'filename' && (sortDirection === 'asc' ? '↑' : '↓')}\r\n                    </button>\r\n                  </th>\r\n                  <th>\r\n                    <button onClick={() => handleSort('created_at')} style={{ background: 'none', border: 'none', color: '#007bff', cursor: 'pointer' }}>\r\n                      Created At {sortField === 'created_at' && (sortDirection === 'asc' ? '↑' : '↓')}\r\n                    </button>\r\n                  </th>\r\n                  <th>\r\n                    <button onClick={() => handleSort('modified_at')} style={{ background: 'none', border: 'none', color: '#007bff', cursor: 'pointer' }}>\r\n                      Modified At {sortField === 'modified_at' && (sortDirection === 'asc' ? '↑' : '↓')}\r\n                    </button>\r\n                  </th>\r\n                  <th>Path</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {sortedDocuments.map((doc, index) => (\r\n                  <tr key={index}>\r\n                    <td>{doc.filename}</td>\r\n                    <td>{formatDate(doc.created_at)}</td>\r\n                    <td>{formatDate(doc.modified_at)}</td>\r\n                    <td><a href={doc.path} target=\"_blank\" rel=\"noopener noreferrer\">{doc.path}</a></td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          <p>No documents available.</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', marginBottom: '20px' }}>List Sources and Documents</h1>\r\n      {isLoading && <p>Loading...</p>}\r\n      {message && <p style={{ color: 'red' }}>{message}</p>}\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h2>Upload Document</h2>\r\n        <label>\r\n          Select Source:\r\n          <select onChange={e => setSelectedSource(e.target.value)} value={selectedSource}>\r\n            <option value=\"\">Select a source</option>\r\n            {[...globalSources, ...privateSources].map(source => (\r\n              <option key={source} value={source}>{source}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload} style={{ backgroundColor: '#007bff', color: 'white', border: 'none', padding: '10px', borderRadius: '5px', cursor: 'pointer' }}>\r\n          Upload\r\n        </button>\r\n        <p>Status: {uploadStatus}</p>\r\n        <p>Progress: {uploadProgress}%</p>\r\n        <ul>\r\n          {uploadSteps.map((step, index) => (\r\n            <li key={index}>{step}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        {renderSourceList(globalSources, 'Global Sources')}\r\n        {renderSourceList(privateSources, 'Private Sources')}\r\n      </div>\r\n\r\n      <div>\r\n        {renderDocumentList()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListSources;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,UAAU,CAAC;EACtD,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAM+B,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAIA,UAAU,IAAIA,UAAU,KAAK,EAAE,EAAE;MACnC,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,cAAc,CAAC,CAAC;IAC9C;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC5B,IAAIA,KAAK,KAAKT,SAAS,EAAE;MACvBG,gBAAgB,CAACD,aAAa,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;IAC5D,CAAC,MAAM;MACLD,YAAY,CAACQ,KAAK,CAAC;MACnBN,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;EAED,MAAMO,aAAa,GAAIC,IAAI,IAAK;IAC9B,OAAOA,IAAI,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACzB,IAAIC,UAAU,GAAG,CAAC;MAClB,IAAIF,CAAC,CAACb,SAAS,CAAC,GAAGc,CAAC,CAACd,SAAS,CAAC,EAAE;QAC/Be,UAAU,GAAG,CAAC,CAAC;MACjB,CAAC,MAAM,IAAIF,CAAC,CAACb,SAAS,CAAC,GAAGc,CAAC,CAACd,SAAS,CAAC,EAAE;QACtCe,UAAU,GAAG,CAAC;MAChB;MACA,OAAOb,aAAa,KAAK,KAAK,GAAGa,UAAU,GAAG,CAACA,UAAU;IAC3D,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,YAAY,CAAC,CAAC;IACpB,IAAIjC,cAAc,EAAE;MAClB,MAAMkC,cAAc,CAAClC,cAAc,CAAC;IACtC;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd0C,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B1B,YAAY,CAAC,IAAI,CAAC;IAClBF,UAAU,CAAC,EAAE,CAAC;IAEd,IAAI;MACF,MAAM8B,QAAQ,GAAG,MAAM5C,KAAK,CAAC6C,GAAG,CAAC,yBAAyB,EAAE;QAC1DC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,aAAa,EAAEC,SAAS,CAAC,WAAW;QACtC,CAAC;QACDC,eAAe,EAAE;MACnB,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAC3B3C,gBAAgB,CAACsC,QAAQ,CAACM,IAAI,CAACC,cAAc,IAAI,EAAE,CAAC;QACpD3C,iBAAiB,CAACoC,QAAQ,CAACM,IAAI,CAACE,eAAe,IAAI,EAAE,CAAC;MACxD,CAAC,MAAM;QACLtC,UAAU,CAAC,+CAA+C,CAAC;MAC7D;IACF,CAAC,CAAC,OAAOuC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACH,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDvC,UAAU,CAAC,EAAAwC,eAAA,GAAAD,KAAK,CAACT,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBJ,IAAI,cAAAK,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,+CAA+C,CAAC;IAC5F,CAAC,SAAS;MACRrC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM2B,cAAc,GAAG,MAAOc,MAAM,IAAK;IACvCzC,YAAY,CAAC,IAAI,CAAC;IAClBF,UAAU,CAAC,EAAE,CAAC;IACdJ,iBAAiB,CAAC+C,MAAM,CAAC;IAEzB,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAM5C,KAAK,CAAC6C,GAAG,CAAC,4BAA4BY,MAAM,GAAG,EAAE;QACtEX,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,aAAa,EAAEC,SAAS,CAAC,WAAW;QACtC,CAAC;QACDC,eAAe,EAAE;MACnB,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAIL,QAAQ,CAACM,IAAI,CAACvC,SAAS,EAAE;QACtD,MAAMyB,IAAI,GAAGQ,QAAQ,CAACM,IAAI,CAACvC,SAAS,CAACA,SAAS,CAAC+C,GAAG,CAACC,GAAG,KAAK;UACzD,GAAGA,GAAG;UACNC,IAAI,EAAED,GAAG,CAACC,IAAI,IAAI,6BAA6BH,MAAM,IAAIE,GAAG,CAACE,QAAQ,EAAE;UACvEC,UAAU,EAAEH,GAAG,CAACG,UAAU,IAAI,IAAI;UAClCC,WAAW,EAAEJ,GAAG,CAACI,WAAW,IAAI;QAClC,CAAC,CAAC,CAAC;QACHnD,YAAY,CAACwB,IAAI,CAAC;QAClBtB,UAAU,CAACsB,IAAI,CAAC4B,MAAM,KAAK,CAAC,GAAG,qBAAqB,GAAG,EAAE,CAAC;MAC5D,CAAC,MAAM;QACLlD,UAAU,CAAC,iDAAiD,CAAC;MAC/D;IACF,CAAC,CAAC,OAAOuC,KAAK,EAAE;MAAA,IAAAY,gBAAA,EAAAC,qBAAA;MACdV,OAAO,CAACH,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDvC,UAAU,CAAC,EAAAmD,gBAAA,GAAAZ,KAAK,CAACT,QAAQ,cAAAqB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBf,IAAI,cAAAgB,qBAAA,uBAApBA,qBAAA,CAAsBb,KAAK,KAAI,iDAAiD,CAAC;IAC9F,CAAC,SAAS;MACRrC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM+B,SAAS,GAAIoB,IAAI,IAAK;IAC1B,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAIC,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACC,MAAM,KAAK,EAAE,EAAE;MAC7C,MAAMC,OAAO,GAAGF,QAAQ,CAACC,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC;MAC1C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACP,MAAM,EAAES,CAAC,EAAE,EAAE;QACvC,MAAMH,MAAM,GAAGC,OAAO,CAACE,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;QAChC,IAAIJ,MAAM,CAACK,SAAS,CAAC,CAAC,EAAER,IAAI,CAACH,MAAM,GAAG,CAAC,CAAC,KAAK,GAAGG,IAAI,GAAG,EAAE;UACvDC,WAAW,GAAGQ,kBAAkB,CAACN,MAAM,CAACK,SAAS,CAACR,IAAI,CAACH,MAAM,GAAG,CAAC,CAAC,CAAC;UACnE;QACF;MACF;IACF;IACA,OAAOI,WAAW;EACpB,CAAC;EAED,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMjC,QAAQ,GAAG,MAAM5C,KAAK,CAAC8E,IAAI,CAAC,yBAAyBrE,cAAc,GAAG,EAAE,CAAC,CAAC,EAAE;QAChFqC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,aAAa,EAAEC,SAAS,CAAC,WAAW;QACtC,CAAC;QACDC,eAAe,EAAE;MACnB,CAAC,CAAC;MACF+B,KAAK,CAACnC,QAAQ,CAACM,IAAI,CAACrC,OAAO,CAAC;MAC5B8B,cAAc,CAAClC,cAAc,CAAC;IAChC,CAAC,CAAC,OAAO4C,KAAK,EAAE;MAAA,IAAA2B,gBAAA,EAAAC,qBAAA;MACdzB,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C0B,KAAK,CAAC,EAAAC,gBAAA,GAAA3B,KAAK,CAACT,QAAQ,cAAAoC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB9B,IAAI,cAAA+B,qBAAA,uBAApBA,qBAAA,CAAsB5B,KAAK,KAAI,0FAA0F,CAAC;IAClI;EACF,CAAC;EAED,MAAM6B,gBAAgB,GAAIC,KAAK,IAAK;IAClCjE,eAAe,CAACiE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACrE,YAAY,IAAI,CAACR,cAAc,EAAE;MACpCK,UAAU,CAAC,8CAA8C,CAAC;MAC1D;IACF;IAEAE,YAAY,CAAC,IAAI,CAAC;IAClBF,UAAU,CAAC,EAAE,CAAC;IACdM,iBAAiB,CAAC,CAAC,CAAC;IACpBE,eAAe,CAAC,qBAAqB,CAAC;IACtCE,cAAc,CAAC,EAAE,CAAC;IAElB,IAAI;MACF,MAAM+D,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAExE,YAAY,CAAC;MAErC,MAAM2B,QAAQ,GAAG,MAAM5C,KAAK,CAAC8E,IAAI,CAAC,6BAA6BrE,cAAc,GAAG,EAAE8E,QAAQ,EAAE;QAC1FzC,OAAO,EAAE;UACP,cAAc,EAAE,qBAAqB;UACrC,aAAa,EAAEC,SAAS,CAAC,WAAW;QACtC,CAAC;QACDC,eAAe,EAAE,IAAI;QACrB0C,gBAAgB,EAAGC,aAAa,IAAK;UACnC,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAAEH,aAAa,CAACI,MAAM,GAAG,GAAG,GAAIJ,aAAa,CAACK,KAAK,CAAC;UACvF5E,iBAAiB,CAACwE,gBAAgB,CAAC;UACnCtE,eAAe,CAAC,cAAcsE,gBAAgB,GAAG,CAAC;QACpD;MACF,CAAC,CAAC;MAEF,IAAIhD,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAIL,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QACtD3B,eAAe,CAAC,2CAA2C,CAAC;QAC5DE,cAAc,CAACyE,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,gCAAgC,CAAC,CAAC;QAC7E,MAAMC,gBAAgB,CAACzF,cAAc,EAAEmC,QAAQ,CAACM,IAAI,CAACiD,OAAO,CAAC;MAC/D,CAAC,MAAM,IAAIvD,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAClC3B,eAAe,CAAC,+CAA+C,CAAC;QAChEE,cAAc,CAACyE,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,gCAAgC,CAAC,CAAC;QAC7E,MAAMC,gBAAgB,CAACzF,cAAc,EAAEmC,QAAQ,CAACM,IAAI,CAACiD,OAAO,CAAC;MAC/D,CAAC,MAAM;QACL7E,eAAe,CAAC,eAAe,CAAC;QAChCR,UAAU,CAAC,iDAAiD,CAAC;MAC/D;IACF,CAAC,CAAC,OAAOuC,KAAK,EAAE;MAAA,IAAA+C,gBAAA,EAAAC,qBAAA;MACd7C,OAAO,CAACH,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD/B,eAAe,CAAC,eAAe,CAAC;MAChCR,UAAU,CAAC,EAAAsF,gBAAA,GAAA/C,KAAK,CAACT,QAAQ,cAAAwD,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBlD,IAAI,cAAAmD,qBAAA,uBAApBA,qBAAA,CAAsBhD,KAAK,KAAI,iDAAiD,CAAC;IAC9F,CAAC,SAAS;MACRrC,YAAY,CAAC,KAAK,CAAC;MACnBI,iBAAiB,CAAC,CAAC,CAAC;MACpBF,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAED,MAAMgF,gBAAgB,GAAG,MAAAA,CAAOzC,MAAM,EAAE6C,MAAM,EAAEC,WAAW,GAAG,EAAE,KAAK;IACnE,KAAK,IAAI9B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8B,WAAW,EAAE9B,CAAC,EAAE,EAAE;MACpC,IAAI;QACF,MAAM7B,QAAQ,GAAG,MAAM5C,KAAK,CAAC6C,GAAG,CAAC,iCAAiCY,MAAM,IAAI6C,MAAM,GAAG,EAAE;UACrFxD,OAAO,EAAE;YACP,aAAa,EAAEC,SAAS,CAAC,WAAW;UACtC,CAAC;UACDC,eAAe,EAAE;QACnB,CAAC,CAAC;QAEF,IAAIJ,QAAQ,CAACM,IAAI,CAACD,MAAM,KAAK,SAAS,EAAE;UACtC3B,eAAe,CAAC,8CAA8C,CAAC;UAC/DE,cAAc,CAACyE,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,iCAAiC,CAAC,CAAC;UAC9EnF,UAAU,CAAC,kDAAkD0F,IAAI,CAACC,SAAS,CAAC7D,QAAQ,CAACM,IAAI,CAACwD,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;UACpH,MAAM/D,cAAc,CAACc,MAAM,CAAC;UAC5B;QACF,CAAC,MAAM,IAAIb,QAAQ,CAACM,IAAI,CAACD,MAAM,KAAK,OAAO,EAAE;UAC3C3B,eAAe,CAAC,eAAe,CAAC;UAChCE,cAAc,CAACyE,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,kCAAkC,CAAC,CAAC;UAC/EnF,UAAU,CAAC,0BAA0B8B,QAAQ,CAACM,IAAI,CAACrC,OAAO,oBAAoB2F,IAAI,CAACC,SAAS,CAAC7D,QAAQ,CAACM,IAAI,CAACwD,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;UACrI;QACF;QAEApF,eAAe,CAAC,mCAAmCmD,CAAC,GAAG,CAAC,IAAI8B,WAAW,GAAG,CAAC;QAC3E/E,cAAc,CAACyE,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,sBAAsBxB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC1E,MAAM,IAAIkC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACzD,CAAC,CAAC,OAAOvD,KAAK,EAAE;QACdG,OAAO,CAACH,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD/B,eAAe,CAAC,8BAA8B,CAAC;QAC/CR,UAAU,CAAC,iCAAiCuC,KAAK,CAACxC,OAAO,EAAE,CAAC;QAC5D;MACF;IACF;IAEAS,eAAe,CAAC,+BAA+B,CAAC;IAChDR,UAAU,CAAC,qEAAqE,CAAC;EACnF,CAAC;EAED,MAAMgG,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,KAAK,kBACtC9G,OAAA;IAAA+G,QAAA,gBACE/G,OAAA;MAAIgH,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAH,QAAA,EAAED;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC5DT,OAAO,CAAC/C,MAAM,GAAG,CAAC,gBACjB9D,OAAA;MAAA+G,QAAA,EACGF,OAAO,CAACrD,GAAG,CAACD,MAAM,iBACjBvD,OAAA;QAAiBgH,KAAK,EAAE;UAAEO,YAAY,EAAE;QAAO,CAAE;QAAAR,QAAA,gBAC/C/G,OAAA;UAAQwH,OAAO,EAAEA,CAAA,KAAM/E,cAAc,CAACc,MAAM,CAAE;UAACyD,KAAK,EAAE;YAAES,eAAe,EAAE,SAAS;YAAER,KAAK,EAAE,OAAO;YAAES,MAAM,EAAE,MAAM;YAAEC,OAAO,EAAE,MAAM;YAAEC,YAAY,EAAE,KAAK;YAAEC,MAAM,EAAE;UAAU,CAAE;UAAAd,QAAA,EAC3KxD;QAAM;UAAA4D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACTtH,OAAA;UAAQwH,OAAO,EAAEA,CAAA,KAAM7C,gBAAgB,CAACpB,MAAM,CAAE;UAACyD,KAAK,EAAE;YAAES,eAAe,EAAE,SAAS;YAAER,KAAK,EAAE,OAAO;YAAES,MAAM,EAAE,MAAM;YAAEC,OAAO,EAAE,MAAM;YAAEC,YAAY,EAAE,KAAK;YAAEE,UAAU,EAAE,MAAM;YAAED,MAAM,EAAE;UAAU,CAAE;UAAAd,QAAA,EAAC;QAErM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GANF/D,MAAM;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELtH,OAAA;MAAA+G,QAAA,EAAG;IAAqB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CACN;EAED,MAAMS,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,eAAe,GAAG/F,aAAa,CAACxB,SAAS,CAAC;IAEhD,oBACET,OAAA;MAAA+G,QAAA,gBACE/G,OAAA;QAAIgH,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAH,QAAA,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC9D7G,SAAS,CAACqD,MAAM,GAAG,CAAC,gBACnB9D,OAAA;QAAA+G,QAAA,eACE/G,OAAA;UAAA+G,QAAA,gBACE/G,OAAA;YAAA+G,QAAA,eACE/G,OAAA;cAAA+G,QAAA,gBACE/G,OAAA;gBAAA+G,QAAA,eACE/G,OAAA;kBAAQwH,OAAO,EAAEA,CAAA,KAAMzF,UAAU,CAAC,UAAU,CAAE;kBAACiF,KAAK,EAAE;oBAAEiB,UAAU,EAAE,MAAM;oBAAEP,MAAM,EAAE,MAAM;oBAAET,KAAK,EAAE,SAAS;oBAAEY,MAAM,EAAE;kBAAU,CAAE;kBAAAd,QAAA,GAAC,WACxH,EAACxF,SAAS,KAAK,UAAU,KAAKE,aAAa,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;gBAAA;kBAAA0F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLtH,OAAA;gBAAA+G,QAAA,eACE/G,OAAA;kBAAQwH,OAAO,EAAEA,CAAA,KAAMzF,UAAU,CAAC,YAAY,CAAE;kBAACiF,KAAK,EAAE;oBAAEiB,UAAU,EAAE,MAAM;oBAAEP,MAAM,EAAE,MAAM;oBAAET,KAAK,EAAE,SAAS;oBAAEY,MAAM,EAAE;kBAAU,CAAE;kBAAAd,QAAA,GAAC,aACxH,EAACxF,SAAS,KAAK,YAAY,KAAKE,aAAa,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;gBAAA;kBAAA0F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLtH,OAAA;gBAAA+G,QAAA,eACE/G,OAAA;kBAAQwH,OAAO,EAAEA,CAAA,KAAMzF,UAAU,CAAC,aAAa,CAAE;kBAACiF,KAAK,EAAE;oBAAEiB,UAAU,EAAE,MAAM;oBAAEP,MAAM,EAAE,MAAM;oBAAET,KAAK,EAAE,SAAS;oBAAEY,MAAM,EAAE;kBAAU,CAAE;kBAAAd,QAAA,GAAC,cACxH,EAACxF,SAAS,KAAK,aAAa,KAAKE,aAAa,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;gBAAA;kBAAA0F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3E;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLtH,OAAA;gBAAA+G,QAAA,EAAI;cAAI;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRtH,OAAA;YAAA+G,QAAA,EACGiB,eAAe,CAACxE,GAAG,CAAC,CAACC,GAAG,EAAEyE,KAAK,kBAC9BlI,OAAA;cAAA+G,QAAA,gBACE/G,OAAA;gBAAA+G,QAAA,EAAKtD,GAAG,CAACE;cAAQ;gBAAAwD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvBtH,OAAA;gBAAA+G,QAAA,EAAKpF,UAAU,CAAC8B,GAAG,CAACG,UAAU;cAAC;gBAAAuD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrCtH,OAAA;gBAAA+G,QAAA,EAAKpF,UAAU,CAAC8B,GAAG,CAACI,WAAW;cAAC;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtCtH,OAAA;gBAAA+G,QAAA,eAAI/G,OAAA;kBAAGmI,IAAI,EAAE1E,GAAG,CAACC,IAAK;kBAACwB,MAAM,EAAC,QAAQ;kBAACkD,GAAG,EAAC,qBAAqB;kBAAArB,QAAA,EAAEtD,GAAG,CAACC;gBAAI;kBAAAyD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA,GAJ7EY,KAAK;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,gBAENtH,OAAA;QAAA+G,QAAA,EAAG;MAAuB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC9B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV,CAAC;EAED,oBACEtH,OAAA;IAAA+G,QAAA,gBACE/G,OAAA;MAAIgH,KAAK,EAAE;QAAEqB,SAAS,EAAE,QAAQ;QAAEd,YAAY,EAAE;MAAO,CAAE;MAAAR,QAAA,EAAC;IAA0B;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxFzG,SAAS,iBAAIb,OAAA;MAAA+G,QAAA,EAAG;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC9B3G,OAAO,iBAAIX,OAAA;MAAGgH,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAF,QAAA,EAAEpG;IAAO;MAAAwG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErDtH,OAAA;MAAKgH,KAAK,EAAE;QAAEO,YAAY,EAAE;MAAO,CAAE;MAAAR,QAAA,gBACnC/G,OAAA;QAAA+G,QAAA,EAAI;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBtH,OAAA;QAAA+G,QAAA,GAAO,gBAEL,eAAA/G,OAAA;UAAQsI,QAAQ,EAAEC,CAAC,IAAI/H,iBAAiB,CAAC+H,CAAC,CAACrD,MAAM,CAACsD,KAAK,CAAE;UAACA,KAAK,EAAEjI,cAAe;UAAAwG,QAAA,gBAC9E/G,OAAA;YAAQwI,KAAK,EAAC,EAAE;YAAAzB,QAAA,EAAC;UAAe;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACxC,CAAC,GAAGnH,aAAa,EAAE,GAAGE,cAAc,CAAC,CAACmD,GAAG,CAACD,MAAM,iBAC/CvD,OAAA;YAAqBwI,KAAK,EAAEjF,MAAO;YAAAwD,QAAA,EAAExD;UAAM,GAA9BA,MAAM;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiC,CACrD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACRtH,OAAA;QAAAmH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNtH,OAAA;QAAOyI,IAAI,EAAC,MAAM;QAACH,QAAQ,EAAEtD;MAAiB;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDtH,OAAA;QAAQwH,OAAO,EAAEpC,YAAa;QAAC4B,KAAK,EAAE;UAAES,eAAe,EAAE,SAAS;UAAER,KAAK,EAAE,OAAO;UAAES,MAAM,EAAE,MAAM;UAAEC,OAAO,EAAE,MAAM;UAAEC,YAAY,EAAE,KAAK;UAAEC,MAAM,EAAE;QAAU,CAAE;QAAAd,QAAA,EAAC;MAE/J;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtH,OAAA;QAAA+G,QAAA,GAAG,UAAQ,EAAC5F,YAAY;MAAA;QAAAgG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BtH,OAAA;QAAA+G,QAAA,GAAG,YAAU,EAAC9F,cAAc,EAAC,GAAC;MAAA;QAAAkG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClCtH,OAAA;QAAA+G,QAAA,EACG1F,WAAW,CAACmC,GAAG,CAAC,CAACkF,IAAI,EAAER,KAAK,kBAC3BlI,OAAA;UAAA+G,QAAA,EAAiB2B;QAAI,GAAZR,KAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENtH,OAAA;MAAA+G,QAAA,GACGH,gBAAgB,CAACzG,aAAa,EAAE,gBAAgB,CAAC,EACjDyG,gBAAgB,CAACvG,cAAc,EAAE,iBAAiB,CAAC;IAAA;MAAA8G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eAENtH,OAAA;MAAA+G,QAAA,EACGgB,kBAAkB,CAAC;IAAC;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpH,EAAA,CA/VQD,WAAW;AAAA0I,EAAA,GAAX1I,WAAW;AAiWpB,eAAeA,WAAW;AAAC,IAAA0I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}