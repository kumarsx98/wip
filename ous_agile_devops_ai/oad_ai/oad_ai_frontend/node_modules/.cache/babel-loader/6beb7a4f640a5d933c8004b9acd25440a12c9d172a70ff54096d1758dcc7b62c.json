{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListSources = () => {\n  _s();\n  const [sources, setSources] = useState([]);\n  const [sourceName, setSourceName] = useState('');\n  const [documents, setDocuments] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState('');\n\n  // Fetch sources from API when component mounts\n  useEffect(() => {\n    axios.get('/chatbot1/list-sources/').then(response => {\n      setSources(response.data.sources);\n    }).catch(error => {\n      console.error('Error fetching sources:', error);\n    });\n  }, []);\n\n  // Fetch documents for a selected source\n  const fetchDocuments = source => {\n    axios.get(`/chatbot1/list-documents/${source}/`).then(response => {\n      setDocuments(response.data.documents);\n    }).catch(error => {\n      console.error('Error fetching documents:', error);\n    });\n  };\n\n  // Handle file upload\n  const handleFileUpload = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', event.target.fileInput.files[0]);\n    formData.append('source_name', sourceName);\n    axios.post(`/chatbot1/upload-document/${sourceName}/`, formData).then(response => {\n      setUploadStatus('Document uploaded successfully.');\n      fetchDocuments(sourceName); // Refresh documents list\n    }).catch(error => {\n      console.error('Error uploading document:', error);\n      setUploadStatus('Failed to upload document.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"source\",\n        children: \"Select Source:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"source\",\n        value: sourceName,\n        onChange: e => setSourceName(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), sources.map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: source,\n          children: source\n        }, source, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFileUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"fileInput\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: documents.map((doc, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: doc\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ListSources, \"TFWoggcWhsdXDTdsdZepedv5GMA=\");\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ListSources","_s","sources","setSources","sourceName","setSourceName","documents","setDocuments","uploadStatus","setUploadStatus","get","then","response","data","catch","error","console","fetchDocuments","source","handleFileUpload","event","preventDefault","formData","FormData","append","target","fileInput","files","post","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","map","onSubmit","type","name","required","doc","index","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ListSources = () => {\r\n    const [sources, setSources] = useState([]);\r\n    const [sourceName, setSourceName] = useState('');\r\n    const [documents, setDocuments] = useState([]);\r\n    const [uploadStatus, setUploadStatus] = useState('');\r\n\r\n    // Fetch sources from API when component mounts\r\n    useEffect(() => {\r\n        axios.get('/chatbot1/list-sources/')\r\n            .then(response => {\r\n                setSources(response.data.sources);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching sources:', error);\r\n            });\r\n    }, []);\r\n\r\n    // Fetch documents for a selected source\r\n    const fetchDocuments = (source) => {\r\n        axios.get(`/chatbot1/list-documents/${source}/`)\r\n            .then(response => {\r\n                setDocuments(response.data.documents);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching documents:', error);\r\n            });\r\n    };\r\n\r\n    // Handle file upload\r\n    const handleFileUpload = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', event.target.fileInput.files[0]);\r\n        formData.append('source_name', sourceName);\r\n\r\n        axios.post(`/chatbot1/upload-document/${sourceName}/`, formData)\r\n            .then(response => {\r\n                setUploadStatus('Document uploaded successfully.');\r\n                fetchDocuments(sourceName); // Refresh documents list\r\n            })\r\n            .catch(error => {\r\n                console.error('Error uploading document:', error);\r\n                setUploadStatus('Failed to upload document.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>List Sources</h2>\r\n            <div>\r\n                <label htmlFor=\"source\">Select Source:</label>\r\n                <select\r\n                    id=\"source\"\r\n                    value={sourceName}\r\n                    onChange={(e) => setSourceName(e.target.value)}\r\n                >\r\n                    <option value=\"\">Select a source</option>\r\n                    {sources.map((source) => (\r\n                        <option key={source} value={source}>{source}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <form onSubmit={handleFileUpload}>\r\n                <input\r\n                    type=\"file\"\r\n                    name=\"fileInput\"\r\n                    required\r\n                />\r\n                <button type=\"submit\">Upload Document</button>\r\n            </form>\r\n\r\n            <p>{uploadStatus}</p>\r\n\r\n            <h3>Documents</h3>\r\n            <ul>\r\n                {documents.map((doc, index) => (\r\n                    <li key={index}>{doc}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListSources;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}