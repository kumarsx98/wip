{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Desktop\\\\django_test\\\\ous_agile_devops_ai\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from './Header';\nimport ConversationBox from './ConversationBox';\nimport InputBox from './InputBox';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const {\n    mysource\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [question, setQuestion] = useState('');\n  const conversationBoxRef = useRef(null);\n  useEffect(() => {\n    if (conversationBoxRef.current) {\n      conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const message = e.target.message.value.trim();\n    if (message !== '') {\n      setIsLoading(true);\n      setShowSpinner(true);\n      setMessages(prevMessages => [...prevMessages, {\n        text: message,\n        sender: 'user'\n      }]);\n      setQuestion('');\n      try {\n        const resp = await axios.post('/chatbot1/search/', {\n          question: message,\n          mysource\n        });\n        console.log('Received response from API:', resp.data);\n        let response = resp.data.response.content;\n\n        // Process the response text (your existing code here)\n        // ...\n\n        setMessages(prevMessages => [...prevMessages, {\n          text: response,\n          sender: 'bot',\n          copyButton: true,\n          filenames: resp.data.response.references ? resp.data.response.references.map(ref => ref.filename) : []\n        }]);\n      } catch (error) {\n        console.error('Error occurred during API request:', error);\n        setMessages(prevMessages => [...prevMessages, {\n          text: 'Sorry, an error occurred while processing your request.',\n          sender: 'bot',\n          copyButton: false\n        }]);\n      } finally {\n        setIsLoading(false);\n        setShowSpinner(false);\n      }\n    }\n  };\n  const chatbotClassName = mysource === 'public' ? 'Chatbot-public' : 'Chatbot-internal';\n  const conversationBoxClassName = mysource === 'public' ? 'conversation-box-public' : 'conversation-box-internal';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Chatbot ${chatbotClassName}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConversationBox, {\n      className: conversationBoxClassName,\n      messages: messages,\n      isLoading: isLoading,\n      conversationBoxRef: conversationBoxRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      question: question,\n      setQuestion: setQuestion,\n      handleSendMessage: handleSendMessage,\n      isLoading: isLoading,\n      showSpinner: showSpinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"AWnDR3brZHxhbv59fL/dZ6wW5aY=\", false, function () {\n  return [useParams];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useParams","axios","Header","ConversationBox","InputBox","jsxDEV","_jsxDEV","Chatbot","_s","mysource","messages","setMessages","isLoading","setIsLoading","showSpinner","setShowSpinner","question","setQuestion","conversationBoxRef","current","scrollTop","scrollHeight","handleSendMessage","e","preventDefault","message","target","value","trim","prevMessages","text","sender","resp","post","console","log","data","response","content","copyButton","filenames","references","map","ref","filename","error","chatbotClassName","conversationBoxClassName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Desktop/django_test/ous_agile_devops_ai/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from './Header';\r\nimport ConversationBox from './ConversationBox';\r\nimport InputBox from './InputBox';\r\nimport './App.css';\r\n\r\nfunction Chatbot() {\r\n  const { mysource } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [question, setQuestion] = useState('');\r\n  const conversationBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (conversationBoxRef.current) {\r\n      conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const message = e.target.message.value.trim();\r\n\r\n    if (message !== '') {\r\n      setIsLoading(true);\r\n      setShowSpinner(true);\r\n      setMessages(prevMessages => [...prevMessages, { text: message, sender: 'user' }]);\r\n      setQuestion('');\r\n\r\n      try {\r\n        const resp = await axios.post('/chatbot1/search/', { question: message, mysource });\r\n        console.log('Received response from API:', resp.data);\r\n\r\n        let response = resp.data.response.content;\r\n\r\n        // Process the response text (your existing code here)\r\n        // ...\r\n\r\n        setMessages(prevMessages => [\r\n          ...prevMessages,\r\n          {\r\n            text: response,\r\n            sender: 'bot',\r\n            copyButton: true,\r\n            filenames: resp.data.response.references ? resp.data.response.references.map((ref) => ref.filename) : [],\r\n          },\r\n        ]);\r\n\r\n      } catch (error) {\r\n        console.error('Error occurred during API request:', error);\r\n        setMessages(prevMessages => [\r\n          ...prevMessages,\r\n          {\r\n            text: 'Sorry, an error occurred while processing your request.',\r\n            sender: 'bot',\r\n            copyButton: false,\r\n          },\r\n        ]);\r\n      } finally {\r\n        setIsLoading(false);\r\n        setShowSpinner(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const chatbotClassName = mysource === 'public' ? 'Chatbot-public' : 'Chatbot-internal';\r\n  const conversationBoxClassName = mysource === 'public' ? 'conversation-box-public' : 'conversation-box-internal';\r\n\r\n  return (\r\n    <div className={`Chatbot ${chatbotClassName}`}>\r\n      <Header />\r\n      <ConversationBox\r\n        className={conversationBoxClassName}\r\n        messages={messages}\r\n        isLoading={isLoading}\r\n        conversationBoxRef={conversationBoxRef}\r\n      />\r\n      <InputBox\r\n        question={question}\r\n        setQuestion={setQuestion}\r\n        handleSendMessage={handleSendMessage}\r\n        isLoading={isLoading}\r\n        showSpinner={showSpinner}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}