{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ChatWithSource.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from './api'; // Assuming you have this custom Axios instance\nimport Header from './Header';\nimport ConversationBox from './ConversationBox';\nimport InputBox from './InputBox';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWithSource() {\n  _s();\n  const {\n    mysource\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [question, setQuestion] = useState('');\n  const conversationBoxRef = useRef(null);\n  useEffect(() => {\n    if (conversationBoxRef.current) {\n      conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const message = e.target.message.value.trim();\n    if (message !== '') {\n      setIsLoading(true);\n      setShowSpinner(true);\n      setMessages(prevMessages => [...prevMessages, {\n        text: message,\n        sender: 'user'\n      }]);\n      setQuestion('');\n      try {\n        const resp = await api.post('/chat-with-source/', {\n          question: message,\n          mysource\n        });\n        console.log('Received response from API:', resp.data);\n        let response = resp.data.response.content;\n        response = formatResponse(response);\n        setMessages(prevMessages => [...prevMessages, {\n          text: response,\n          sender: 'bot',\n          copyButton: true,\n          filenames: resp.data.response.references ? resp.data.response.references.map(ref => ref.filename) : []\n        }]);\n      } catch (error) {\n        console.error('Error occurred during API request:', error);\n        setMessages(prevMessages => [...prevMessages, {\n          text: 'Sorry, an error occurred while processing your request.',\n          sender: 'bot',\n          copyButton: false\n        }]);\n      } finally {\n        setIsLoading(false);\n        setShowSpinner(false);\n      }\n    }\n  };\n  const formatResponse = response => {\n    response = response.replace(/\\[(.*?)\\]/g, '\\n\\n');\n    response = response.replace(/(\\w+)\\.\\n\\n/g, '$1\\n');\n    response = response.replace(/\\.\\n\\n/g, '.\\n');\n    response = response.replace(/^\\s+|\\s+$/g, '');\n    response = response.replace(/^\"|\"$/g, '');\n    response = response.replace(/\\.\\s+(\\d+)\\./g, '$1.');\n    response = response.replace(/^\\.\\s*/gm, '');\n    response = response.replace(/([^.\\n])$/gm, '.');\n    const linkRegex = /(https?:\\/\\/[^\\s]+)/g;\n    response = response.replace(linkRegex, (match, url) => `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${url}</a>`);\n    const urlRegex = /go\\/([^\\s]+)/g;\n    response = response.replace(urlRegex, (match, sometext) => `<a href=\"http://go/${sometext}\" target=\"_blank\" rel=\"noopener noreferrer\">go/${sometext}</a>`);\n    const emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/g;\n    response = response.replace(emailRegex, (match, email) => `<a href=\"mailto:${email}\">${email}</a>`);\n    return response;\n  };\n  const chatbotClassName = mysource === 'confluence' ? 'Chatbot-confluence' : 'Chatbot-new';\n  const conversationBoxClassName = mysource === 'confluence' ? 'conversation-box-confluence' : 'conversation-box-new';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Chatbot ${chatbotClassName}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConversationBox, {\n      className: conversationBoxClassName,\n      messages: messages,\n      isLoading: isLoading,\n      conversationBoxRef: conversationBoxRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      question: question,\n      setQuestion: setQuestion,\n      handleSendMessage: handleSendMessage,\n      isLoading: isLoading,\n      showSpinner: showSpinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatWithSource, \"AWnDR3brZHxhbv59fL/dZ6wW5aY=\", false, function () {\n  return [useParams];\n});\n_c = ChatWithSource;\nexport default ChatWithSource;\nvar _c;\n$RefreshReg$(_c, \"ChatWithSource\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useParams","api","Header","ConversationBox","InputBox","jsxDEV","_jsxDEV","ChatWithSource","_s","mysource","messages","setMessages","isLoading","setIsLoading","showSpinner","setShowSpinner","question","setQuestion","conversationBoxRef","current","scrollTop","scrollHeight","handleSendMessage","e","preventDefault","message","target","value","trim","prevMessages","text","sender","resp","post","console","log","data","response","content","formatResponse","copyButton","filenames","references","map","ref","filename","error","replace","linkRegex","match","url","urlRegex","sometext","emailRegex","email","chatbotClassName","conversationBoxClassName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ChatWithSource.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport api from './api';  // Assuming you have this custom Axios instance\r\nimport Header from './Header';\r\nimport ConversationBox from './ConversationBox';\r\nimport InputBox from './InputBox';\r\nimport './App.css';\r\n\r\nfunction ChatWithSource() {\r\n    const { mysource } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n    const [question, setQuestion] = useState('');\r\n    const conversationBoxRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (conversationBoxRef.current) {\r\n            conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\r\n        }\r\n    }, [messages]);\r\n\r\n    const handleSendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const message = e.target.message.value.trim();\r\n\r\n        if (message !== '') {\r\n            setIsLoading(true);\r\n            setShowSpinner(true);\r\n            setMessages(prevMessages => [...prevMessages, { text: message, sender: 'user' }]);\r\n            setQuestion('');\r\n\r\n            try {\r\n                const resp = await api.post('/chat-with-source/', { question: message, mysource });\r\n                console.log('Received response from API:', resp.data);\r\n\r\n                let response = resp.data.response.content;\r\n                response = formatResponse(response);\r\n\r\n                setMessages(prevMessages => [\r\n                    ...prevMessages,\r\n                    {\r\n                        text: response,\r\n                        sender: 'bot',\r\n                        copyButton: true,\r\n                        filenames: resp.data.response.references ? resp.data.response.references.map((ref) => ref.filename) : [],\r\n                    },\r\n                ]);\r\n\r\n            } catch (error) {\r\n                console.error('Error occurred during API request:', error);\r\n                setMessages(prevMessages => [\r\n                    ...prevMessages,\r\n                    {\r\n                        text: 'Sorry, an error occurred while processing your request.',\r\n                        sender: 'bot',\r\n                        copyButton: false,\r\n                    },\r\n                ]);\r\n            } finally {\r\n                setIsLoading(false);\r\n                setShowSpinner(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const formatResponse = (response) => {\r\n        response = response.replace(/\\[(.*?)\\]/g, '\\n\\n');\r\n        response = response.replace(/(\\w+)\\.\\n\\n/g, '$1\\n');\r\n        response = response.replace(/\\.\\n\\n/g, '.\\n');\r\n        response = response.replace(/^\\s+|\\s+$/g, '');\r\n        response = response.replace(/^\"|\"$/g, '');\r\n        response = response.replace(/\\.\\s+(\\d+)\\./g, '$1.');\r\n        response = response.replace(/^\\.\\s*/gm, '');\r\n        response = response.replace(/([^.\\n])$/gm, '.');\r\n\r\n        const linkRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n        response = response.replace(linkRegex, (match, url) => `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${url}</a>`);\r\n\r\n        const urlRegex = /go\\/([^\\s]+)/g;\r\n        response = response.replace(urlRegex, (match, sometext) => `<a href=\"http://go/${sometext}\" target=\"_blank\" rel=\"noopener noreferrer\">go/${sometext}</a>`);\r\n\r\n        const emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/g;\r\n        response = response.replace(emailRegex, (match, email) => `<a href=\"mailto:${email}\">${email}</a>`);\r\n\r\n        return response;\r\n    };\r\n\r\n    const chatbotClassName = mysource === 'confluence' ? 'Chatbot-confluence' : 'Chatbot-new';\r\n    const conversationBoxClassName = mysource === 'confluence' ? 'conversation-box-confluence' : 'conversation-box-new';\r\n\r\n    return (\r\n        <div className={`Chatbot ${chatbotClassName}`}>\r\n            <Header />\r\n            <ConversationBox\r\n                className={conversationBoxClassName}\r\n                messages={messages}\r\n                isLoading={isLoading}\r\n                conversationBoxRef={conversationBoxRef}\r\n            />\r\n            <InputBox\r\n                question={question}\r\n                setQuestion={setQuestion}\r\n                handleSendMessage={handleSendMessage}\r\n                isLoading={isLoading}\r\n                showSpinner={showSpinner}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatWithSource;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}