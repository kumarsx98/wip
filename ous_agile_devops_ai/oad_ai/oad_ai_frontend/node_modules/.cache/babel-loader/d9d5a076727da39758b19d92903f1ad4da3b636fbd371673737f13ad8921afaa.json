{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\n// ListSources.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListSources() {\n  _s();\n  const [globalSources, setGlobalSources] = useState([]);\n  const [privateSources, setPrivateSources] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [documents, setDocuments] = useState(null);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [chunkSize, setChunkSize] = useState('');\n  const [chunkOverlap, setChunkOverlap] = useState('');\n  const [separators, setSeparators] = useState('');\n  const [splitPages, setSplitPages] = useState(false);\n  const [customFields, setCustomFields] = useState('');\n  useEffect(() => {\n    fetchSources();\n  }, []);\n  const fetchSources = async () => {\n    setIsLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.get('/chatbot1/list-sources/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        setGlobalSources(response.data.global_sources || []);\n        setPrivateSources(response.data.private_sources || []);\n      } else {\n        setMessage('An error occurred while fetching the sources.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error during source fetching:', error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred while fetching the sources.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchDocuments = async source => {\n    setIsLoading(true);\n    setMessage('');\n    setSelectedSource(source);\n    try {\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      console.log('Fetch documents response:', response.data);\n      if (response.status === 200) {\n        setDocuments(response.data);\n        if (response.data.documents.count === 0) {\n          setMessage('No documents found. If you just uploaded a document, it may still be processing. Please check again in a few moments.');\n        }\n      } else {\n        setMessage('An error occurred while fetching the documents.');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error during document fetching:', error);\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'An error occurred while fetching the documents.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.size > 10 * 1024 * 1024) {\n      alert('File is too large. Maximum size is 10MB.');\n      e.target.value = null;\n    } else {\n      setFile(selectedFile);\n    }\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file to upload');\n      return;\n    }\n    setIsLoading(true);\n    setUploadStatus('Initiating upload...');\n    const formData = new FormData();\n    formData.append('file', file);\n    if (chunkSize) formData.append('chunk_size', chunkSize);\n    if (chunkOverlap) formData.append('chunk_overlap', chunkOverlap);\n    if (separators) formData.append('separators', separators);\n    formData.append('split_pages', splitPages);\n    if (customFields) formData.append('custom_fields', customFields);\n    try {\n      const response = await axios.post(`/api/v1/sources/${selectedSource}/documents`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true,\n        validateStatus: function (status) {\n          return status >= 200 && status < 300 || status === 202; // Treat 202 as success\n        }\n      });\n      console.log('Upload response:', response.data);\n      if (response.status === 202) {\n        setUploadStatus('Upload accepted and is being processed. The document will appear in the list once processing is complete.');\n        // You might want to start a polling mechanism here to check for the document's appearance\n        setTimeout(() => fetchDocuments(selectedSource), 5000); // Refresh after 5 seconds\n      } else if (response.data && response.data.task_id) {\n        setUploadStatus('Upload initiated. Task ID: ' + response.data.task_id);\n        checkUploadStatus(selectedSource, response.data.task_id);\n      } else {\n        setUploadStatus('Upload completed successfully. Refreshing document list...');\n        await fetchDocuments(selectedSource);\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error uploading document:', error);\n      setUploadStatus('Error: ' + (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || error.message || 'Unknown error occurred'));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const checkUploadStatus = async (source, taskId) => {\n    if (!taskId) {\n      console.error('No task ID provided for status check');\n      return;\n    }\n    try {\n      const response = await axios.get(`/api/v1/sources/${source}/documents/${taskId}`, {\n        headers: {\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      setUploadStatus('Status: ' + response.data.status);\n      if (response.data.status !== 'completed' && response.data.status !== 'failed') {\n        setTimeout(() => checkUploadStatus(source, taskId), 5000); // Check again after 5 seconds\n      } else {\n        fetchDocuments(selectedSource); // Refresh document list after upload is complete\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Error checking upload status:', error);\n      setUploadStatus('Error checking status: ' + (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || 'Unknown error occurred'));\n    }\n  };\n  const handleSyncSource = async () => {\n    try {\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      alert(response.data.message);\n      fetchDocuments(selectedSource);\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response6$data;\n      console.error('Error syncing source:', error);\n      console.error('Error details:', (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n      alert(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'An error occurred during synchronization. Please check the server logs for more details.');\n    }\n  };\n  const renderSourceList = (sources, title) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), sources.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: sources.map(source => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '10px',\n          border: '1px solid #ccc',\n          padding: '10px',\n          borderRadius: '4px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault();\n              fetchDocuments(source);\n            },\n            style: {\n              color: '#007bff',\n              textDecoration: 'none'\n            },\n            children: source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)\n      }, source, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No \", title.toLowerCase(), \" found.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n  const renderDocuments = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: '#444',\n          marginTop: '20px'\n        },\n        children: [\"Documents in \", selectedSource]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }, this), documents && documents.documents ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total documents: \", documents.documents.count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), Array.isArray(documents.documents.documents) && documents.documents.documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            padding: 0\n          },\n          children: documents.documents.documents.map((document, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '10px',\n              border: '1px solid #ccc',\n              padding: '10px',\n              borderRadius: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                margin: '0'\n              },\n              children: document.filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), document.filepath && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '5px 0 0',\n                fontSize: '0.9em',\n                color: '#666'\n              },\n              children: [\"Location: \", document.filepath]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this)]\n          }, document.id || index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No documents available in this source. If you just uploaded a document, it may still be processing.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No documents found in this source. If you just uploaded a document, it may still be processing.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedSource(null),\n        style: {\n          marginTop: '20px',\n          padding: '10px',\n          backgroundColor: '#007bff',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          marginRight: '10px'\n        },\n        children: \"Back to Sources\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSyncSource,\n        style: {\n          marginTop: '20px',\n          padding: '10px',\n          backgroundColor: '#28a745',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Sync Source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: \"Add Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: splitPages,\n            onChange: e => setSplitPages(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), \"Split Pages\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Custom Fields (JSON)\",\n          value: customFields,\n          onChange: e => setCustomFields(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? 'Uploading...' : 'Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: 'white',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#333'\n      },\n      children: \"List of Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: selectedSource ? renderDocuments() : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [renderSourceList(globalSources, 'Global Sources'), renderSourceList(privateSources, 'Private Sources'), globalSources.length === 0 && privateSources.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"No sources found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '15px',\n        textAlign: 'center',\n        color: 'red'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n_s(ListSources, \"z0wk+TzCHzt8SskDNbndiVvtvPc=\");\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ListSources","_s","globalSources","setGlobalSources","privateSources","setPrivateSources","selectedSource","setSelectedSource","documents","setDocuments","message","setMessage","isLoading","setIsLoading","file","setFile","uploadStatus","setUploadStatus","chunkSize","setChunkSize","chunkOverlap","setChunkOverlap","separators","setSeparators","splitPages","setSplitPages","customFields","setCustomFields","fetchSources","response","get","headers","getCookie","withCredentials","status","data","global_sources","private_sources","error","_error$response","_error$response$data","console","fetchDocuments","source","log","count","_error$response2","_error$response2$data","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","handleFileChange","e","selectedFile","target","files","size","alert","value","handleUpload","preventDefault","formData","FormData","append","post","validateStatus","setTimeout","task_id","checkUploadStatus","_error$response3","_error$response3$data","detail","taskId","_error$response4","_error$response4$data","handleSyncSource","_error$response5","_error$response6","_error$response6$data","renderSourceList","sources","title","children","style","color","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","listStyleType","padding","map","marginBottom","border","borderRadius","margin","href","onClick","textDecoration","toLowerCase","renderDocuments","Array","isArray","index","filename","filepath","fontSize","id","backgroundColor","cursor","marginRight","onSubmit","type","onChange","checked","placeholder","disabled","maxWidth","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["// ListSources.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ListSources() {\r\n  const [globalSources, setGlobalSources] = useState([]);\r\n  const [privateSources, setPrivateSources] = useState([]);\r\n  const [selectedSource, setSelectedSource] = useState(null);\r\n  const [documents, setDocuments] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [file, setFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const [chunkSize, setChunkSize] = useState('');\r\n  const [chunkOverlap, setChunkOverlap] = useState('');\r\n  const [separators, setSeparators] = useState('');\r\n  const [splitPages, setSplitPages] = useState(false);\r\n  const [customFields, setCustomFields] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchSources();\r\n  }, []);\r\n\r\n  const fetchSources = async () => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-sources/', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setGlobalSources(response.data.global_sources || []);\r\n        setPrivateSources(response.data.private_sources || []);\r\n      } else {\r\n        setMessage('An error occurred while fetching the sources.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during source fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the sources.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDocuments = async (source) => {\r\n  setIsLoading(true);\r\n  setMessage('');\r\n  setSelectedSource(source);\r\n\r\n  try {\r\n    const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n      },\r\n      withCredentials: true\r\n    });\r\n\r\n    console.log('Fetch documents response:', response.data);\r\n\r\n    if (response.status === 200) {\r\n      setDocuments(response.data);\r\n      if (response.data.documents.count === 0) {\r\n        setMessage('No documents found. If you just uploaded a document, it may still be processing. Please check again in a few moments.');\r\n      }\r\n    } else {\r\n      setMessage('An error occurred while fetching the documents.');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error during document fetching:', error);\r\n    setMessage(error.response?.data?.error || 'An error occurred while fetching the documents.');\r\n  } finally {\r\n    setIsLoading(false);\r\n  }\r\n};\r\n\r\n  function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile && selectedFile.size > 10 * 1024 * 1024) {\r\n      alert('File is too large. Maximum size is 10MB.');\r\n      e.target.value = null;\r\n    } else {\r\n      setFile(selectedFile);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n  e.preventDefault();\r\n  if (!file) {\r\n    alert('Please select a file to upload');\r\n    return;\r\n  }\r\n\r\n  setIsLoading(true);\r\n  setUploadStatus('Initiating upload...');\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  if (chunkSize) formData.append('chunk_size', chunkSize);\r\n  if (chunkOverlap) formData.append('chunk_overlap', chunkOverlap);\r\n  if (separators) formData.append('separators', separators);\r\n  formData.append('split_pages', splitPages);\r\n  if (customFields) formData.append('custom_fields', customFields);\r\n\r\n  try {\r\n    const response = await axios.post(`/api/v1/sources/${selectedSource}/documents`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'X-CSRFToken': getCookie('csrftoken'),\r\n      },\r\n      withCredentials: true,\r\n      validateStatus: function (status) {\r\n        return status >= 200 && status < 300 || status === 202; // Treat 202 as success\r\n      }\r\n    });\r\n\r\n    console.log('Upload response:', response.data);\r\n\r\n    if (response.status === 202) {\r\n      setUploadStatus('Upload accepted and is being processed. The document will appear in the list once processing is complete.');\r\n      // You might want to start a polling mechanism here to check for the document's appearance\r\n      setTimeout(() => fetchDocuments(selectedSource), 5000); // Refresh after 5 seconds\r\n    } else if (response.data && response.data.task_id) {\r\n      setUploadStatus('Upload initiated. Task ID: ' + response.data.task_id);\r\n      checkUploadStatus(selectedSource, response.data.task_id);\r\n    } else {\r\n      setUploadStatus('Upload completed successfully. Refreshing document list...');\r\n      await fetchDocuments(selectedSource);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error uploading document:', error);\r\n    setUploadStatus('Error: ' + (error.response?.data?.detail || error.message || 'Unknown error occurred'));\r\n  } finally {\r\n    setIsLoading(false);\r\n  }\r\n};\r\n\r\n  const checkUploadStatus = async (source, taskId) => {\r\n    if (!taskId) {\r\n      console.error('No task ID provided for status check');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(`/api/v1/sources/${source}/documents/${taskId}`, {\r\n        headers: {\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n      setUploadStatus('Status: ' + response.data.status);\r\n      if (response.data.status !== 'completed' && response.data.status !== 'failed') {\r\n        setTimeout(() => checkUploadStatus(source, taskId), 5000); // Check again after 5 seconds\r\n      } else {\r\n        fetchDocuments(selectedSource); // Refresh document list after upload is complete\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking upload status:', error);\r\n      setUploadStatus('Error checking status: ' + (error.response?.data?.detail || 'Unknown error occurred'));\r\n    }\r\n  };\r\n\r\n  const handleSyncSource = async () => {\r\n    try {\r\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n      alert(response.data.message);\r\n      fetchDocuments(selectedSource);\r\n    } catch (error) {\r\n      console.error('Error syncing source:', error);\r\n      console.error('Error details:', error.response?.data);\r\n      alert(error.response?.data?.error || 'An error occurred during synchronization. Please check the server logs for more details.');\r\n    }\r\n  };\r\n\r\n  const renderSourceList = (sources, title) => (\r\n    <div>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>{title}</h2>\r\n      {sources.length > 0 ? (\r\n        <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n          {sources.map((source) => (\r\n            <li key={source} style={{ marginBottom: '10px', border: '1px solid #ccc', padding: '10px', borderRadius: '4px' }}>\r\n              <h3 style={{ margin: '0' }}>\r\n                <a href=\"#\" onClick={(e) => { e.preventDefault(); fetchDocuments(source); }} style={{ color: '#007bff', textDecoration: 'none' }}>\r\n                  {source}\r\n                </a>\r\n              </h3>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No {title.toLowerCase()} found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderDocuments = () => {\r\n  return (\r\n    <div>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>Documents in {selectedSource}</h2>\r\n      {documents && documents.documents ? (\r\n        <>\r\n          <p>Total documents: {documents.documents.count}</p>\r\n          {Array.isArray(documents.documents.documents) && documents.documents.documents.length > 0 ? (\r\n            <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n              {documents.documents.documents.map((document, index) => (\r\n                <li key={document.id || index} style={{ marginBottom: '10px', border: '1px solid #ccc', padding: '10px', borderRadius: '4px' }}>\r\n                  <h4 style={{ margin: '0' }}>{document.filename}</h4>\r\n                  {document.filepath && (\r\n                    <p style={{ margin: '5px 0 0', fontSize: '0.9em', color: '#666' }}>\r\n                      Location: {document.filepath}\r\n                    </p>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No documents available in this source. If you just uploaded a document, it may still be processing.</p>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p>No documents found in this source. If you just uploaded a document, it may still be processing.</p>\r\n      )}\r\n\r\n\r\n        <button onClick={() => setSelectedSource(null)} style={{ marginTop: '20px', padding: '10px', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer', marginRight: '10px' }}>\r\n          Back to Sources\r\n        </button>\r\n        <button onClick={handleSyncSource} style={{ marginTop: '20px', padding: '10px', backgroundColor: '#28a745', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>\r\n          Sync Source\r\n        </button>\r\n\r\n        <h3 style={{ marginTop: '20px' }}>Add Document</h3>\r\n        <form onSubmit={handleUpload}>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          <label>\r\n            <input type=\"checkbox\" checked={splitPages} onChange={(e) => setSplitPages(e.target.checked)} />\r\n            Split Pages\r\n          </label>\r\n          <textarea placeholder=\"Custom Fields (JSON)\" value={customFields} onChange={(e) => setCustomFields(e.target.value)} />\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Uploading...' : 'Upload'}\r\n          </button>\r\n        </form>\r\n        {uploadStatus && <p>{uploadStatus}</p>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', backgroundColor: 'white', maxWidth: '800px', margin: '0 auto' }}>\r\n      <h1 style={{ textAlign: 'center', color: '#333' }}>List of Sources</h1>\r\n      {isLoading ? (\r\n        <p style={{ textAlign: 'center' }}>Loading...</p>\r\n      ) : (\r\n        <>\r\n          {selectedSource ? (\r\n            renderDocuments()\r\n          ) : (\r\n            <>\r\n              {renderSourceList(globalSources, 'Global Sources')}\r\n              {renderSourceList(privateSources, 'Private Sources')}\r\n              {globalSources.length === 0 && privateSources.length === 0 && (\r\n                <p style={{ textAlign: 'center' }}>No sources found.</p>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      {message && <p style={{ marginTop: '15px', textAlign: 'center', color: 'red' }}>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListSources;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}