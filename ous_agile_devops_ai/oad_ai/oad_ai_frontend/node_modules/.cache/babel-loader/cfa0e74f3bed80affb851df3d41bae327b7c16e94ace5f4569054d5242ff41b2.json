{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListSources() {\n  _s();\n  const [sources, setSources] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadSteps, setUploadSteps] = useState([]);\n  const [sortField, setSortField] = useState('name');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const formatDate = dateString => {\n    if (dateString && dateString !== '') {\n      return new Date(dateString).toLocaleString();\n    }\n    return 'N/A';\n  };\n  const handleSort = field => {\n    if (field === sortField) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n  const sortSources = sourcesToSort => {\n    return sourcesToSort.sort((a, b) => {\n      let comparison = 0;\n      if (a[sortField] < b[sortField]) {\n        comparison = -1;\n      } else if (a[sortField] > b[sortField]) {\n        comparison = 1;\n      }\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  };\n  const refreshData = async () => {\n    await fetchSources();\n  };\n  useEffect(() => {\n    refreshData();\n  }, []);\n  const fetchSources = async () => {\n    setIsLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.get('/chatbot1/list-sources/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        setSources(response.data.external_sources.global || []);\n      } else {\n        setMessage('An error occurred while fetching the sources.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error during source fetching:', error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred while fetching the sources.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchDocuments = async source => {\n    setIsLoading(true);\n    setMessage('');\n    setSelectedSource(source);\n    try {\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200 && response.data.documents) {\n        setDocuments(response.data.documents.documents);\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\n      } else {\n        setMessage('An error occurred while fetching the documents.');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error during document fetching:', error);\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'An error occurred while fetching the documents.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getCookie = name => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  };\n  const handleSyncSource = async sourceName => {\n    try {\n      const response = await axios.post(`/chatbot1/sync-source/${sourceName}/`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      alert(response.data.message);\n      fetchSources();\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data;\n      console.error('Error syncing source:', error);\n      console.error('Error details:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      alert(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'An error occurred during synchronization. Please check the server logs for more details.');\n    }\n  };\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile || !selectedSource) {\n      setMessage('Please select a file and a source to upload.');\n      return;\n    }\n    setIsLoading(true);\n    setMessage('');\n    setUploadProgress(0);\n    setUploadStatus('Preparing upload...');\n    setUploadSteps([]);\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true,\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n          setUploadStatus(`Uploading: ${percentCompleted}%`);\n        }\n      });\n      console.log('Full API Response:', response.data);\n      if (response.status === 200 || response.status === 201) {\n        setUploadStatus('Upload successful. Processing document...');\n        setUploadSteps(prevSteps => [...prevSteps, 'Document uploaded successfully']);\n        await pollUploadStatus(selectedSource, response.data.task_id);\n      } else if (response.status === 202) {\n        setUploadStatus('Document replaced successfully. Processing...');\n        setUploadSteps(prevSteps => [...prevSteps, 'Document replaced successfully']);\n        await pollUploadStatus(selectedSource, response.data.task_id);\n      } else {\n        setUploadStatus('Upload failed');\n        setMessage('An error occurred while uploading the document.');\n      }\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Error during document upload:', error);\n      setUploadStatus('Upload failed');\n      setMessage(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'An error occurred while uploading the document.');\n    } finally {\n      setIsLoading(false);\n      setUploadProgress(0);\n      setSelectedFile(null);\n    }\n  };\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\n    for (let i = 0; i < maxAttempts; i++) {\n      try {\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\n          headers: {\n            'X-CSRFToken': getCookie('csrftoken')\n          },\n          withCredentials: true\n        });\n        console.log('Poll response:', response.data);\n        if (response.data.status === 'SUCCESS') {\n          setUploadStatus('Upload and processing completed successfully');\n          setUploadSteps(prevSteps => [...prevSteps, 'Document processed successfully']);\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          await fetchDocuments(source);\n          return;\n        } else if (response.data.status === 'ERROR') {\n          setUploadStatus('Upload failed');\n          setUploadSteps(prevSteps => [...prevSteps, 'Error during document processing']);\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          return;\n        }\n        setUploadStatus(`Processing document... (Attempt ${i + 1}/${maxAttempts})`);\n        setUploadSteps(prevSteps => [...prevSteps, `Processing attempt ${i + 1}`]);\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      } catch (error) {\n        console.error('Error polling upload status:', error);\n        setUploadStatus('Error checking upload status');\n        setMessage(`Error checking upload status: ${error.message}`);\n        return;\n      }\n    }\n    setUploadStatus('Upload status check timed out');\n    setMessage('Upload status check timed out. The upload may still be in progress.');\n  };\n  const renderSourcesTable = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: \"Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), sources.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: '#f8f9fa'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('name'),\n            children: [\"Source Name \", sortField === 'name' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('visibility'),\n            children: [\"Visibility \", sortField === 'visibility' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('model'),\n            children: [\"Model \", sortField === 'model' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('created_at'),\n            children: [\"Created At \", sortField === 'created_at' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('updated_at'),\n            children: [\"Updated At \", sortField === 'updated_at' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortSources(sources).map((source, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: source.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: source.visibility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: source.model\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: formatDate(source.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: formatDate(source.updated_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchDocuments(source.name),\n              style: buttonStyle,\n              children: \"View Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSyncSource(source.name),\n              style: buttonStyle,\n              children: \"Sync Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this)]\n        }, source.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No sources available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n  const tableHeaderStyle = {\n    padding: '10px',\n    border: '1px solid #ddd',\n    backgroundColor: '#f8f9fa',\n    cursor: 'pointer'\n  };\n  const tableCellStyle = {\n    padding: '10px',\n    border: '1px solid #ddd'\n  };\n  const buttonStyle = {\n    margin: '5px',\n    padding: '8px 12px',\n    border: 'none',\n    borderRadius: '4px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    cursor: 'pointer'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 21\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 19\n    }, this), renderSourcesTable(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        style: buttonStyle,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 26\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: uploadProgress,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: uploadSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: step\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n}\n_s(ListSources, \"KX0wBJ/O6sSyNSFPSqR9f4ZshLA=\");\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ListSources","_s","sources","setSources","selectedSource","setSelectedSource","documents","setDocuments","message","setMessage","isLoading","setIsLoading","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","uploadSteps","setUploadSteps","sortField","setSortField","sortDirection","setSortDirection","formatDate","dateString","Date","toLocaleString","handleSort","field","sortSources","sourcesToSort","sort","a","b","comparison","refreshData","fetchSources","response","get","headers","getCookie","withCredentials","status","data","external_sources","global","error","_error$response","_error$response$data","console","fetchDocuments","source","length","_error$response2","_error$response2$data","name","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","handleSyncSource","sourceName","post","alert","_error$response3","_error$response4","_error$response4$data","handleFileChange","event","target","files","handleUpload","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","log","prevSteps","pollUploadStatus","task_id","_error$response5","_error$response5$data","taskId","maxAttempts","JSON","stringify","full_response","Promise","resolve","setTimeout","renderSourcesTable","children","style","color","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","width","borderCollapse","backgroundColor","tableHeaderStyle","onClick","map","index","tableCellStyle","visibility","model","created_at","updated_at","buttonStyle","id","padding","border","cursor","margin","borderRadius","type","onChange","value","max","step","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ListSources() {\r\n  const [sources, setSources] = useState([]);\r\n  const [selectedSource, setSelectedSource] = useState(null);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [uploadSteps, setUploadSteps] = useState([]);\r\n  const [sortField, setSortField] = useState('name');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n\r\n  const formatDate = (dateString) => {\r\n    if (dateString && dateString !== '') {\r\n      return new Date(dateString).toLocaleString();\r\n    }\r\n    return 'N/A';\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    if (field === sortField) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const sortSources = (sourcesToSort) => {\r\n    return sourcesToSort.sort((a, b) => {\r\n      let comparison = 0;\r\n      if (a[sortField] < b[sortField]) {\r\n        comparison = -1;\r\n      } else if (a[sortField] > b[sortField]) {\r\n        comparison = 1;\r\n      }\r\n      return sortDirection === 'asc' ? comparison : -comparison;\r\n    });\r\n  };\r\n\r\n  const refreshData = async () => {\r\n    await fetchSources();\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, []);\r\n\r\n  const fetchSources = async () => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-sources/', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setSources(response.data.external_sources.global || []);\r\n      } else {\r\n        setMessage('An error occurred while fetching the sources.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during source fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the sources.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDocuments = async (source) => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setSelectedSource(source);\r\n\r\n    try {\r\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200 && response.data.documents) {\r\n        setDocuments(response.data.documents.documents);\r\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\r\n      } else {\r\n        setMessage('An error occurred while fetching the documents.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the documents.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const handleSyncSource = async (sourceName) => {\r\n    try {\r\n      const response = await axios.post(`/chatbot1/sync-source/${sourceName}/`, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n      alert(response.data.message);\r\n      fetchSources();\r\n    } catch (error) {\r\n      console.error('Error syncing source:', error);\r\n      console.error('Error details:', error.response?.data);\r\n      alert(error.response?.data?.error || 'An error occurred during synchronization. Please check the server logs for more details.');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile || !selectedSource) {\r\n      setMessage('Please select a file and a source to upload.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setUploadProgress(0);\r\n    setUploadStatus('Preparing upload...');\r\n    setUploadSteps([]);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n\r\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percentCompleted);\r\n          setUploadStatus(`Uploading: ${percentCompleted}%`);\r\n        }\r\n      });\r\n\r\n      console.log('Full API Response:', response.data);\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        setUploadStatus('Upload successful. Processing document...');\r\n        setUploadSteps(prevSteps => [...prevSteps, 'Document uploaded successfully']);\r\n        await pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else if (response.status === 202) {\r\n        setUploadStatus('Document replaced successfully. Processing...');\r\n        setUploadSteps(prevSteps => [...prevSteps, 'Document replaced successfully']);\r\n        await pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else {\r\n        setUploadStatus('Upload failed');\r\n        setMessage('An error occurred while uploading the document.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document upload:', error);\r\n      setUploadStatus('Upload failed');\r\n      setMessage(error.response?.data?.error || 'An error occurred while uploading the document.');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setUploadProgress(0);\r\n      setSelectedFile(null);\r\n    }\r\n  };\r\n\r\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\r\n    for (let i = 0; i < maxAttempts; i++) {\r\n      try {\r\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\r\n          headers: {\r\n            'X-CSRFToken': getCookie('csrftoken'),\r\n          },\r\n          withCredentials: true\r\n        });\r\n\r\n        console.log('Poll response:', response.data);\r\n\r\n        if (response.data.status === 'SUCCESS') {\r\n          setUploadStatus('Upload and processing completed successfully');\r\n          setUploadSteps(prevSteps => [...prevSteps, 'Document processed successfully']);\r\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          await fetchDocuments(source);\r\n          return;\r\n        } else if (response.data.status === 'ERROR') {\r\n          setUploadStatus('Upload failed');\r\n          setUploadSteps(prevSteps => [...prevSteps, 'Error during document processing']);\r\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          return;\r\n        }\r\n\r\n        setUploadStatus(`Processing document... (Attempt ${i + 1}/${maxAttempts})`);\r\n        setUploadSteps(prevSteps => [...prevSteps, `Processing attempt ${i + 1}`]);\r\n        await new Promise(resolve => setTimeout(resolve, 5000));\r\n      } catch (error) {\r\n        console.error('Error polling upload status:', error);\r\n        setUploadStatus('Error checking upload status');\r\n        setMessage(`Error checking upload status: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setUploadStatus('Upload status check timed out');\r\n    setMessage('Upload status check timed out. The upload may still be in progress.');\r\n  };\r\n\r\n  const renderSourcesTable = () => (\r\n    <div>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>Sources</h2>\r\n      {sources.length > 0 ? (\r\n        <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '20px' }}>\r\n          <thead>\r\n            <tr style={{ backgroundColor: '#f8f9fa' }}>\r\n              <th style={tableHeaderStyle} onClick={() => handleSort('name')}>\r\n                Source Name {sortField === 'name' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n              </th>\r\n              <th style={tableHeaderStyle} onClick={() => handleSort('visibility')}>\r\n                Visibility {sortField === 'visibility' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n              </th>\r\n              <th style={tableHeaderStyle} onClick={() => handleSort('model')}>\r\n                Model {sortField === 'model' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n              </th>\r\n              <th style={tableHeaderStyle} onClick={() => handleSort('created_at')}>\r\n                Created At {sortField === 'created_at' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n              </th>\r\n              <th style={tableHeaderStyle} onClick={() => handleSort('updated_at')}>\r\n                Updated At {sortField === 'updated_at' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n              </th>\r\n              <th style={tableHeaderStyle}>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sortSources(sources).map((source, index) => (\r\n              <tr key={source.id || index}>\r\n                <td style={tableCellStyle}>{source.name}</td>\r\n                <td style={tableCellStyle}>{source.visibility}</td>\r\n                <td style={tableCellStyle}>{source.model}</td>\r\n                <td style={tableCellStyle}>{formatDate(source.created_at)}</td>\r\n                <td style={tableCellStyle}>{formatDate(source.updated_at)}</td>\r\n                <td style={tableCellStyle}>\r\n                  <button onClick={() => fetchDocuments(source.name)} style={buttonStyle}>\r\n                    View Documents\r\n                  </button>\r\n                  <button onClick={() => handleSyncSource(source.name)} style={buttonStyle}>\r\n                    Sync Source\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No sources available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const tableHeaderStyle = {\r\n    padding: '10px',\r\n    border: '1px solid #ddd',\r\n    backgroundColor: '#f8f9fa',\r\n    cursor: 'pointer'\r\n  };\r\n\r\n  const tableCellStyle = {\r\n    padding: '10px',\r\n    border: '1px solid #ddd'\r\n  };\r\n\r\n  const buttonStyle = {\r\n    margin: '5px',\r\n    padding: '8px 12px',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    cursor: 'pointer'\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>List Sources</h1>\r\n      {isLoading && <p>Loading...</p>}\r\n      {message && <p>{message}</p>}\r\n      {renderSourcesTable()}\r\n      <div style={{ marginTop: '20px' }}>\r\n        <h2>Upload Document</h2>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload} style={buttonStyle}>Upload</button>\r\n        {uploadStatus && <p>{uploadStatus}</p>}\r\n        {uploadProgress > 0 && <progress value={uploadProgress} max=\"100\" />}\r\n        <div>\r\n          {uploadSteps.map((step, index) => (\r\n            <p key={index}>{step}</p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListSources;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}