{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListSources() {\n  _s();\n  const [globalSources, setGlobalSources] = useState([]);\n  const [privateSources, setPrivateSources] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const refreshData = async () => {\n    await fetchSources();\n    if (selectedSource) {\n      await fetchDocuments(selectedSource);\n    }\n  };\n  useEffect(() => {\n    refreshData();\n  }, []);\n  const fetchSources = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get('/chatbot1/list-sources/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        setGlobalSources(response.data.global_sources || []);\n        setPrivateSources(response.data.private_sources || []);\n      } else {\n        toast.error('An error occurred while fetching the sources.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error during source fetching:', error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred while fetching the sources.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchDocuments = async source => {\n    setIsLoading(true);\n    setSelectedSource(source);\n    try {\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200 && response.data.documents) {\n        setDocuments(response.data.documents.documents.map(doc => ({\n          ...doc,\n          path: doc.path || `/chatbot1/media/documents/${source}/${doc.filename}`\n        })));\n        toast.info(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\n      } else {\n        toast.error('An error occurred while fetching the documents.');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error during document fetching:', error);\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'An error occurred while fetching the documents.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getCookie = name => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  };\n  const handleSyncSource = async () => {\n    try {\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      toast.success(response.data.message);\n      fetchDocuments(selectedSource);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error syncing source:', error);\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'An error occurred during synchronization.');\n    }\n  };\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile || !selectedSource) {\n      toast.error('Please select a file and a source to upload.');\n      return;\n    }\n    setIsLoading(true);\n    setUploadProgress(0);\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true,\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        }\n      });\n      if (response.status === 200 || response.status === 201) {\n        toast.success('Document uploaded successfully.');\n        fetchDocuments(selectedSource);\n      } else if (response.status === 202) {\n        toast.success('Document replaced successfully.');\n        fetchDocuments(selectedSource);\n      } else {\n        toast.error('An error occurred while uploading the document.');\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Error during document upload:', error);\n      toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'An error occurred while uploading the document.');\n    } finally {\n      setIsLoading(false);\n      setUploadProgress(0);\n      setSelectedFile(null);\n    }\n  };\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\n    for (let i = 0; i < maxAttempts; i++) {\n      try {\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\n          headers: {\n            'X-CSRFToken': getCookie('csrftoken')\n          },\n          withCredentials: true\n        });\n        if (response.data.status === 'SUCCESS') {\n          toast.success('Upload completed successfully.');\n          await fetchDocuments(source);\n          return;\n        } else if (response.data.status === 'ERROR') {\n          toast.error(`Upload failed. Error: ${response.data.message}`);\n          return;\n        }\n        toast.info(`Upload still in progress. Checking again in 5 seconds...`);\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      } catch (error) {\n        console.error('Error polling upload status:', error);\n        toast.error(`Error checking upload status: ${error.message}`);\n        return;\n      }\n    }\n    toast.error('Upload status check timed out. The upload may still be in progress.');\n  };\n  const renderSourceList = (sources, title) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), sources.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: sources.map(source => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '10px',\n          border: '1px solid #ccc',\n          padding: '10px',\n          borderRadius: '4px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault();\n              fetchDocuments(source);\n            },\n            style: {\n              color: '#007bff',\n              textDecoration: 'none'\n            },\n            children: source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)\n      }, source, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No \", title.toLowerCase(), \" found.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n  const renderDocuments = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: [\"Documents in \", selectedSource]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total documents: \", documents.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          padding: 0\n        },\n        children: documents.map((document, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '10px',\n            border: '1px solid #ccc',\n            padding: '10px',\n            borderRadius: '4px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: '0'\n            },\n            children: document.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), document.path && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '5px 0 0',\n              fontSize: '0.9em',\n              color: '#666'\n            },\n            children: [\"Path: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: document.path,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              style: {\n                color: '#007bff'\n              },\n              children: document.path\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 19\n          }, this)]\n        }, document.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No documents available in this source.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: isLoading || !selectedFile,\n        children: isLoading ? `Uploading ${uploadProgress}%` : 'Upload Document'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }, this), renderSourceList(globalSources, 'Global Sources'), renderSourceList(privateSources, 'Private Sources'), selectedSource && renderDocuments(), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n}\n_s(ListSources, \"BI0zgxlquV7qE3vhHN0Mrobfoh4=\");\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","ListSources","_s","globalSources","setGlobalSources","privateSources","setPrivateSources","selectedSource","setSelectedSource","documents","setDocuments","isLoading","setIsLoading","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","refreshData","fetchSources","fetchDocuments","response","get","headers","getCookie","withCredentials","status","data","global_sources","private_sources","error","_error$response","_error$response$data","console","source","map","doc","path","filename","info","length","_error$response2","_error$response2$data","name","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","handleSyncSource","post","success","message","_error$response3","_error$response3$data","handleFileChange","event","target","files","handleUpload","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","_error$response4","_error$response4$data","pollUploadStatus","taskId","maxAttempts","Promise","resolve","setTimeout","renderSourceList","sources","title","children","style","color","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","listStyleType","padding","marginBottom","border","borderRadius","margin","href","onClick","e","preventDefault","textDecoration","toLowerCase","renderDocuments","index","fontSize","rel","id","type","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction ListSources() {\r\n  const [globalSources, setGlobalSources] = useState([]);\r\n  const [privateSources, setPrivateSources] = useState([]);\r\n  const [selectedSource, setSelectedSource] = useState(null);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  const refreshData = async () => {\r\n    await fetchSources();\r\n    if (selectedSource) {\r\n      await fetchDocuments(selectedSource);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, []);\r\n\r\n  const fetchSources = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-sources/', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setGlobalSources(response.data.global_sources || []);\r\n        setPrivateSources(response.data.private_sources || []);\r\n      } else {\r\n        toast.error('An error occurred while fetching the sources.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during source fetching:', error);\r\n      toast.error(error.response?.data?.error || 'An error occurred while fetching the sources.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDocuments = async (source) => {\r\n    setIsLoading(true);\r\n    setSelectedSource(source);\r\n\r\n    try {\r\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200 && response.data.documents) {\r\n        setDocuments(response.data.documents.documents.map(doc => ({\r\n          ...doc,\r\n          path: doc.path || `/chatbot1/media/documents/${source}/${doc.filename}`\r\n        })));\r\n        toast.info(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\r\n      } else {\r\n        toast.error('An error occurred while fetching the documents.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document fetching:', error);\r\n      toast.error(error.response?.data?.error || 'An error occurred while fetching the documents.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const handleSyncSource = async () => {\r\n    try {\r\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n      toast.success(response.data.message);\r\n      fetchDocuments(selectedSource);\r\n    } catch (error) {\r\n      console.error('Error syncing source:', error);\r\n      toast.error(error.response?.data?.error || 'An error occurred during synchronization.');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile || !selectedSource) {\r\n      toast.error('Please select a file and a source to upload.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setUploadProgress(0);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n\r\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percentCompleted);\r\n        }\r\n      });\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        toast.success('Document uploaded successfully.');\r\n        fetchDocuments(selectedSource);\r\n      } else if (response.status === 202) {\r\n        toast.success('Document replaced successfully.');\r\n        fetchDocuments(selectedSource);\r\n      } else {\r\n        toast.error('An error occurred while uploading the document.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document upload:', error);\r\n      toast.error(error.response?.data?.error || 'An error occurred while uploading the document.');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setUploadProgress(0);\r\n      setSelectedFile(null);\r\n    }\r\n  };\r\n\r\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\r\n    for (let i = 0; i < maxAttempts; i++) {\r\n      try {\r\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\r\n          headers: {\r\n            'X-CSRFToken': getCookie('csrftoken'),\r\n          },\r\n          withCredentials: true\r\n        });\r\n\r\n        if (response.data.status === 'SUCCESS') {\r\n          toast.success('Upload completed successfully.');\r\n          await fetchDocuments(source);\r\n          return;\r\n        } else if (response.data.status === 'ERROR') {\r\n          toast.error(`Upload failed. Error: ${response.data.message}`);\r\n          return;\r\n        }\r\n\r\n        toast.info(`Upload still in progress. Checking again in 5 seconds...`);\r\n        await new Promise(resolve => setTimeout(resolve, 5000));\r\n      } catch (error) {\r\n        console.error('Error polling upload status:', error);\r\n        toast.error(`Error checking upload status: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    toast.error('Upload status check timed out. The upload may still be in progress.');\r\n  };\r\n\r\n  const renderSourceList = (sources, title) => (\r\n    <div>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>{title}</h2>\r\n      {sources.length > 0 ? (\r\n        <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n          {sources.map((source) => (\r\n            <li key={source} style={{ marginBottom: '10px', border: '1px solid #ccc', padding: '10px', borderRadius: '4px' }}>\r\n              <h3 style={{ margin: '0' }}>\r\n                <a href=\"#\" onClick={(e) => { e.preventDefault(); fetchDocuments(source); }} style={{ color: '#007bff', textDecoration: 'none' }}>\r\n                  {source}\r\n                </a>\r\n              </h3>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No {title.toLowerCase()} found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderDocuments = () => (\r\n    <div>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>Documents in {selectedSource}</h2>\r\n      {documents.length > 0 ? (\r\n        <>\r\n          <p>Total documents: {documents.length}</p>\r\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n            {documents.map((document, index) => (\r\n              <li key={document.id || index} style={{ marginBottom: '10px', border: '1px solid #ccc', padding: '10px', borderRadius: '4px' }}>\r\n                <h4 style={{ margin: '0' }}>{document.filename}</h4>\r\n                {document.path && (\r\n                  <p style={{ margin: '5px 0 0', fontSize: '0.9em', color: '#666' }}>\r\n                    Path: <a href={document.path} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#007bff' }}>{document.path}</a>\r\n                  </p>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <p>No documents available in this source.</p>\r\n      )}\r\n\r\n      <div style={{ marginTop: '20px' }}>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload} disabled={isLoading || !selectedFile}>\r\n          {isLoading ? `Uploading ${uploadProgress}%` : 'Upload Document'}\r\n        </button>\r\n        <ToastContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      {isLoading && <p>Loading...</p>}\r\n      {renderSourceList(globalSources, 'Global Sources')}\r\n      {renderSourceList(privateSources, 'Private Sources')}\r\n      {selectedSource && renderDocuments()}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListSources;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}