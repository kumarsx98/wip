{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\UploadDocument.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadDocument() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [documents, setDocuments] = useState([]);\n  const {\n    source\n  } = useParams(); // Get the source name from the URL parameters\n\n  // Fetch documents when the component mounts or when the source changes\n  useEffect(() => {\n    fetchDocuments();\n  }, [source]);\n\n  // Function to fetch documents for the current source\n  const fetchDocuments = async () => {\n    try {\n      console.log(`Fetching documents for source: ${source}`);\n      const response = await axios.get(`/api/get-documents/${source}/`); // Correct path\n      console.log('Fetched documents:', response.data);\n      setDocuments(response.data.documents || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n      setUploadStatus('Error fetching documents');\n    }\n  };\n\n  // Handle file input change\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  // Handle file upload\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file to upload');\n      return;\n    }\n    setIsLoading(true);\n    setUploadStatus('Uploading...');\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post(`/api/upload-document/${source}/`, formData, {\n        // Correct path\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      console.log('Upload response:', response.data);\n      if (response.data.status === 'success') {\n        setUploadStatus('File uploaded successfully.');\n        fetchDocuments(); // Fetch updated document list\n      } else {\n        setUploadStatus('Upload failed. Please try again.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error uploading document:', error);\n      setUploadStatus('Error: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Unknown error occurred'));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to get CSRF token from cookies\n  const getCookie = name => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Upload Document to \", source]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", uploadStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Documents:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: documents.map((doc, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: doc.name || doc.id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadDocument, \"m5F5HxfXpnSWfVYmUh70QqEXkas=\", false, function () {\n  return [useParams];\n});\n_c = UploadDocument;\nexport default UploadDocument;\nvar _c;\n$RefreshReg$(_c, \"UploadDocument\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","UploadDocument","_s","file","setFile","uploadStatus","setUploadStatus","isLoading","setIsLoading","documents","setDocuments","source","fetchDocuments","console","log","response","get","data","error","handleFileChange","e","target","files","handleUpload","preventDefault","alert","formData","FormData","append","post","headers","getCookie","withCredentials","status","_error$response","_error$response$data","message","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","disabled","map","doc","index","id","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/UploadDocument.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction UploadDocument() {\r\n  const [file, setFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [documents, setDocuments] = useState([]);\r\n  const { source } = useParams(); // Get the source name from the URL parameters\r\n\r\n  // Fetch documents when the component mounts or when the source changes\r\n  useEffect(() => {\r\n    fetchDocuments();\r\n  }, [source]);\r\n\r\n  // Function to fetch documents for the current source\r\n  const fetchDocuments = async () => {\r\n    try {\r\n      console.log(`Fetching documents for source: ${source}`);\r\n      const response = await axios.get(`/api/get-documents/${source}/`); // Correct path\r\n      console.log('Fetched documents:', response.data);\r\n      setDocuments(response.data.documents || []);\r\n    } catch (error) {\r\n      console.error('Error fetching documents:', error);\r\n      setUploadStatus('Error fetching documents');\r\n    }\r\n  };\r\n\r\n  // Handle file input change\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  // Handle file upload\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      alert('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setUploadStatus('Uploading...');\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await axios.post(`/api/upload-document/${source}/`, formData, { // Correct path\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n      });\r\n\r\n      console.log('Upload response:', response.data);\r\n\r\n      if (response.data.status === 'success') {\r\n        setUploadStatus('File uploaded successfully.');\r\n        fetchDocuments(); // Fetch updated document list\r\n      } else {\r\n        setUploadStatus('Upload failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading document:', error);\r\n      setUploadStatus('Error: ' + (error.response?.data?.message || error.message || 'Unknown error occurred'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to get CSRF token from cookies\r\n  const getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Document to {source}</h2>\r\n      <form onSubmit={handleUpload}>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button type=\"submit\" disabled={isLoading}>Upload</button>\r\n      </form>\r\n      <div>\r\n        <p>Status: {uploadStatus}</p>\r\n      </div>\r\n      <div>\r\n        <h3>Documents:</h3>\r\n        <ul>\r\n          {documents.map((doc, index) => (\r\n            <li key={index}>{doc.name || doc.id}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadDocument;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}