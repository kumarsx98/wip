{"ast":null,"code":"const handleSendMessage=async e=>{e.preventDefault();const message=e.target.message.value.trim();if(message==='')return;e.target.message.value='';setIsLoading(true);setShowSpinner(true);const newMessage={text:message,sender:'user'};setMessages(prevMessages=>[...prevMessages,newMessage]);try{console.log('Sending request to backend:',{question:message,source:mysource});const resp=await axios.post('/chatbot1/search/',{question:message,source:mysource});console.log('Full response from backend:',resp);if(resp.data&&resp.data.response){let response=resp.data.response;// ... (keep your existing response processing code here)\nconst botMessage={text:response,sender:'bot',copyButton:true,filenames:resp.data.references?resp.data.references.map(ref=>ref.filename):[]};setMessages(prevMessages=>{console.log('Updating messages with bot response:',[...prevMessages,botMessage]);return[...prevMessages,botMessage];});if(conversationBoxRef.current){conversationBoxRef.current.scrollTop=conversationBoxRef.current.scrollHeight;}}else{console.error('Unexpected response format:',resp.data);setMessages(prevMessages=>[...prevMessages,{text:'Error: Unexpected response format',sender:'bot'}]);}}catch(error){console.error('Error sending message:',error);if(error.response){console.error('Error response:',error.response.data);console.error('Error status:',error.response.status);}else if(error.request){console.error('No response received:',error.request);}else{console.error('Error setting up request:',error.message);}setMessages(prevMessages=>[...prevMessages,{text:'Error: Could not get response from server',sender:'bot'}]);}finally{setIsLoading(false);setShowSpinner(false);}};","map":{"version":3,"names":["handleSendMessage","e","preventDefault","message","target","value","trim","setIsLoading","setShowSpinner","newMessage","text","sender","setMessages","prevMessages","console","log","question","source","mysource","resp","axios","post","data","response","botMessage","copyButton","filenames","references","map","ref","filename","conversationBoxRef","current","scrollTop","scrollHeight","error","status","request"],"sources":["C:/Users/AMX1/Desktop/django_test/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/Home.js"],"sourcesContent":["const handleSendMessage = async (e) => {\r\n  e.preventDefault();\r\n  const message = e.target.message.value.trim();\r\n  if (message === '') return;\r\n\r\n  e.target.message.value = '';\r\n  setIsLoading(true);\r\n  setShowSpinner(true);\r\n\r\n  const newMessage = { text: message, sender: 'user' };\r\n  setMessages(prevMessages => [...prevMessages, newMessage]);\r\n\r\n  try {\r\n    console.log('Sending request to backend:', { question: message, source: mysource });\r\n    const resp = await axios.post('/chatbot1/search/', {\r\n      question: message,\r\n      source: mysource\r\n    });\r\n\r\n    console.log('Full response from backend:', resp);\r\n\r\n    if (resp.data && resp.data.response) {\r\n      let response = resp.data.response;\r\n\r\n      // ... (keep your existing response processing code here)\r\n\r\n      const botMessage = {\r\n        text: response,\r\n        sender: 'bot',\r\n        copyButton: true,\r\n        filenames: resp.data.references ? resp.data.references.map((ref) => ref.filename) : [],\r\n      };\r\n\r\n      setMessages(prevMessages => {\r\n        console.log('Updating messages with bot response:', [...prevMessages, botMessage]);\r\n        return [...prevMessages, botMessage];\r\n      });\r\n\r\n      if (conversationBoxRef.current) {\r\n        conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\r\n      }\r\n    } else {\r\n      console.error('Unexpected response format:', resp.data);\r\n      setMessages(prevMessages => [\r\n        ...prevMessages,\r\n        { text: 'Error: Unexpected response format', sender: 'bot' }\r\n      ]);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error sending message:', error);\r\n    if (error.response) {\r\n      console.error('Error response:', error.response.data);\r\n      console.error('Error status:', error.response.status);\r\n    } else if (error.request) {\r\n      console.error('No response received:', error.request);\r\n    } else {\r\n      console.error('Error setting up request:', error.message);\r\n    }\r\n    setMessages(prevMessages => [\r\n      ...prevMessages,\r\n      { text: 'Error: Could not get response from server', sender: 'bot' }\r\n    ]);\r\n  } finally {\r\n    setIsLoading(false);\r\n    setShowSpinner(false);\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}