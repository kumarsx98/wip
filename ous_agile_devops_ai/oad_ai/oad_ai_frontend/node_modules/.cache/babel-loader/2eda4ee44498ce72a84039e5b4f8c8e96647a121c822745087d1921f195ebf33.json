{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\UploadDocument.js\",\n  _s = $RefreshSig$();\n// UploadDocument.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadDocument = ({\n  source\n}) => {\n  _s();\n  const [documents, setDocuments] = useState([]);\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    fetchDocuments(); // Fetch documents when the component mounts\n  }, []);\n  const fetchDocuments = async () => {\n    try {\n      const response = await axios.get(`/api/v1/sources/${source}/documents`);\n      setDocuments(response.data.documents); // Update the document list\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post(`/api/v1/sources/${source}/upload-document`, formData);\n      console.log('Upload response:', response.data);\n\n      // Trigger re-fetching of the documents list after successful upload\n      fetchDocuments();\n    } catch (error) {\n      console.error('Error uploading document:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Documents in \", source]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), documents.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No documents available in this source.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: doc.name\n      }, doc.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadDocument, \"eRyZPW1gpQ6W69lfr+c/574t8pY=\");\n_c = UploadDocument;\nexport default UploadDocument;\nvar _c;\n$RefreshReg$(_c, \"UploadDocument\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UploadDocument","source","_s","documents","setDocuments","file","setFile","fetchDocuments","response","get","data","error","console","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","log","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","doc","name","id","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/UploadDocument.js"],"sourcesContent":["// UploadDocument.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UploadDocument = ({ source }) => {\r\n  const [documents, setDocuments] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchDocuments(); // Fetch documents when the component mounts\r\n  }, []);\r\n\r\n  const fetchDocuments = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/v1/sources/${source}/documents`);\r\n      setDocuments(response.data.documents); // Update the document list\r\n    } catch (error) {\r\n      console.error('Error fetching documents:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n    \r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await axios.post(`/api/v1/sources/${source}/upload-document`, formData);\r\n      console.log('Upload response:', response.data);\r\n\r\n      // Trigger re-fetching of the documents list after successful upload\r\n      fetchDocuments();\r\n    } catch (error) {\r\n      console.error('Error uploading document:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Documents in {source}</h2>\r\n      {documents.length === 0 ? (\r\n        <p>No documents available in this source.</p>\r\n      ) : (\r\n        <ul>\r\n          {documents.map((doc) => (\r\n            <li key={doc.id}>{doc.name}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload Document</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadDocument;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}