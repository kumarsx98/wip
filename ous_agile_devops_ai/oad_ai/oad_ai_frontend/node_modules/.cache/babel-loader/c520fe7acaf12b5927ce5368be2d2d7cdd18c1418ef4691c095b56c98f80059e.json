{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\AutoUploadManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTO_UPLOAD_URL = '/chatbot1/auto-upload/';\nconst START_SCHEDULER_URL = '/chatbot1/start-scheduler/';\nconst GET_UPLOAD_STATUS_URL = '/chatbot1/get-upload-status/';\nfunction AutoUploadManager() {\n  _s();\n  console.log('Component rendering');\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [schedulerStatus, setSchedulerStatus] = useState('Not running');\n  const [uploadDetails, setUploadDetails] = useState([]);\n  useEffect(() => {\n    axios.defaults.withCredentials = true;\n    fetchUploadStatus();\n  }, []);\n  useEffect(() => {\n    console.log('Current uploadDetails state:', uploadDetails);\n    console.log('Current schedulerStatus state:', schedulerStatus);\n  }, [uploadDetails, schedulerStatus]);\n  const fetchUploadStatus = async () => {\n    try {\n      const response = await axios.get(GET_UPLOAD_STATUS_URL, {\n        headers: {\n          'X-CSRFToken': getCookie('csrftoken')\n        }\n      });\n      console.log('API Response:', response.data);\n      if (response.status === 200) {\n        console.log('Setting uploadDetails:', response.data.upload_details);\n        setUploadDetails(response.data.upload_details || []);\n        setSchedulerStatus(response.data.scheduler_status || 'Not running');\n      }\n    } catch (error) {\n      console.error('Error fetching upload status:', error);\n    }\n  };\n  const handleAutoUpload = useCallback(async () => {\n    // ... (unchanged)\n  }, []);\n  const startScheduler = useCallback(async () => {\n    // ... (unchanged)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid black',\n      padding: '20px',\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Auto Upload Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startScheduler,\n      disabled: schedulerStatus === 'Running',\n      children: schedulerStatus === 'Running' ? 'Scheduler Running' : 'Start Scheduler'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAutoUpload,\n      disabled: isLoading,\n      children: \"Trigger Auto Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Scheduler Status: \", schedulerStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Uploads:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Debug: Upload Details Length: \", uploadDetails.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), uploadDetails.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: uploadDetails.map((detail, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(detail)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recent uploads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(AutoUploadManager, \"/57cyP5+l0YCDGG1L2/18dyZ+Gw=\");\n_c = AutoUploadManager;\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\nexport default AutoUploadManager;\nvar _c;\n$RefreshReg$(_c, \"AutoUploadManager\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","axios","jsxDEV","_jsxDEV","AUTO_UPLOAD_URL","START_SCHEDULER_URL","GET_UPLOAD_STATUS_URL","AutoUploadManager","_s","console","log","isLoading","setIsLoading","message","setMessage","uploadedFiles","setUploadedFiles","schedulerStatus","setSchedulerStatus","uploadDetails","setUploadDetails","defaults","withCredentials","fetchUploadStatus","response","get","headers","getCookie","data","status","upload_details","scheduler_status","error","handleAutoUpload","startScheduler","style","border","padding","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","map","detail","index","JSON","stringify","_c","name","value","document","cookie","parts","split","pop","shift","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/AutoUploadManager.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AUTO_UPLOAD_URL = '/chatbot1/auto-upload/';\r\nconst START_SCHEDULER_URL = '/chatbot1/start-scheduler/';\r\nconst GET_UPLOAD_STATUS_URL = '/chatbot1/get-upload-status/';\r\n\r\nfunction AutoUploadManager() {\r\n  console.log('Component rendering');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [schedulerStatus, setSchedulerStatus] = useState('Not running');\r\n  const [uploadDetails, setUploadDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.defaults.withCredentials = true;\r\n    fetchUploadStatus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Current uploadDetails state:', uploadDetails);\r\n    console.log('Current schedulerStatus state:', schedulerStatus);\r\n  }, [uploadDetails, schedulerStatus]);\r\n\r\n  const fetchUploadStatus = async () => {\r\n    try {\r\n      const response = await axios.get(GET_UPLOAD_STATUS_URL, {\r\n        headers: {\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n      });\r\n      console.log('API Response:', response.data);\r\n      if (response.status === 200) {\r\n        console.log('Setting uploadDetails:', response.data.upload_details);\r\n        setUploadDetails(response.data.upload_details || []);\r\n        setSchedulerStatus(response.data.scheduler_status || 'Not running');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching upload status:', error);\r\n    }\r\n  };\r\n\r\n  const handleAutoUpload = useCallback(async () => {\r\n    // ... (unchanged)\r\n  }, []);\r\n\r\n  const startScheduler = useCallback(async () => {\r\n    // ... (unchanged)\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ border: '1px solid black', padding: '20px', margin: '20px' }}>\r\n      <h2>Auto Upload Manager</h2>\r\n      <button onClick={startScheduler} disabled={schedulerStatus === 'Running'}>\r\n        {schedulerStatus === 'Running' ? 'Scheduler Running' : 'Start Scheduler'}\r\n      </button>\r\n      <button onClick={handleAutoUpload} disabled={isLoading}>\r\n        Trigger Auto Upload\r\n      </button>\r\n      <p>Scheduler Status: {schedulerStatus}</p>\r\n\r\n      {message && <p>{message}</p>}\r\n\r\n      <h3>Recent Uploads:</h3>\r\n      <p>Debug: Upload Details Length: {uploadDetails.length}</p>\r\n      {uploadDetails.length > 0 ? (\r\n        <ul>\r\n          {uploadDetails.map((detail, index) => (\r\n            <li key={index}>\r\n              {JSON.stringify(detail)}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No recent uploads</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getCookie(name) {\r\n  const value = `; ${document.cookie}`;\r\n  const parts = value.split(`; ${name}=`);\r\n  if (parts.length === 2) return parts.pop().split(';').shift();\r\n}\r\n\r\nexport default AutoUploadManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}