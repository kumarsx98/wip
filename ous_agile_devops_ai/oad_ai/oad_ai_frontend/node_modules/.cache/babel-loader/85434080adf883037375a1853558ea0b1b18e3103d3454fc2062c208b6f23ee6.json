{"ast":null,"code":"import React from'react';import{useParams}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";function Chatbot(){const{mysource}=useParams();// Use the `mysource` parameter to determine which chatbot to display\n// You can modify your code accordingly here\n// Update the URLs to include the `mysource` parameter\nconst publicChatbotUrl=\"/OAD?mysource=\".concat(mysource);const internalChatbotUrl=\"/OAD?mysource=\".concat(mysource);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"iframe\",{src:mysource==='public'?publicChatbotUrl:internalChatbotUrl})});}export default Chatbot;","map":{"version":3,"names":["React","useParams","jsx","_jsx","Chatbot","mysource","publicChatbotUrl","concat","internalChatbotUrl","children","src"],"sources":["C:/Users/AMX1/Desktop/django_test/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/Chatbot.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Chatbot() {\r\n  const { mysource } = useParams();\r\n\r\n  // Use the `mysource` parameter to determine which chatbot to display\r\n  // You can modify your code accordingly here\r\n\r\n  // Update the URLs to include the `mysource` parameter\r\n  const publicChatbotUrl = `/OAD?mysource=${mysource}`;\r\n  const internalChatbotUrl = `/OAD?mysource=${mysource}`;\r\n\r\n  return (\r\n    <div>\r\n      {/* Render the chatbot based on the `mysource` parameter */}\r\n      <iframe src={mysource === 'public' ? publicChatbotUrl : internalChatbotUrl} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7C,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACjB,KAAM,CAAEC,QAAS,CAAC,CAAGJ,SAAS,CAAC,CAAC,CAEhC;AACA;AAEA;AACA,KAAM,CAAAK,gBAAgB,kBAAAC,MAAA,CAAoBF,QAAQ,CAAE,CACpD,KAAM,CAAAG,kBAAkB,kBAAAD,MAAA,CAAoBF,QAAQ,CAAE,CAEtD,mBACEF,IAAA,QAAAM,QAAA,cAEEN,IAAA,WAAQO,GAAG,CAAEL,QAAQ,GAAK,QAAQ,CAAGC,gBAAgB,CAAGE,kBAAmB,CAAE,CAAC,CAC3E,CAAC,CAEV,CAEA,cAAe,CAAAJ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}