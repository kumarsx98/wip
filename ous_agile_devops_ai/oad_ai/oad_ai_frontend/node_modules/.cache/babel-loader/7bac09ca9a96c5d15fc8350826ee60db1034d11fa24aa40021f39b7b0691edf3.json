{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ChatWithSource.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from './api'; // Use the custom API instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWithSource = () => {\n  _s();\n  const {\n    sourceName\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [input, setInput] = useState('');\n  const conversationBoxRef = useRef(null);\n  useEffect(() => {\n    if (conversationBoxRef.current) {\n      conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n  useEffect(() => {\n    // Ensure new data loading for changed sourceName\n  }, [sourceName]);\n  const sendMessage = async () => {\n    if (!input) return;\n    const newMessage = {\n      text: input,\n      user: 'Me'\n    };\n    setMessages([...messages, newMessage]);\n    setInput('');\n    try {\n      setIsLoading(true);\n      const response = await api.post(`/chat-with-source/${sourceName}/`, {\n        question: input,\n        filters: JSON.stringify({})\n      });\n      console.log('Received response from API:', response.data);\n      let formattedContent = formatResponse(response.data.response.content);\n      setMessages(prevMessages => [...prevMessages, newMessage, {\n        text: formattedContent,\n        user: 'Bot'\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prevMessages => [...prevMessages, newMessage, {\n        text: 'Sorry, an error occurred while processing your request.',\n        user: 'Bot'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const formatResponse = response => {\n    response = response.replace(/\\[(.*?)\\]/g, '\\n\\n');\n    response = response.replace(/(\\w+)\\.\\n\\n/g, '$1\\n');\n    response = response.replace(/\\.\\n\\n/g, '.\\n');\n    response = response.replace(/^\\s+|\\s+$/g, '');\n    response = response.replace(/^\"|\"$/g, '');\n    response = response.replace(/\\.\\s+(\\d+)\\./g, '$1.');\n    response = response.replace(/^\\.\\s*/gm, '');\n    response = response.replace(/([^.\\n])$/gm, '.');\n    const linkRegex = /(https?:\\/\\/[^\\s]+)/g;\n    response = response.replace(linkRegex, (match, url) => `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${url}</a>`);\n    const urlRegex = /go\\/([^\\s]+)/g;\n    response = response.replace(urlRegex, (match, sometext) => {\n      const href = `http://go/${sometext}`;\n      return `<a href=\"${href}\" target=\"_blank\" rel=\"noopener noreferrer\">go/${sometext}</a>`;\n    });\n    const emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/g;\n    response = response.replace(emailRegex, (match, email) => `<a href=\"mailto:${email}\">${email}</a>`);\n    return response;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat with Source: \", sourceName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: conversationBoxRef,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: message.text\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 58\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: e => e.key === 'Enter' ? sendMessage() : null,\n      disabled: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: isLoading,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWithSource, \"5hgy7QCK3EI4EqnqUOdr5sHZPDU=\", false, function () {\n  return [useParams];\n});\n_c = ChatWithSource;\nexport default ChatWithSource;\nvar _c;\n$RefreshReg$(_c, \"ChatWithSource\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useParams","api","jsxDEV","_jsxDEV","ChatWithSource","_s","sourceName","messages","setMessages","isLoading","setIsLoading","input","setInput","conversationBoxRef","current","scrollTop","scrollHeight","sendMessage","newMessage","text","user","response","post","question","filters","JSON","stringify","console","log","data","formattedContent","formatResponse","content","prevMessages","error","replace","linkRegex","match","url","urlRegex","sometext","href","emailRegex","email","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","message","index","dangerouslySetInnerHTML","__html","type","value","onChange","e","target","onKeyPress","key","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ChatWithSource.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport api from './api';  // Use the custom API instance\r\n\r\nconst ChatWithSource = () => {\r\n    const { sourceName } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [input, setInput] = useState('');\r\n    const conversationBoxRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (conversationBoxRef.current) {\r\n            conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\r\n        }\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        // Ensure new data loading for changed sourceName\r\n    }, [sourceName]);\r\n\r\n    const sendMessage = async () => {\r\n        if (!input) return;\r\n\r\n        const newMessage = {\r\n            text: input,\r\n            user: 'Me'\r\n        };\r\n        setMessages([...messages, newMessage]);\r\n        setInput('');\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            const response = await api.post(`/chat-with-source/${sourceName}/`, {\r\n                question: input,\r\n                filters: JSON.stringify({})\r\n            });\r\n            console.log('Received response from API:', response.data);\r\n\r\n            let formattedContent = formatResponse(response.data.response.content);\r\n\r\n            setMessages(prevMessages => [...prevMessages, newMessage, { text: formattedContent, user: 'Bot' }]);\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n            setMessages(prevMessages => [...prevMessages, newMessage, { text: 'Sorry, an error occurred while processing your request.', user: 'Bot' }]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const formatResponse = (response) => {\r\n        response = response.replace(/\\[(.*?)\\]/g, '\\n\\n');\r\n        response = response.replace(/(\\w+)\\.\\n\\n/g, '$1\\n');\r\n        response = response.replace(/\\.\\n\\n/g, '.\\n');\r\n        response = response.replace(/^\\s+|\\s+$/g, '');\r\n        response = response.replace(/^\"|\"$/g, '');\r\n        response = response.replace(/\\.\\s+(\\d+)\\./g, '$1.');\r\n        response = response.replace(/^\\.\\s*/gm, '');\r\n        response = response.replace(/([^.\\n])$/gm, '.');\r\n\r\n        const linkRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n        response = response.replace(linkRegex, (match, url) => `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${url}</a>`);\r\n\r\n        const urlRegex = /go\\/([^\\s]+)/g;\r\n        response = response.replace(urlRegex, (match, sometext) => {\r\n            const href = `http://go/${sometext}`;\r\n            return `<a href=\"${href}\" target=\"_blank\" rel=\"noopener noreferrer\">go/${sometext}</a>`;\r\n        });\r\n\r\n        const emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/g;\r\n        response = response.replace(emailRegex, (match, email) => `<a href=\"mailto:${email}\">${email}</a>`);\r\n\r\n        return response;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Chat with Source: {sourceName}</h2>\r\n            <div ref={conversationBoxRef}>\r\n                {messages.map((message, index) => (\r\n                    <div key={index}>\r\n                        <strong>{message.user}:</strong> <span dangerouslySetInnerHTML={{ __html: message.text }} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onKeyPress={(e) => (e.key === 'Enter' ? sendMessage() : null)}\r\n                disabled={isLoading}\r\n            />\r\n            <button onClick={sendMessage} disabled={isLoading}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatWithSource;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}