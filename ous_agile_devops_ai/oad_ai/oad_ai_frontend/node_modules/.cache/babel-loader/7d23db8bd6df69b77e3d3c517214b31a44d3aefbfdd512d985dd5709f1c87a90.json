{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListSources() {\n  _s();\n  const [sources, setSources] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [message, setMessage] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  useEffect(() => {\n    fetchSources();\n  }, []);\n  const getCookie = name => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  };\n  const fetchSources = async () => {\n    try {\n      const response = await axios.get('/chatbot1/list-sources/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      console.log('Sources response:', response.data);\n      setSources(response.data.sources || []);\n    } catch (error) {\n      console.error('Error fetching sources:', error);\n      setMessage('Failed to fetch sources');\n    }\n  };\n  const fetchDocuments = async source => {\n    try {\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      console.log('Documents response:', response.data);\n      setDocuments(response.data.documents || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n      setMessage('Failed to fetch documents');\n    }\n  };\n  const handleSourceClick = source => {\n    setSelectedSource(source);\n    fetchDocuments(source);\n  };\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile || !selectedSource) {\n      setMessage('Please select a file and a source');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      console.log('Upload response:', response.data);\n      if (response.data.status === 'success') {\n        setMessage('File uploaded successfully');\n        setSelectedFile(null);\n        // Clear the file input\n        const fileInput = document.querySelector('input[type=\"file\"]');\n        if (fileInput) fileInput.value = '';\n        // Refresh the documents list\n        fetchDocuments(selectedSource);\n      } else {\n        setMessage('Failed to upload document: ' + response.data.message);\n      }\n    } catch (error) {\n      console.error('Error uploading document:', error);\n      setMessage('Failed to upload document');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sources.map(source => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSourceClick(source),\n        children: source\n      }, source, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), selectedSource && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Documents in \", selectedSource]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: documents.map((doc, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [doc.filename || doc.name, doc.path && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" - Path: \", doc.path]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 30\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(ListSources, \"Hs7QMZfr+O5HSZIx/2jYIESz/4s=\");\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ListSources","_s","sources","setSources","selectedSource","setSelectedSource","documents","setDocuments","message","setMessage","selectedFile","setSelectedFile","fetchSources","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","response","get","headers","withCredentials","console","log","data","error","fetchDocuments","source","handleSourceClick","handleFileChange","event","target","files","handleUpload","formData","FormData","append","post","status","fileInput","querySelector","value","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","doc","index","filename","path","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ListSources() {\r\n  const [sources, setSources] = useState([]);\r\n  const [selectedSource, setSelectedSource] = useState(null);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchSources();\r\n  }, []);\r\n\r\n  const getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\n  const fetchSources = async () => {\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-sources/', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n      console.log('Sources response:', response.data);\r\n      setSources(response.data.sources || []);\r\n    } catch (error) {\r\n      console.error('Error fetching sources:', error);\r\n      setMessage('Failed to fetch sources');\r\n    }\r\n  };\r\n\r\n  const fetchDocuments = async (source) => {\r\n    try {\r\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n      console.log('Documents response:', response.data);\r\n      setDocuments(response.data.documents || []);\r\n    } catch (error) {\r\n      console.error('Error fetching documents:', error);\r\n      setMessage('Failed to fetch documents');\r\n    }\r\n  };\r\n\r\n  const handleSourceClick = (source) => {\r\n    setSelectedSource(source);\r\n    fetchDocuments(source);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile || !selectedSource) {\r\n      setMessage('Please select a file and a source');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      console.log('Upload response:', response.data);\r\n\r\n      if (response.data.status === 'success') {\r\n        setMessage('File uploaded successfully');\r\n        setSelectedFile(null);\r\n        // Clear the file input\r\n        const fileInput = document.querySelector('input[type=\"file\"]');\r\n        if (fileInput) fileInput.value = '';\r\n        // Refresh the documents list\r\n        fetchDocuments(selectedSource);\r\n      } else {\r\n        setMessage('Failed to upload document: ' + response.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading document:', error);\r\n      setMessage('Failed to upload document');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>List of Sources</h1>\r\n      <ul>\r\n        {sources.map((source) => (\r\n          <li key={source} onClick={() => handleSourceClick(source)}>\r\n            {source}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {selectedSource && (\r\n        <div>\r\n          <h2>Documents in {selectedSource}</h2>\r\n          <ul>\r\n            {documents.map((doc, index) => (\r\n              <li key={index}>\r\n                {doc.filename || doc.name}\r\n                {doc.path && <span> - Path: {doc.path}</span>}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          <button onClick={handleUpload}>Upload Document</button>\r\n        </div>\r\n      )}\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListSources;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}