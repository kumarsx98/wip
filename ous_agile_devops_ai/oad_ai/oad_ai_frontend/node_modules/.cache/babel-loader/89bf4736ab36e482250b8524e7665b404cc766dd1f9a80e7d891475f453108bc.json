{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListSources() {\n  _s();\n  const [globalSources, setGlobalSources] = useState([]);\n  const [privateSources, setPrivateSources] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadSteps, setUploadSteps] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [sortField, setSortField] = useState('filename');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const {\n    sourceName\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (sourceName) {\n      fetchDocuments(sourceName);\n    } else {\n      refreshSources();\n    }\n  }, [sourceName]);\n\n  // Fetch sources when sourceName is not present\n  const refreshSources = async () => {\n    try {\n      setIsLoading(true);\n      setMessage('');\n      const response = await axios.get('/chatbot1/list-sources/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        const {\n          global,\n          private: privateSourcesList\n        } = response.data.external_sources;\n        setGlobalSources(global.filter(source => source.name.startsWith('oad-')));\n        setPrivateSources(privateSourcesList.filter(source => source.name.startsWith('oad-')));\n      } else {\n        setMessage('Error fetching sources.');\n      }\n    } catch (error) {\n      console.error('Error fetching sources:', error);\n      setMessage('An error occurred while fetching sources.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch documents for a specific source\n  const fetchDocuments = async source => {\n    try {\n      setIsLoading(true);\n      setMessage('');\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200 && response.data.documents) {\n        setDocuments(response.data.documents.documents.map(doc => ({\n          ...doc,\n          path: trimPath(doc.path || `/chatbot1/media/documents/${source}/${doc.filename}`),\n          preview_url: `/media/previews/${source}/${doc.filename}`\n        })));\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\n      } else {\n        setMessage('Error fetching documents.');\n      }\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n      setMessage('An error occurred while fetching documents.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Sort documents by selected field\n  const sortDocuments = docs => {\n    return docs.sort((a, b) => {\n      let comparison = 0;\n      if (a[sortField] < b[sortField]) {\n        comparison = -1;\n      } else if (a[sortField] > b[sortField]) {\n        comparison = 1;\n      }\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  };\n\n  // Handle sorting by field\n  const handleSort = field => {\n    if (field === sortField) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  // Trim file path\n  const trimPath = path => {\n    return path.replace('/chatbot1/media/documents/', '');\n  };\n\n  // Get CSRF token from cookies\n  const getCookie = name => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  };\n\n  // Navigate to chat with source\n  const navigateToChat = sourceName => {\n    navigate(`/chat-with-source/${sourceName}`);\n  };\n\n  // Render source table\n  const renderSourceTable = (sources, title) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), sources.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sources.map(source => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: source.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: source.visibility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: source.model\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: source.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigateToChat(source.name),\n              children: \"Chat with Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)]\n        }, source.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No sources found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n\n  // Render document table\n  const renderDocumentTable = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Documents in \", sourceName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      children: \"Back to Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('filename'),\n            children: \"Filename\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortDocuments(documents).map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: doc.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: doc.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: doc.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: doc.preview_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"View Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(doc.id, doc.filename),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this)]\n        }, doc.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No documents found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n\n  // Handle document deletion\n  const handleDelete = async (documentId, filename) => {\n    if (!window.confirm(`Are you sure you want to delete ${filename}?`)) return;\n    setIsLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.delete(`/chatbot1/delete-document/${sourceName}/${documentId}/`, {\n        headers: {\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 204) {\n        setMessage(`${filename} was deleted successfully.`);\n        fetchDocuments(sourceName);\n      } else {\n        setMessage('Error deleting document.');\n      }\n    } catch (error) {\n      console.error('Error deleting document:', error);\n      setMessage('An error occurred while deleting the document.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [sourceName ? renderDocumentTable() : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderSourceTable(globalSources, 'Global Sources'), renderSourceTable(privateSources, 'Private Sources')]\n    }, void 0, true), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this);\n}\n_s(ListSources, \"/VEpP6sFhVfaoWB5jHyFZqF7FU0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ListSources","_s","globalSources","setGlobalSources","privateSources","setPrivateSources","documents","setDocuments","message","setMessage","isLoading","setIsLoading","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","uploadSteps","setUploadSteps","selectedFile","setSelectedFile","sortField","setSortField","sortDirection","setSortDirection","sourceName","navigate","fetchDocuments","refreshSources","response","get","headers","getCookie","withCredentials","status","global","private","privateSourcesList","data","external_sources","filter","source","name","startsWith","error","console","map","doc","path","trimPath","filename","preview_url","length","sortDocuments","docs","sort","a","b","comparison","handleSort","field","replace","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","navigateToChat","renderSourceTable","sources","title","children","fileName","_jsxFileName","lineNumber","columnNumber","visibility","model","id","onClick","renderDocumentTable","href","target","rel","handleDelete","documentId","window","confirm","delete","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction ListSources() {\r\n    const [globalSources, setGlobalSources] = useState([]);\r\n    const [privateSources, setPrivateSources] = useState([]);\r\n    const [documents, setDocuments] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [uploadProgress, setUploadProgress] = useState(0);\r\n    const [uploadStatus, setUploadStatus] = useState('');\r\n    const [uploadSteps, setUploadSteps] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [sortField, setSortField] = useState('filename');\r\n    const [sortDirection, setSortDirection] = useState('asc');\r\n    const { sourceName } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (sourceName) {\r\n            fetchDocuments(sourceName);\r\n        } else {\r\n            refreshSources();\r\n        }\r\n    }, [sourceName]);\r\n\r\n    // Fetch sources when sourceName is not present\r\n    const refreshSources = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setMessage('');\r\n            const response = await axios.get('/chatbot1/list-sources/', {\r\n                headers: { 'Content-Type': 'application/json', 'X-CSRFToken': getCookie('csrftoken') },\r\n                withCredentials: true,\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                const { global, private: privateSourcesList } = response.data.external_sources;\r\n                setGlobalSources(global.filter(source => source.name.startsWith('oad-')));\r\n                setPrivateSources(privateSourcesList.filter(source => source.name.startsWith('oad-')));\r\n            } else {\r\n                setMessage('Error fetching sources.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching sources:', error);\r\n            setMessage('An error occurred while fetching sources.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fetch documents for a specific source\r\n    const fetchDocuments = async (source) => {\r\n        try {\r\n            setIsLoading(true);\r\n            setMessage('');\r\n            const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\r\n                headers: { 'Content-Type': 'application/json', 'X-CSRFToken': getCookie('csrftoken') },\r\n                withCredentials: true,\r\n            });\r\n\r\n            if (response.status === 200 && response.data.documents) {\r\n                setDocuments(response.data.documents.documents.map(doc => ({\r\n                    ...doc,\r\n                    path: trimPath(doc.path || `/chatbot1/media/documents/${source}/${doc.filename}`),\r\n                    preview_url: `/media/previews/${source}/${doc.filename}`,\r\n                })));\r\n                setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\r\n            } else {\r\n                setMessage('Error fetching documents.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching documents:', error);\r\n            setMessage('An error occurred while fetching documents.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Sort documents by selected field\r\n    const sortDocuments = (docs) => {\r\n        return docs.sort((a, b) => {\r\n            let comparison = 0;\r\n            if (a[sortField] < b[sortField]) {\r\n                comparison = -1;\r\n            } else if (a[sortField] > b[sortField]) {\r\n                comparison = 1;\r\n            }\r\n            return sortDirection === 'asc' ? comparison : -comparison;\r\n        });\r\n    };\r\n\r\n    // Handle sorting by field\r\n    const handleSort = (field) => {\r\n        if (field === sortField) {\r\n            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n        } else {\r\n            setSortField(field);\r\n            setSortDirection('asc');\r\n        }\r\n    };\r\n\r\n    // Trim file path\r\n    const trimPath = (path) => {\r\n        return path.replace('/chatbot1/media/documents/', '');\r\n    };\r\n\r\n    // Get CSRF token from cookies\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) === `${name}=`) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    };\r\n\r\n    // Navigate to chat with source\r\n    const navigateToChat = (sourceName) => {\r\n        navigate(`/chat-with-source/${sourceName}`);\r\n    };\r\n\r\n    // Render source table\r\n    const renderSourceTable = (sources, title) => (\r\n        <div>\r\n            <h2>{title}</h2>\r\n            {sources.length > 0 ? (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Visibility</th>\r\n                            <th>Model</th>\r\n                            <th>ID</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {sources.map((source) => (\r\n                            <tr key={source.id}>\r\n                                <td>{source.name}</td>\r\n                                <td>{source.visibility}</td>\r\n                                <td>{source.model}</td>\r\n                                <td>{source.id}</td>\r\n                                <td>\r\n                                    <button onClick={() => navigateToChat(source.name)}>Chat with Source</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p>No sources found.</p>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    // Render document table\r\n    const renderDocumentTable = () => (\r\n        <div>\r\n            <h2>Documents in {sourceName}</h2>\r\n            <button onClick={() => navigate('/')}>Back to Sources</button>\r\n            {documents.length > 0 ? (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th onClick={() => handleSort('filename')}>Filename</th>\r\n                            <th>Path</th>\r\n                            <th>ID</th>\r\n                            <th>Preview</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {sortDocuments(documents).map((doc) => (\r\n                            <tr key={doc.id}>\r\n                                <td>{doc.filename}</td>\r\n                                <td>{doc.path}</td>\r\n                                <td>{doc.id}</td>\r\n                                <td>\r\n                                    <a href={doc.preview_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        View Preview\r\n                                    </a>\r\n                                </td>\r\n                                <td>\r\n                                    <button onClick={() => handleDelete(doc.id, doc.filename)}>Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p>No documents found.</p>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    // Handle document deletion\r\n    const handleDelete = async (documentId, filename) => {\r\n        if (!window.confirm(`Are you sure you want to delete ${filename}?`)) return;\r\n\r\n        setIsLoading(true);\r\n        setMessage('');\r\n\r\n        try {\r\n            const response = await axios.delete(`/chatbot1/delete-document/${sourceName}/${documentId}/`, {\r\n                headers: { 'X-CSRFToken': getCookie('csrftoken') },\r\n                withCredentials: true,\r\n            });\r\n\r\n            if (response.status === 204) {\r\n                setMessage(`${filename} was deleted successfully.`);\r\n                fetchDocuments(sourceName);\r\n            } else {\r\n                setMessage('Error deleting document.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting document:', error);\r\n            setMessage('An error occurred while deleting the document.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {sourceName ? renderDocumentTable() : (\r\n                <>\r\n                    {renderSourceTable(globalSources, 'Global Sources')}\r\n                    {renderSourceTable(privateSources, 'Private Sources')}\r\n                </>\r\n            )}\r\n            {message && <p>{message}</p>}\r\n            {isLoading && <p>Loading...</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListSources;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}