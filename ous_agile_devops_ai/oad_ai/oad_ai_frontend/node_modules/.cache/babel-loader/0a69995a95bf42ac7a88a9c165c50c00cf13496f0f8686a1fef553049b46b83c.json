{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListSources() {\n  _s();\n  const [sources, setSources] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadSteps, setUploadSteps] = useState([]);\n  const [sortField, setSortField] = useState('name');\n  const [sortDirection, setSortDirection] = useState('asc');\n\n  // Format date string for display\n  const formatDate = dateString => {\n    return dateString ? new Date(dateString).toLocaleString() : 'N/A';\n  };\n\n  // Handle table sorting\n  const handleSort = field => {\n    if (field === sortField) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  // Sort sources based on selected field and direction\n  const sortSources = sourcesToSort => {\n    return sourcesToSort.sort((a, b) => {\n      const comparison = a[sortField] < b[sortField] ? -1 : a[sortField] > b[sortField] ? 1 : 0;\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  };\n\n  // Fetch sources from the backend\n  const fetchSources = async () => {\n    setIsLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.get('/chatbot1/list-sources/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        setSources(response.data.external_sources.global || []);\n      } else {\n        setMessage('An error occurred while fetching the sources.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error during source fetching:', error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred while fetching the sources.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch documents for a specific source\n  const fetchDocuments = async source => {\n    setIsLoading(true);\n    setMessage('');\n    setSelectedSource(source);\n    try {\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200 && response.data.documents) {\n        setDocuments(response.data.documents.documents);\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\n      } else {\n        setMessage('An error occurred while fetching the documents.');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error during document fetching:', error);\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'An error occurred while fetching the documents.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Get CSRF token from cookies\n  const getCookie = name => {\n    const cookieValue = document.cookie.split(';').find(cookie => cookie.trim().startsWith(`${name}=`));\n    return cookieValue ? decodeURIComponent(cookieValue.split('=')[1]) : null;\n  };\n\n  // Sync source with backend\n  const handleSyncSource = async sourceName => {\n    try {\n      const response = await axios.post(`/chatbot1/sync-source/${sourceName}/`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      alert(response.data.message);\n      fetchSources();\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error syncing source:', error);\n      alert(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'An error occurred during synchronization.');\n    }\n  };\n\n  // Handle file selection\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  // Handle file upload\n  const handleUpload = async () => {\n    if (!selectedFile || !selectedSource) {\n      setMessage('Please select a file and a source to upload.');\n      return;\n    }\n    setIsLoading(true);\n    setMessage('');\n    setUploadProgress(0);\n    setUploadStatus('Preparing upload...');\n    setUploadSteps([]);\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true,\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n          setUploadStatus(`Uploading: ${percentCompleted}%`);\n        }\n      });\n      if (response.status === 200 || response.status === 201) {\n        setUploadStatus('Upload successful. Processing document...');\n        setUploadSteps(prevSteps => [...prevSteps, 'Document uploaded successfully']);\n        await pollUploadStatus(selectedSource, response.data.task_id);\n      } else if (response.status === 202) {\n        setUploadStatus('Document replaced successfully. Processing...');\n        setUploadSteps(prevSteps => [...prevSteps, 'Document replaced successfully']);\n        await pollUploadStatus(selectedSource, response.data.task_id);\n      } else {\n        setUploadStatus('Upload failed');\n        setMessage('An error occurred while uploading the document.');\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Error during document upload:', error);\n      setUploadStatus('Upload failed');\n      setMessage(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'An error occurred while uploading the document.');\n    } finally {\n      setIsLoading(false);\n      setUploadProgress(0);\n      setSelectedFile(null);\n    }\n  };\n\n  // Poll upload status to check for completion\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\n    for (let i = 0; i < maxAttempts; i++) {\n      try {\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\n          headers: {\n            'X-CSRFToken': getCookie('csrftoken')\n          },\n          withCredentials: true\n        });\n        if (response.data.status === 'SUCCESS') {\n          setUploadStatus('Upload and processing completed successfully');\n          setUploadSteps(prevSteps => [...prevSteps, 'Document processed successfully']);\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          await fetchDocuments(source);\n          return;\n        } else if (response.data.status === 'ERROR') {\n          setUploadStatus('Upload failed');\n          setUploadSteps(prevSteps => [...prevSteps, 'Error during document processing']);\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          return;\n        }\n        setUploadStatus(`Processing document... (Attempt ${i + 1}/${maxAttempts})`);\n        setUploadSteps(prevSteps => [...prevSteps, `Processing attempt ${i + 1}`]);\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      } catch (error) {\n        console.error('Error polling upload status:', error);\n        setUploadStatus('Error checking upload status');\n        setMessage(`Error checking upload status: ${error.message}`);\n        return;\n      }\n    }\n    setUploadStatus('Upload status check timed out');\n    setMessage('Upload status check timed out. The upload may still be in progress.');\n  };\n\n  // Render sources table with sortable columns\n  const renderSourcesTable = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: \"Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), sources.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: '#f8f9fa'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('name'),\n            children: [\"Source Name \", sortField === 'name' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('visibility'),\n            children: [\"Visibility \", sortField === 'visibility' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('model'),\n            children: [\"Model \", sortField === 'model' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('description'),\n            children: [\"Description \", sortField === 'description' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortSources(sources).map((source, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: source.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: source.visibility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: source.model\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: source.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchDocuments(source.name),\n              children: \"View Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSyncSource(source.name),\n              children: \"Sync Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No sources available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n\n  // Render documents table\n  const renderDocumentsTable = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: [\"Documents for Source: \", selectedSource]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: '#f8f9fa'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Document Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Uploaded By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Upload Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: documents.map((doc, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: doc.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: doc.uploaded_by\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(doc.upload_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: doc.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No documents found for this source.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n\n  // Table header style\n  const tableHeaderStyle = {\n    backgroundColor: '#f0f0f0',\n    padding: '10px',\n    cursor: 'pointer'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 19\n    }, this), renderSourcesTable(), selectedSource && renderDocumentsTable(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Upload Progress: \", uploadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", uploadStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), uploadSteps.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: uploadSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: step\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n}\n_s(ListSources, \"jPoBoDqOMmgAuHBt14MqfKjanMw=\");\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ListSources","_s","sources","setSources","selectedSource","setSelectedSource","documents","setDocuments","message","setMessage","isLoading","setIsLoading","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","uploadSteps","setUploadSteps","sortField","setSortField","sortDirection","setSortDirection","formatDate","dateString","Date","toLocaleString","handleSort","field","sortSources","sourcesToSort","sort","a","b","comparison","fetchSources","response","get","headers","getCookie","withCredentials","status","data","external_sources","global","error","_error$response","_error$response$data","console","fetchDocuments","source","length","_error$response2","_error$response2$data","name","cookieValue","document","cookie","split","find","trim","startsWith","decodeURIComponent","handleSyncSource","sourceName","post","alert","_error$response3","_error$response3$data","handleFileChange","event","target","files","handleUpload","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","prevSteps","pollUploadStatus","task_id","_error$response4","_error$response4$data","taskId","maxAttempts","i","JSON","stringify","full_response","Promise","resolve","setTimeout","renderSourcesTable","style","backgroundColor","padding","children","color","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","width","borderCollapse","tableHeaderStyle","onClick","map","index","visibility","model","description","renderDocumentsTable","doc","uploaded_by","upload_date","cursor","type","onChange","step","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ListSources() {\r\n  const [sources, setSources] = useState([]);\r\n  const [selectedSource, setSelectedSource] = useState(null);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [uploadSteps, setUploadSteps] = useState([]);\r\n  const [sortField, setSortField] = useState('name');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n\r\n  // Format date string for display\r\n  const formatDate = (dateString) => {\r\n    return dateString ? new Date(dateString).toLocaleString() : 'N/A';\r\n  };\r\n\r\n  // Handle table sorting\r\n  const handleSort = (field) => {\r\n    if (field === sortField) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  // Sort sources based on selected field and direction\r\n  const sortSources = (sourcesToSort) => {\r\n    return sourcesToSort.sort((a, b) => {\r\n      const comparison = a[sortField] < b[sortField] ? -1 : a[sortField] > b[sortField] ? 1 : 0;\r\n      return sortDirection === 'asc' ? comparison : -comparison;\r\n    });\r\n  };\r\n\r\n  // Fetch sources from the backend\r\n  const fetchSources = async () => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-sources/', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      if (response.status === 200) {\r\n        setSources(response.data.external_sources.global || []);\r\n      } else {\r\n        setMessage('An error occurred while fetching the sources.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during source fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the sources.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch documents for a specific source\r\n  const fetchDocuments = async (source) => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setSelectedSource(source);\r\n    try {\r\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      if (response.status === 200 && response.data.documents) {\r\n        setDocuments(response.data.documents.documents);\r\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\r\n      } else {\r\n        setMessage('An error occurred while fetching the documents.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the documents.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Get CSRF token from cookies\r\n  const getCookie = (name) => {\r\n    const cookieValue = document.cookie.split(';').find(cookie => cookie.trim().startsWith(`${name}=`));\r\n    return cookieValue ? decodeURIComponent(cookieValue.split('=')[1]) : null;\r\n  };\r\n\r\n  // Sync source with backend\r\n  const handleSyncSource = async (sourceName) => {\r\n    try {\r\n      const response = await axios.post(`/chatbot1/sync-source/${sourceName}/`, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      alert(response.data.message);\r\n      fetchSources();\r\n    } catch (error) {\r\n      console.error('Error syncing source:', error);\r\n      alert(error.response?.data?.error || 'An error occurred during synchronization.');\r\n    }\r\n  };\r\n\r\n  // Handle file selection\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  // Handle file upload\r\n  const handleUpload = async () => {\r\n    if (!selectedFile || !selectedSource) {\r\n      setMessage('Please select a file and a source to upload.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setUploadProgress(0);\r\n    setUploadStatus('Preparing upload...');\r\n    setUploadSteps([]);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n\r\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percentCompleted);\r\n          setUploadStatus(`Uploading: ${percentCompleted}%`);\r\n        }\r\n      });\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        setUploadStatus('Upload successful. Processing document...');\r\n        setUploadSteps(prevSteps => [...prevSteps, 'Document uploaded successfully']);\r\n        await pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else if (response.status === 202) {\r\n        setUploadStatus('Document replaced successfully. Processing...');\r\n        setUploadSteps(prevSteps => [...prevSteps, 'Document replaced successfully']);\r\n        await pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else {\r\n        setUploadStatus('Upload failed');\r\n        setMessage('An error occurred while uploading the document.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document upload:', error);\r\n      setUploadStatus('Upload failed');\r\n      setMessage(error.response?.data?.error || 'An error occurred while uploading the document.');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setUploadProgress(0);\r\n      setSelectedFile(null);\r\n    }\r\n  };\r\n\r\n  // Poll upload status to check for completion\r\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\r\n    for (let i = 0; i < maxAttempts; i++) {\r\n      try {\r\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\r\n          headers: {\r\n            'X-CSRFToken': getCookie('csrftoken'),\r\n          },\r\n          withCredentials: true\r\n        });\r\n\r\n        if (response.data.status === 'SUCCESS') {\r\n          setUploadStatus('Upload and processing completed successfully');\r\n          setUploadSteps(prevSteps => [...prevSteps, 'Document processed successfully']);\r\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          await fetchDocuments(source);\r\n          return;\r\n        } else if (response.data.status === 'ERROR') {\r\n          setUploadStatus('Upload failed');\r\n          setUploadSteps(prevSteps => [...prevSteps, 'Error during document processing']);\r\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          return;\r\n        }\r\n\r\n        setUploadStatus(`Processing document... (Attempt ${i + 1}/${maxAttempts})`);\r\n        setUploadSteps(prevSteps => [...prevSteps, `Processing attempt ${i + 1}`]);\r\n        await new Promise(resolve => setTimeout(resolve, 5000));\r\n      } catch (error) {\r\n        console.error('Error polling upload status:', error);\r\n        setUploadStatus('Error checking upload status');\r\n        setMessage(`Error checking upload status: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setUploadStatus('Upload status check timed out');\r\n    setMessage('Upload status check timed out. The upload may still be in progress.');\r\n  };\r\n\r\n  // Render sources table with sortable columns\r\n  const renderSourcesTable = () => (\r\n    <div style={{ backgroundColor: 'white', padding: '20px' }}>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>Sources</h2>\r\n      {sources.length > 0 ? (\r\n        <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '20px' }}>\r\n          <thead>\r\n            <tr style={{ backgroundColor: '#f8f9fa' }}>\r\n              <th style={tableHeaderStyle} onClick={() => handleSort('name')}>\r\n                Source Name {sortField === 'name' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n              </th>\r\n              <th style={tableHeaderStyle} onClick={() => handleSort('visibility')}>\r\n                Visibility {sortField === 'visibility' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n              </th>\r\n              <th style={tableHeaderStyle} onClick={() => handleSort('model')}>\r\n                Model {sortField === 'model' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n              </th>\r\n              <th style={tableHeaderStyle} onClick={() => handleSort('description')}>\r\n                Description {sortField === 'description' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n              </th>\r\n              <th style={tableHeaderStyle}>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sortSources(sources).map((source, index) => (\r\n              <tr key={index}>\r\n                <td>{source.name}</td>\r\n                <td>{source.visibility}</td>\r\n                <td>{source.model}</td>\r\n                <td>{source.description}</td>\r\n                <td>\r\n                  <button onClick={() => fetchDocuments(source.name)}>View Documents</button>\r\n                  <button onClick={() => handleSyncSource(source.name)}>Sync Source</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No sources available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // Render documents table\r\n  const renderDocumentsTable = () => (\r\n    <div style={{ backgroundColor: 'white', padding: '20px' }}>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>Documents for Source: {selectedSource}</h2>\r\n      {documents.length > 0 ? (\r\n        <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '20px' }}>\r\n          <thead>\r\n            <tr style={{ backgroundColor: '#f8f9fa' }}>\r\n              <th style={tableHeaderStyle}>Document Name</th>\r\n              <th style={tableHeaderStyle}>Uploaded By</th>\r\n              <th style={tableHeaderStyle}>Upload Date</th>\r\n              <th style={tableHeaderStyle}>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {documents.map((doc, index) => (\r\n              <tr key={index}>\r\n                <td>{doc.name}</td>\r\n                <td>{doc.uploaded_by}</td>\r\n                <td>{formatDate(doc.upload_date)}</td>\r\n                <td>{doc.description}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No documents found for this source.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // Table header style\r\n  const tableHeaderStyle = {\r\n    backgroundColor: '#f0f0f0',\r\n    padding: '10px',\r\n    cursor: 'pointer',\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <p>Loading...</p>}\r\n      {message && <p>{message}</p>}\r\n      {renderSourcesTable()}\r\n      {selectedSource && renderDocumentsTable()}\r\n      <div style={{ padding: '20px' }}>\r\n        <h3>Upload Document</h3>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload</button>\r\n        <div style={{ marginTop: '20px' }}>\r\n          <p>Upload Progress: {uploadProgress}%</p>\r\n          <p>Status: {uploadStatus}</p>\r\n          {uploadSteps.length > 0 && (\r\n            <ul>\r\n              {uploadSteps.map((step, index) => (\r\n                <li key={index}>{step}</li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListSources;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}