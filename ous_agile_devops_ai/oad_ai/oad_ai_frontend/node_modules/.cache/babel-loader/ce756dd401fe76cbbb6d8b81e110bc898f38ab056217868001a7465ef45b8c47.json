{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Utility function to get CSRF token from cookies\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCookie = name => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n};\nconst ListSources = () => {\n  _s();\n  const [sources, setSources] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    fetchSources();\n  }, []);\n  const fetchSources = async () => {\n    try {\n      const response = await axios.get('/chatbot1/list-sources/');\n      console.log('Sources response:', response.data);\n      setSources(response.data.sources || []); // Ensure sources is always an array\n    } catch (error) {\n      console.error('Error fetching sources:', error);\n      setMessage('Failed to fetch sources.');\n    }\n  };\n  const fetchDocuments = async sourceName => {\n    try {\n      const response = await axios.get(`/chatbot1/get-documents/${sourceName}/`);\n      console.log('Fetch documents response:', response.data);\n      setDocuments(response.data.documents || []); // Ensure documents is always an array\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n      setMessage('Failed to fetch documents.');\n    }\n  };\n  const handleSourceChange = event => {\n    const sourceName = event.target.value;\n    setSelectedSource(sourceName);\n    fetchDocuments(sourceName);\n  };\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setMessage('Please select a file to upload.');\n      return;\n    }\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      console.log('Upload response:', response.data);\n      if (response.status === 200) {\n        setMessage('Document uploaded successfully.');\n        setSelectedFile(null);\n        setDocuments(response.data.documents || []);\n      } else if (response.status === 202) {\n        setMessage('Document upload initiated. Please wait for it to complete.');\n        setSelectedFile(null);\n        // Polling mechanism to check the status of the task\n        setTimeout(() => fetchDocuments(selectedSource), 5000);\n      } else {\n        setMessage('Failed to upload document. Unexpected status code: ' + response.status);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error uploading document:', error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred while uploading the document.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleSourceChange,\n      value: selectedSource || '',\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), sources.map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: source,\n        children: source\n      }, source, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: isLoading,\n      children: isLoading ? 'Uploading...' : 'Upload Document'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: documents.map((doc, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: doc.file_name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(ListSources, \"IOrUvmsZmohP6gfCYX+lqmvNsfE=\");\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","ListSources","_s","sources","setSources","selectedSource","setSelectedSource","selectedFile","setSelectedFile","documents","setDocuments","message","setMessage","isLoading","setIsLoading","fetchSources","response","get","console","log","data","error","fetchDocuments","sourceName","handleSourceChange","event","target","value","handleFileChange","files","handleUpload","formData","FormData","append","post","headers","withCredentials","status","setTimeout","_error$response","_error$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","source","type","onClick","disabled","doc","index","file_name","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Utility function to get CSRF token from cookies\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n};\r\n\r\nconst ListSources = () => {\r\n  const [sources, setSources] = useState([]);\r\n  const [selectedSource, setSelectedSource] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchSources();\r\n  }, []);\r\n\r\n  const fetchSources = async () => {\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-sources/');\r\n      console.log('Sources response:', response.data);\r\n      setSources(response.data.sources || []); // Ensure sources is always an array\r\n    } catch (error) {\r\n      console.error('Error fetching sources:', error);\r\n      setMessage('Failed to fetch sources.');\r\n    }\r\n  };\r\n\r\n  const fetchDocuments = async (sourceName) => {\r\n    try {\r\n      const response = await axios.get(`/chatbot1/get-documents/${sourceName}/`);\r\n      console.log('Fetch documents response:', response.data);\r\n      setDocuments(response.data.documents || []); // Ensure documents is always an array\r\n    } catch (error) {\r\n      console.error('Error fetching documents:', error);\r\n      setMessage('Failed to fetch documents.');\r\n    }\r\n  };\r\n\r\n  const handleSourceChange = (event) => {\r\n    const sourceName = event.target.value;\r\n    setSelectedSource(sourceName);\r\n    fetchDocuments(sourceName);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      setMessage('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n      });\r\n\r\n      console.log('Upload response:', response.data);\r\n\r\n      if (response.status === 200) {\r\n        setMessage('Document uploaded successfully.');\r\n        setSelectedFile(null);\r\n        setDocuments(response.data.documents || []);\r\n      } else if (response.status === 202) {\r\n        setMessage('Document upload initiated. Please wait for it to complete.');\r\n        setSelectedFile(null);\r\n        // Polling mechanism to check the status of the task\r\n        setTimeout(() => fetchDocuments(selectedSource), 5000);\r\n      } else {\r\n        setMessage('Failed to upload document. Unexpected status code: ' + response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading document:', error);\r\n      setMessage(error.response?.data?.message || 'An error occurred while uploading the document.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>List of Sources</h1>\r\n      {message && <p>{message}</p>}\r\n      <select onChange={handleSourceChange} value={selectedSource || ''}>\r\n        <option value=\"\">Select a source</option>\r\n        {sources.map((source) => (\r\n          <option key={source} value={source}>\r\n            {source}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload} disabled={isLoading}>\r\n        {isLoading ? 'Uploading...' : 'Upload Document'}\r\n      </button>\r\n      <h2>Documents</h2>\r\n      <ul>\r\n        {documents.map((doc, index) => (\r\n          <li key={index}>{doc.file_name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListSources;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAIC,IAAI,IAAK;EAC1B,IAAIC,WAAW,GAAG,IAAI;EACtB,IAAIC,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACC,MAAM,KAAK,EAAE,EAAE;IAC7C,MAAMC,OAAO,GAAGF,QAAQ,CAACC,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC;IAC1C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,MAAMH,MAAM,GAAGC,OAAO,CAACE,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAChC,IAAIL,MAAM,CAACM,SAAS,CAAC,CAAC,EAAET,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC,KAAMP,IAAI,GAAG,GAAI,EAAE;QACzDC,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAS,CAACT,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC,CAAC;QACnE;MACF;IACF;EACF;EACA,OAAON,WAAW;AACpB,CAAC;AAED,MAAMU,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd8B,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,yBAAyB,CAAC;MAC3DC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC/ChB,UAAU,CAACY,QAAQ,CAACI,IAAI,CAACjB,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CT,UAAU,CAAC,0BAA0B,CAAC;IACxC;EACF,CAAC;EAED,MAAMU,cAAc,GAAG,MAAOC,UAAU,IAAK;IAC3C,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,2BAA2BM,UAAU,GAAG,CAAC;MAC1EL,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEH,QAAQ,CAACI,IAAI,CAAC;MACvDV,YAAY,CAACM,QAAQ,CAACI,IAAI,CAACX,SAAS,IAAI,EAAE,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDT,UAAU,CAAC,4BAA4B,CAAC;IAC1C;EACF,CAAC;EAED,MAAMY,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMF,UAAU,GAAGE,KAAK,CAACC,MAAM,CAACC,KAAK;IACrCrB,iBAAiB,CAACiB,UAAU,CAAC;IAC7BD,cAAc,CAACC,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMK,gBAAgB,GAAIH,KAAK,IAAK;IAClCjB,eAAe,CAACiB,KAAK,CAACC,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACvB,YAAY,EAAE;MACjBK,UAAU,CAAC,iCAAiC,CAAC;MAC7C;IACF;IAEAE,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMiB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE1B,YAAY,CAAC;IAErC,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAM9B,KAAK,CAACgD,IAAI,CAAC,6BAA6B7B,cAAc,GAAG,EAAE0B,QAAQ,EAAE;QAC1FI,OAAO,EAAE;UACP,cAAc,EAAE,qBAAqB;UACrC,aAAa,EAAE9C,SAAS,CAAC,WAAW;QACtC,CAAC;QACD+C,eAAe,EAAE;MACnB,CAAC,CAAC;MAEFlB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAE9C,IAAIJ,QAAQ,CAACqB,MAAM,KAAK,GAAG,EAAE;QAC3BzB,UAAU,CAAC,iCAAiC,CAAC;QAC7CJ,eAAe,CAAC,IAAI,CAAC;QACrBE,YAAY,CAACM,QAAQ,CAACI,IAAI,CAACX,SAAS,IAAI,EAAE,CAAC;MAC7C,CAAC,MAAM,IAAIO,QAAQ,CAACqB,MAAM,KAAK,GAAG,EAAE;QAClCzB,UAAU,CAAC,4DAA4D,CAAC;QACxEJ,eAAe,CAAC,IAAI,CAAC;QACrB;QACA8B,UAAU,CAAC,MAAMhB,cAAc,CAACjB,cAAc,CAAC,EAAE,IAAI,CAAC;MACxD,CAAC,MAAM;QACLO,UAAU,CAAC,qDAAqD,GAAGI,QAAQ,CAACqB,MAAM,CAAC;MACrF;IACF,CAAC,CAAC,OAAOhB,KAAK,EAAE;MAAA,IAAAkB,eAAA,EAAAC,oBAAA;MACdtB,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDT,UAAU,CAAC,EAAA2B,eAAA,GAAAlB,KAAK,CAACL,QAAQ,cAAAuB,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBnB,IAAI,cAAAoB,oBAAA,uBAApBA,oBAAA,CAAsB7B,OAAO,KAAI,iDAAiD,CAAC;IAChG,CAAC,SAAS;MACRG,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACE1B,OAAA;IAAAqD,QAAA,gBACErD,OAAA;MAAAqD,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBlC,OAAO,iBAAIvB,OAAA;MAAAqD,QAAA,EAAI9B;IAAO;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BzD,OAAA;MAAQ0D,QAAQ,EAAEtB,kBAAmB;MAACG,KAAK,EAAEtB,cAAc,IAAI,EAAG;MAAAoC,QAAA,gBAChErD,OAAA;QAAQuC,KAAK,EAAC,EAAE;QAAAc,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxC1C,OAAO,CAAC4C,GAAG,CAAEC,MAAM,iBAClB5D,OAAA;QAAqBuC,KAAK,EAAEqB,MAAO;QAAAP,QAAA,EAChCO;MAAM,GADIA,MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTzD,OAAA;MAAO6D,IAAI,EAAC,MAAM;MAACH,QAAQ,EAAElB;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDzD,OAAA;MAAQ8D,OAAO,EAAEpB,YAAa;MAACqB,QAAQ,EAAEtC,SAAU;MAAA4B,QAAA,EAChD5B,SAAS,GAAG,cAAc,GAAG;IAAiB;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACTzD,OAAA;MAAAqD,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBzD,OAAA;MAAAqD,QAAA,EACGhC,SAAS,CAACsC,GAAG,CAAC,CAACK,GAAG,EAAEC,KAAK,kBACxBjE,OAAA;QAAAqD,QAAA,EAAiBW,GAAG,CAACE;MAAS,GAArBD,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC3C,EAAA,CA7GID,WAAW;AAAAsD,EAAA,GAAXtD,WAAW;AA+GjB,eAAeA,WAAW;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}