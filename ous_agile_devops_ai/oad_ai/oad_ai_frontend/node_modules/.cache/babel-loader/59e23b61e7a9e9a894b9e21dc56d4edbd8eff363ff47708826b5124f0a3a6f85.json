{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\AutoUploadManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoUploadManager = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [uploadDetails, setUploadDetails] = useState([]);\n  const [schedulerStatus, setSchedulerStatus] = useState('Not running');\n  const [lastAutoUploadResponse, setLastAutoUploadResponse] = useState(null);\n  const [autoUploadProgress, setAutoUploadProgress] = useState(0);\n  const [autoUploadSteps, setAutoUploadSteps] = useState([]);\n  const fetchUploadStatus = async () => {\n    try {\n      console.log('Fetching upload status...');\n      const response = await axios.get('/chatbot1/get-upload-status/', {\n        headers: {\n          'X-CSRFToken': getCookie('csrftoken')\n        }\n      });\n      console.log('Upload status response:', response.data);\n      if (response.data.status === 'success') {\n        setUploadDetails(response.data.upload_details || []);\n        setSchedulerStatus('Running');\n      } else {\n        setMessage('Error fetching upload status: ' + response.data.message);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error fetching upload status:', error);\n      setMessage('Error fetching upload status: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    }\n  };\n  useEffect(() => {\n    let isMounted = true;\n    axios.defaults.withCredentials = true;\n    const fetchData = async () => {\n      if (isMounted) {\n        await fetchUploadStatus();\n      }\n    };\n    fetchData();\n    const intervalId = setInterval(fetchData, 60000); // Refresh every 1 minute\n\n    return () => {\n      isMounted = false;\n      clearInterval(intervalId);\n    };\n  }, []);\n  const handleAutoUpload = async () => {\n    setIsLoading(true);\n    setMessage('');\n    setAutoUploadProgress(0);\n    setAutoUploadSteps([]);\n    try {\n      console.log('Triggering auto-upload...');\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Initiating auto-upload process']);\n      const response = await axios.post('/chatbot1/auto-upload/', {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setAutoUploadProgress(percentCompleted);\n        }\n      });\n      console.log('Auto-upload response:', response.data);\n      setLastAutoUploadResponse(response.data);\n      setMessage(response.data.message || 'Auto-upload process completed.');\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Auto-upload process completed']);\n      setUploadDetails(response.data.processed_files || []);\n      console.log('Processed Files with preview URL:', response.data.processed_files); // Log URLs to verify\n      await fetchUploadStatus(); // Refresh the status immediately after auto-upload\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error during auto-upload:', error);\n      setMessage('Error during auto-upload: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message));\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Error occurred during auto-upload']);\n    } finally {\n      setIsLoading(false);\n      setAutoUploadProgress(100);\n    }\n  };\n  const startScheduler = async () => {\n    try {\n      console.log('Starting scheduler...');\n      const response = await axios.post('/chatbot1/start-scheduler/', {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        }\n      });\n      console.log('Start scheduler response:', response.data);\n      setSchedulerStatus(response.data.status === 'success' ? 'Running' : 'Not running');\n      setMessage(response.data.message || 'Scheduler started successfully.');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error starting scheduler:', error);\n      setMessage('Error starting scheduler: ' + (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message));\n    }\n  };\n  const formatTimestamp = timestamp => {\n    return timestamp ? new Date(timestamp).toLocaleString() : \"N/A\";\n  };\n  const fetchPreviews = async () => {\n    try {\n      const response = await axios.get('/chatbot1/list-previews/');\n      const previews = response.data.previews;\n      setUploadDetails(prevDetails => {\n        return prevDetails.map(detail => {\n          const previewUrl = previews.find(preview => preview.includes(detail.file_name)) || '';\n          return {\n            ...detail,\n            preview_url: previewUrl ? `http://localhost:8001/media/${previewUrl}` : 'Not available'\n          };\n        });\n      });\n    } catch (error) {\n      console.error('Error fetching previews:', error);\n    }\n  };\n\n  // getCookie function\n  function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid black',\n      padding: '20px',\n      margin: '20px',\n      color: 'white',\n      backgroundColor: '#333'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Auto Upload Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startScheduler,\n        disabled: schedulerStatus === 'Running',\n        style: {\n          marginRight: '10px',\n          padding: '10px',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: schedulerStatus === 'Running' ? 'Scheduler Running' : 'Start Scheduler'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAutoUpload,\n        disabled: isLoading,\n        style: {\n          padding: '10px',\n          backgroundColor: '#008CBA',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: isLoading ? 'Uploading...' : 'Trigger Auto Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Scheduler Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: schedulerStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#FFA500'\n      },\n      children: [\"Message: \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Auto-Upload Progress:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: autoUploadProgress,\n        max: \"100\",\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [autoUploadProgress, \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: autoUploadSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: step\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Uploads:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), uploadDetails.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: \"File Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: \"Task ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: uploadDetails.map((detail, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: detail.file_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: detail.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: detail.task_id || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: formatTimestamp(detail.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: detail.preview_url ? /*#__PURE__*/_jsxDEV(\"a\", {\n                href: detail.preview_url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                style: {\n                  color: '#00BFFF',\n                  textDecoration: 'underline'\n                },\n                children: \"View Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 23\n              }, this) : 'Not available'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)]\n          }, `${detail.file_name}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recent uploads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoUploadManager, \"rmBB+DcXjGxMLKmGuKhaDZe/XwU=\");\n_c = AutoUploadManager;\nexport default AutoUploadManager;\nvar _c;\n$RefreshReg$(_c, \"AutoUploadManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AutoUploadManager","_s","isLoading","setIsLoading","message","setMessage","uploadDetails","setUploadDetails","schedulerStatus","setSchedulerStatus","lastAutoUploadResponse","setLastAutoUploadResponse","autoUploadProgress","setAutoUploadProgress","autoUploadSteps","setAutoUploadSteps","fetchUploadStatus","console","log","response","get","headers","getCookie","data","status","upload_details","error","_error$response","_error$response$data","isMounted","defaults","withCredentials","fetchData","intervalId","setInterval","clearInterval","handleAutoUpload","prevSteps","post","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","processed_files","_error$response2","_error$response2$data","startScheduler","_error$response3","_error$response3$data","formatTimestamp","timestamp","Date","toLocaleString","fetchPreviews","previews","prevDetails","map","detail","previewUrl","find","preview","includes","file_name","preview_url","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","style","border","padding","margin","color","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","disabled","marginRight","borderRadius","cursor","marginTop","value","max","width","step","index","overflowX","borderCollapse","task_id","href","target","rel","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/AutoUploadManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AutoUploadManager = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [uploadDetails, setUploadDetails] = useState([]);\r\n  const [schedulerStatus, setSchedulerStatus] = useState('Not running');\r\n  const [lastAutoUploadResponse, setLastAutoUploadResponse] = useState(null);\r\n  const [autoUploadProgress, setAutoUploadProgress] = useState(0);\r\n  const [autoUploadSteps, setAutoUploadSteps] = useState([]);\r\n\r\n  const fetchUploadStatus = async () => {\r\n    try {\r\n      console.log('Fetching upload status...');\r\n      const response = await axios.get('/chatbot1/get-upload-status/', {\r\n        headers: {\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n      });\r\n      console.log('Upload status response:', response.data);\r\n      if (response.data.status === 'success') {\r\n        setUploadDetails(response.data.upload_details || []);\r\n        setSchedulerStatus('Running');\r\n      } else {\r\n        setMessage('Error fetching upload status: ' + response.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching upload status:', error);\r\n      setMessage('Error fetching upload status: ' + (error.response?.data?.message || error.message));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    axios.defaults.withCredentials = true;\r\n\r\n    const fetchData = async () => {\r\n      if (isMounted) {\r\n        await fetchUploadStatus();\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 60000); // Refresh every 1 minute\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  const handleAutoUpload = async () => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setAutoUploadProgress(0);\r\n    setAutoUploadSteps([]);\r\n    try {\r\n      console.log('Triggering auto-upload...');\r\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Initiating auto-upload process']);\r\n      const response = await axios.post('/chatbot1/auto-upload/', {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setAutoUploadProgress(percentCompleted);\r\n        },\r\n      });\r\n      console.log('Auto-upload response:', response.data);\r\n      setLastAutoUploadResponse(response.data);\r\n      setMessage(response.data.message || 'Auto-upload process completed.');\r\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Auto-upload process completed']);\r\n      setUploadDetails(response.data.processed_files || []);\r\n      console.log('Processed Files with preview URL:', response.data.processed_files); // Log URLs to verify\r\n      await fetchUploadStatus(); // Refresh the status immediately after auto-upload\r\n    } catch (error) {\r\n      console.error('Error during auto-upload:', error);\r\n      setMessage('Error during auto-upload: ' + (error.response?.data?.message || error.message));\r\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Error occurred during auto-upload']);\r\n    } finally {\r\n      setIsLoading(false);\r\n      setAutoUploadProgress(100);\r\n    }\r\n  };\r\n\r\n  const startScheduler = async () => {\r\n    try {\r\n      console.log('Starting scheduler...');\r\n      const response = await axios.post('/chatbot1/start-scheduler/', {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n      });\r\n      console.log('Start scheduler response:', response.data);\r\n      setSchedulerStatus(response.data.status === 'success' ? 'Running' : 'Not running');\r\n      setMessage(response.data.message || 'Scheduler started successfully.');\r\n    } catch (error) {\r\n      console.error('Error starting scheduler:', error);\r\n      setMessage('Error starting scheduler: ' + (error.response?.data?.message || error.message));\r\n    }\r\n  };\r\n\r\n  const formatTimestamp = timestamp => {\r\n    return timestamp ? new Date(timestamp).toLocaleString() : \"N/A\";\r\n  };\r\n\r\n  const fetchPreviews = async () => {\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-previews/');\r\n      const previews = response.data.previews;\r\n      setUploadDetails(prevDetails => {\r\n        return prevDetails.map(detail => {\r\n          const previewUrl = previews.find(preview => preview.includes(detail.file_name)) || '';\r\n          return { ...detail, preview_url: previewUrl ? `http://localhost:8001/media/${previewUrl}` : 'Not available' };\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching previews:', error);\r\n    }\r\n  };\r\n\r\n  // getCookie function\r\n  function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\n  return (\r\n    <div style={{ border: '1px solid black', padding: '20px', margin: '20px', color: 'white', backgroundColor: '#333' }}>\r\n      <h2>Auto Upload Manager</h2>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <button onClick={startScheduler} disabled={schedulerStatus === 'Running'} style={{ marginRight: '10px', padding: '10px', backgroundColor: '#4CAF50', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>\r\n          {schedulerStatus === 'Running' ? 'Scheduler Running' : 'Start Scheduler'}\r\n        </button>\r\n        <button onClick={handleAutoUpload} disabled={isLoading} style={{ padding: '10px', backgroundColor: '#008CBA', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>\r\n          {isLoading ? 'Uploading...' : 'Trigger Auto Upload'}\r\n        </button>\r\n      </div>\r\n      <p>Scheduler Status: <strong>{schedulerStatus}</strong></p>\r\n      {message && <p style={{ color: '#FFA500' }}>Message: {message}</p>}\r\n\r\n      {isLoading && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h3>Auto-Upload Progress:</h3>\r\n          <progress value={autoUploadProgress} max=\"100\" style={{ width: '100%' }}></progress>\r\n          <p>{autoUploadProgress}% Complete</p>\r\n          <ul>\r\n            {autoUploadSteps.map((step, index) => (\r\n              <li key={index}>{step}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      <h3>Recent Uploads:</h3>\r\n      {uploadDetails.length > 0 ? (\r\n        <div style={{ overflowX: 'auto' }}>\r\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ border: '1px solid white', padding: '8px' }}>File Name</th>\r\n                <th style={{ border: '1px solid white', padding: '8px' }}>Status</th>\r\n                <th style={{ border: '1px solid white', padding: '8px' }}>Task ID</th>\r\n                <th style={{ border: '1px solid white', padding: '8px' }}>Timestamp</th>\r\n                <th style={{ border: '1px solid white', padding: '8px' }}>Preview</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {uploadDetails.map((detail, index) => (\r\n                <tr key={`${detail.file_name}-${index}`}>\r\n                  <td style={{ border: '1px solid white', padding: '8px' }}>{detail.file_name}</td>\r\n                  <td style={{ border: '1px solid white', padding: '8px' }}>{detail.status}</td>\r\n                  <td style={{ border: '1px solid white', padding: '8px' }}>{detail.task_id || 'N/A'}</td>\r\n                  <td style={{ border: '1px solid white', padding: '8px' }}>{formatTimestamp(detail.timestamp)}</td>\r\n                  <td style={{ border: '1px solid white', padding: '8px' }}>\r\n                    {detail.preview_url ? (\r\n                      <a\r\n                        href={detail.preview_url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        style={{ color: '#00BFFF', textDecoration: 'underline' }}\r\n                      >\r\n                        View Preview\r\n                      </a>\r\n                    ) : (\r\n                      'Not available'\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <p>No recent uploads</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoUploadManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}