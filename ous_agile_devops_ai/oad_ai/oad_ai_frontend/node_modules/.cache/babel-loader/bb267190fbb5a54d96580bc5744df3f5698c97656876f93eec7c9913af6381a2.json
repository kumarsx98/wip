{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Desktop\\\\django_test\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const conversationBoxRef = useRef(null);\n  const {\n    mysource\n  } = useParams();\n  useEffect(() => {\n    // Any side effects you want to run on component mount\n  }, []);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const message = e.target.message.value.trim();\n    if (message === '') return;\n    e.target.message.value = '';\n    setIsLoading(true);\n    setShowSpinner(true);\n    const newMessage = {\n      text: message,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    try {\n      console.log('Sending request to backend:', {\n        question: message,\n        source: mysource\n      });\n      const resp = await axios.post('/chatbot1/search/', {\n        question: message,\n        source: mysource\n      });\n      console.log('Full response from backend:', resp);\n      if (resp.data && resp.data.response) {\n        let response = resp.data.response;\n\n        // ... (keep your existing response processing code here)\n\n        const botMessage = {\n          text: response,\n          sender: 'bot',\n          copyButton: true,\n          filenames: resp.data.references ? resp.data.references.map(ref => ref.filename) : []\n        };\n        setMessages(prevMessages => {\n          console.log('Updating messages with bot response:', [...prevMessages, botMessage]);\n          return [...prevMessages, botMessage];\n        });\n        if (conversationBoxRef.current) {\n          conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\n        }\n      } else {\n        console.error('Unexpected response format:', resp.data);\n        setMessages(prevMessages => [...prevMessages, {\n          text: 'Error: Unexpected response format',\n          sender: 'bot'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      if (error.response) {\n        console.error('Error response:', error.response.data);\n        console.error('Error status:', error.response.status);\n      } else if (error.request) {\n        console.error('No response received:', error.request);\n      } else {\n        console.error('Error setting up request:', error.message);\n      }\n      setMessages(prevMessages => [...prevMessages, {\n        text: 'Error: Could not get response from server',\n        sender: 'bot'\n      }]);\n    } finally {\n      setIsLoading(false);\n      setShowSpinner(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: conversationBoxRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), showSpinner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"lnlJp8CCmi8275wmmm8RNTJvyE8=\", false, function () {\n  return [useParams];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","useParams","jsxDEV","_jsxDEV","Home","_s","messages","setMessages","isLoading","setIsLoading","showSpinner","setShowSpinner","conversationBoxRef","mysource","handleSendMessage","e","preventDefault","message","target","value","trim","newMessage","text","sender","prevMessages","console","log","question","source","resp","post","data","response","botMessage","copyButton","filenames","references","map","ref","filename","current","scrollTop","scrollHeight","error","status","request","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Desktop/django_test/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/Home.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nfunction Home() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const conversationBoxRef = useRef(null);\r\n  const { mysource } = useParams();\r\n\r\n  useEffect(() => {\r\n    // Any side effects you want to run on component mount\r\n  }, []);\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const message = e.target.message.value.trim();\r\n    if (message === '') return;\r\n\r\n    e.target.message.value = '';\r\n    setIsLoading(true);\r\n    setShowSpinner(true);\r\n\r\n    const newMessage = { text: message, sender: 'user' };\r\n    setMessages(prevMessages => [...prevMessages, newMessage]);\r\n\r\n    try {\r\n      console.log('Sending request to backend:', { question: message, source: mysource });\r\n      const resp = await axios.post('/chatbot1/search/', {\r\n        question: message,\r\n        source: mysource\r\n      });\r\n\r\n      console.log('Full response from backend:', resp);\r\n\r\n      if (resp.data && resp.data.response) {\r\n        let response = resp.data.response;\r\n\r\n        // ... (keep your existing response processing code here)\r\n\r\n        const botMessage = {\r\n          text: response,\r\n          sender: 'bot',\r\n          copyButton: true,\r\n          filenames: resp.data.references ? resp.data.references.map((ref) => ref.filename) : [],\r\n        };\r\n\r\n        setMessages(prevMessages => {\r\n          console.log('Updating messages with bot response:', [...prevMessages, botMessage]);\r\n          return [...prevMessages, botMessage];\r\n        });\r\n\r\n        if (conversationBoxRef.current) {\r\n          conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\r\n        }\r\n      } else {\r\n        console.error('Unexpected response format:', resp.data);\r\n        setMessages(prevMessages => [\r\n          ...prevMessages,\r\n          { text: 'Error: Unexpected response format', sender: 'bot' }\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      if (error.response) {\r\n        console.error('Error response:', error.response.data);\r\n        console.error('Error status:', error.response.status);\r\n      } else if (error.request) {\r\n        console.error('No response received:', error.request);\r\n      } else {\r\n        console.error('Error setting up request:', error.message);\r\n      }\r\n      setMessages(prevMessages => [\r\n        ...prevMessages,\r\n        { text: 'Error: Could not get response from server', sender: 'bot' }\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n      setShowSpinner(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Your JSX for rendering the chat interface */}\r\n      <div ref={conversationBoxRef}>\r\n        {/* Render your messages here */}\r\n      </div>\r\n      <form onSubmit={handleSendMessage}>\r\n        <input type=\"text\" name=\"message\" />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      {showSpinner && <div>Loading...</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}