{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\AutoUploadManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTO_UPLOAD_URL = '/chatbot1/auto-upload/';\nconst START_SCHEDULER_URL = '/chatbot1/start-scheduler/';\nconst GET_UPLOAD_STATUS_URL = '/chatbot1/get-upload-status/';\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\nfunction AutoUploadManager() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [uploadDetails, setUploadDetails] = useState([]);\n  const [schedulerStatus, setSchedulerStatus] = useState('Not running');\n  const [lastAutoUploadResponse, setLastAutoUploadResponse] = useState(null);\n  const [autoUploadProgress, setAutoUploadProgress] = useState(0);\n  const [autoUploadSteps, setAutoUploadSteps] = useState([]);\n  const fetchUploadStatus = useCallback(async () => {\n    try {\n      console.log('Fetching upload status...');\n      const response = await axios.get(GET_UPLOAD_STATUS_URL, {\n        headers: {\n          'X-CSRFToken': getCookie('csrftoken')\n        }\n      });\n      console.log('Upload status response:', response.data);\n      if (response.data.status === 'success') {\n        setUploadDetails(response.data.upload_details || []);\n        setSchedulerStatus(response.data.scheduler_status || 'Not running');\n      } else {\n        setMessage('Error fetching upload status: ' + response.data.message);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error fetching upload status:', error);\n      setMessage('Error fetching upload status: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    }\n  }, []);\n  useEffect(() => {\n    let isMounted = true;\n    axios.defaults.withCredentials = true;\n    const fetchData = async () => {\n      if (isMounted) {\n        await fetchUploadStatus();\n      }\n    };\n    fetchData();\n    const intervalId = setInterval(fetchData, 60000); // Refresh every 1 minute\n\n    return () => {\n      isMounted = false;\n      clearInterval(intervalId);\n    };\n  }, [fetchUploadStatus]);\n  const handleAutoUpload = async () => {\n    setIsLoading(true);\n    setMessage('');\n    setAutoUploadProgress(0);\n    setAutoUploadSteps([]);\n    try {\n      console.log('Triggering auto-upload...');\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Initiating auto-upload process']);\n      const response = await axios.post(AUTO_UPLOAD_URL, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setAutoUploadProgress(percentCompleted);\n        }\n      });\n      console.log('Auto-upload response:', response.data);\n      setLastAutoUploadResponse(response.data);\n      setMessage(response.data.message || 'Auto-upload process completed.');\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Auto-upload process completed']);\n      await fetchUploadStatus(); // Refresh the status immediately after auto-upload\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error during auto-upload:', error);\n      setMessage('Error during auto-upload: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message));\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Error occurred during auto-upload']);\n    } finally {\n      setIsLoading(false);\n      setAutoUploadProgress(100);\n    }\n  };\n  const startScheduler = async () => {\n    try {\n      console.log('Starting scheduler...');\n      const response = await axios.post(START_SCHEDULER_URL, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        }\n      });\n      console.log('Start scheduler response:', response.data);\n      setSchedulerStatus(response.data.status === 'success' ? 'Running' : 'Not running');\n      setMessage(response.data.message || 'Scheduler started successfully.');\n      await fetchUploadStatus(); // Refresh the status immediately after starting the scheduler\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error starting scheduler:', error);\n      setMessage('Error starting scheduler: ' + (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid black',\n      padding: '20px',\n      margin: '20px',\n      color: 'white',\n      backgroundColor: '#333'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Auto Upload Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startScheduler,\n        disabled: schedulerStatus === 'Running',\n        style: {\n          marginRight: '10px',\n          padding: '10px',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: schedulerStatus === 'Running' ? 'Scheduler Running' : 'Start Scheduler'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAutoUpload,\n        disabled: isLoading,\n        style: {\n          padding: '10px',\n          backgroundColor: '#008CBA',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: isLoading ? 'Uploading...' : 'Trigger Auto Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Scheduler Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: schedulerStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#FFA500'\n      },\n      children: [\"Message: \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Auto-Upload Progress:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: autoUploadProgress,\n        max: \"100\",\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [autoUploadProgress, \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: autoUploadSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: step\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), lastAutoUploadResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        backgroundColor: '#444',\n        padding: '10px',\n        borderRadius: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Last Auto-Upload Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: lastAutoUploadResponse.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Message: \", lastAutoUploadResponse.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), Array.isArray(lastAutoUploadResponse.processed_files) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Processed Files: \", lastAutoUploadResponse.processed_files.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Uploads:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), uploadDetails.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: \"File Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: \"Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: \"Task ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: uploadDetails.map((detail, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: detail.file_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: detail.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: detail.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: detail.task_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid white',\n                padding: '8px'\n              },\n              children: new Date(detail.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)]\n          }, `${detail.file_name}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recent uploads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(AutoUploadManager, \"kwE6KepuOn4aEPjtap39rBiC+Hc=\");\n_c = AutoUploadManager;\nexport default AutoUploadManager;\nvar _c;\n$RefreshReg$(_c, \"AutoUploadManager\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","AUTO_UPLOAD_URL","START_SCHEDULER_URL","GET_UPLOAD_STATUS_URL","getCookie","name","value","document","cookie","parts","split","length","pop","shift","AutoUploadManager","_s","isLoading","setIsLoading","message","setMessage","uploadDetails","setUploadDetails","schedulerStatus","setSchedulerStatus","lastAutoUploadResponse","setLastAutoUploadResponse","autoUploadProgress","setAutoUploadProgress","autoUploadSteps","setAutoUploadSteps","fetchUploadStatus","console","log","response","get","headers","data","status","upload_details","scheduler_status","error","_error$response","_error$response$data","isMounted","defaults","withCredentials","fetchData","intervalId","setInterval","clearInterval","handleAutoUpload","prevSteps","post","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","_error$response2","_error$response2$data","startScheduler","_error$response3","_error$response3$data","style","border","padding","margin","color","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","disabled","marginRight","borderRadius","cursor","marginTop","max","width","map","step","index","Array","isArray","processed_files","join","overflowX","borderCollapse","detail","file_name","source","task_id","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/AutoUploadManager.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AUTO_UPLOAD_URL = '/chatbot1/auto-upload/';\r\nconst START_SCHEDULER_URL = '/chatbot1/start-scheduler/';\r\nconst GET_UPLOAD_STATUS_URL = '/chatbot1/get-upload-status/';\r\n\r\nfunction getCookie(name) {\r\n  const value = `; ${document.cookie}`;\r\n  const parts = value.split(`; ${name}=`);\r\n  if (parts.length === 2) return parts.pop().split(';').shift();\r\n}\r\n\r\nfunction AutoUploadManager() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [uploadDetails, setUploadDetails] = useState([]);\r\n  const [schedulerStatus, setSchedulerStatus] = useState('Not running');\r\n  const [lastAutoUploadResponse, setLastAutoUploadResponse] = useState(null);\r\n  const [autoUploadProgress, setAutoUploadProgress] = useState(0);\r\n  const [autoUploadSteps, setAutoUploadSteps] = useState([]);\r\n\r\n  const fetchUploadStatus = useCallback(async () => {\r\n    try {\r\n      console.log('Fetching upload status...');\r\n      const response = await axios.get(GET_UPLOAD_STATUS_URL, {\r\n        headers: {\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n      });\r\n      console.log('Upload status response:', response.data);\r\n      if (response.data.status === 'success') {\r\n        setUploadDetails(response.data.upload_details || []);\r\n        setSchedulerStatus(response.data.scheduler_status || 'Not running');\r\n      } else {\r\n        setMessage('Error fetching upload status: ' + response.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching upload status:', error);\r\n      setMessage('Error fetching upload status: ' + (error.response?.data?.message || error.message));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    axios.defaults.withCredentials = true;\r\n\r\n    const fetchData = async () => {\r\n      if (isMounted) {\r\n        await fetchUploadStatus();\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 60000); // Refresh every 1 minute\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [fetchUploadStatus]);\r\n\r\n  const handleAutoUpload = async () => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setAutoUploadProgress(0);\r\n    setAutoUploadSteps([]);\r\n    try {\r\n      console.log('Triggering auto-upload...');\r\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Initiating auto-upload process']);\r\n      const response = await axios.post(AUTO_UPLOAD_URL, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setAutoUploadProgress(percentCompleted);\r\n        }\r\n      });\r\n      console.log('Auto-upload response:', response.data);\r\n      setLastAutoUploadResponse(response.data);\r\n      setMessage(response.data.message || 'Auto-upload process completed.');\r\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Auto-upload process completed']);\r\n      await fetchUploadStatus(); // Refresh the status immediately after auto-upload\r\n    } catch (error) {\r\n      console.error('Error during auto-upload:', error);\r\n      setMessage('Error during auto-upload: ' + (error.response?.data?.message || error.message));\r\n      setAutoUploadSteps(prevSteps => [...prevSteps, 'Error occurred during auto-upload']);\r\n    } finally {\r\n      setIsLoading(false);\r\n      setAutoUploadProgress(100);\r\n    }\r\n  };\r\n\r\n  const startScheduler = async () => {\r\n    try {\r\n      console.log('Starting scheduler...');\r\n      const response = await axios.post(START_SCHEDULER_URL, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n      });\r\n      console.log('Start scheduler response:', response.data);\r\n      setSchedulerStatus(response.data.status === 'success' ? 'Running' : 'Not running');\r\n      setMessage(response.data.message || 'Scheduler started successfully.');\r\n      await fetchUploadStatus(); // Refresh the status immediately after starting the scheduler\r\n    } catch (error) {\r\n      console.error('Error starting scheduler:', error);\r\n      setMessage('Error starting scheduler: ' + (error.response?.data?.message || error.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: '1px solid black', padding: '20px', margin: '20px', color: 'white', backgroundColor: '#333' }}>\r\n      <h2>Auto Upload Manager</h2>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <button onClick={startScheduler} disabled={schedulerStatus === 'Running'} style={{ marginRight: '10px', padding: '10px', backgroundColor: '#4CAF50', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>\r\n          {schedulerStatus === 'Running' ? 'Scheduler Running' : 'Start Scheduler'}\r\n        </button>\r\n        <button onClick={handleAutoUpload} disabled={isLoading} style={{ padding: '10px', backgroundColor: '#008CBA', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>\r\n          {isLoading ? 'Uploading...' : 'Trigger Auto Upload'}\r\n        </button>\r\n      </div>\r\n      <p>Scheduler Status: <strong>{schedulerStatus}</strong></p>\r\n      {message && <p style={{ color: '#FFA500' }}>Message: {message}</p>}\r\n\r\n      {isLoading && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h3>Auto-Upload Progress:</h3>\r\n          <progress value={autoUploadProgress} max=\"100\" style={{ width: '100%' }}></progress>\r\n          <p>{autoUploadProgress}% Complete</p>\r\n          <ul>\r\n            {autoUploadSteps.map((step, index) => (\r\n              <li key={index}>{step}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {lastAutoUploadResponse && (\r\n        <div style={{ marginTop: '20px', backgroundColor: '#444', padding: '10px', borderRadius: '4px' }}>\r\n          <h3>Last Auto-Upload Response:</h3>\r\n          <p>Status: <strong>{lastAutoUploadResponse.status}</strong></p>\r\n          <p>Message: {lastAutoUploadResponse.message}</p>\r\n          {Array.isArray(lastAutoUploadResponse.processed_files) && (\r\n            <p>Processed Files: {lastAutoUploadResponse.processed_files.join(', ')}</p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <h3>Recent Uploads:</h3>\r\n      {uploadDetails.length > 0 ? (\r\n        <div style={{ overflowX: 'auto' }}>\r\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ border: '1px solid white', padding: '8px' }}>File Name</th>\r\n                <th style={{ border: '1px solid white', padding: '8px' }}>Source</th>\r\n                <th style={{ border: '1px solid white', padding: '8px' }}>Status</th>\r\n                <th style={{ border: '1px solid white', padding: '8px' }}>Task ID</th>\r\n                <th style={{ border: '1px solid white', padding: '8px' }}>Timestamp</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {uploadDetails.map((detail, index) => (\r\n                <tr key={`${detail.file_name}-${index}`}>\r\n                  <td style={{ border: '1px solid white', padding: '8px' }}>{detail.file_name}</td>\r\n                  <td style={{ border: '1px solid white', padding: '8px' }}>{detail.source}</td>\r\n                  <td style={{ border: '1px solid white', padding: '8px' }}>{detail.status}</td>\r\n                  <td style={{ border: '1px solid white', padding: '8px' }}>{detail.task_id}</td>\r\n                  <td style={{ border: '1px solid white', padding: '8px' }}>{new Date(detail.timestamp).toLocaleString()}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <p>No recent uploads</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AutoUploadManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}