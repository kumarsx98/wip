{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListSources() {\n  _s();\n  const [globalSources, setGlobalSources] = useState([]);\n  const [privateSources, setPrivateSources] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const refreshData = async () => {\n    await fetchSources();\n    if (selectedSource) {\n      await fetchDocuments(selectedSource);\n    }\n  };\n  useEffect(() => {\n    refreshData();\n  }, []);\n  const fetchSources = async () => {\n    setIsLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.get('/chatbot1/list-sources/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        setGlobalSources(response.data.global_sources || []);\n        setPrivateSources(response.data.private_sources || []);\n      } else {\n        setMessage('An error occurred while fetching the sources.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error during source fetching:', error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred while fetching the sources.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchDocuments = async source => {\n    setIsLoading(true);\n    setMessage('');\n    setSelectedSource(source);\n    try {\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200 && response.data.documents) {\n        setDocuments(response.data.documents.documents.map(doc => ({\n          ...doc,\n          path: doc.path || `/chatbot1/media/documents/${source}/${doc.filename}`\n        })));\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\n      } else {\n        setMessage('An error occurred while fetching the documents.');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error during document fetching:', error);\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'An error occurred while fetching the documents.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getCookie = name => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  };\n  const handleSyncSource = async () => {\n    try {\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      alert(response.data.message);\n      fetchDocuments(selectedSource);\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data;\n      console.error('Error syncing source:', error);\n      console.error('Error details:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      alert(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'An error occurred during synchronization. Please check the server logs for more details.');\n    }\n  };\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile || !selectedSource) {\n      setMessage('Please select a file and a source to upload.');\n      return;\n    }\n    setIsLoading(true);\n    setUploadProgress(0);\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true,\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        }\n      });\n      console.log('Full API Response:', response.data);\n      if (response.data.status === 'success' || response.data.status === 'PENDING') {\n        setMessage(`Upload initiated. Task ID: ${response.data.task_id}. Checking status...`);\n        pollUploadStatus(selectedSource, response.data.task_id);\n      } else if (response.data.status === 'COMPLETED') {\n        setMessage(`Upload completed successfully. Document ID: ${response.data.document_id}`);\n        setSelectedFile(null);\n        await fetchDocuments(selectedSource);\n      } else {\n        setMessage(`Status: ${response.data.status}\\nMessage: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data, null, 2)}`);\n      }\n    } catch (error) {\n      console.error('Error uploading document:', error);\n      if (error.response && error.response.status === 409) {\n        const confirmReplace = window.confirm('A document with the same name already exists. Do you want to replace it?');\n        if (confirmReplace) {\n          handleReplaceDocument();\n        } else {\n          setMessage('Upload cancelled. The existing document was not replaced.');\n        }\n      } else {\n        var _error$response5, _error$response5$data, _error$response6;\n        setMessage(`Error: ${((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'An error occurred while uploading the document.'}\\nFull Error: ${JSON.stringify((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data, null, 2)}`);\n      }\n    } finally {\n      setIsLoading(false);\n      setUploadProgress(0);\n    }\n  };\n  const handleReplaceDocument = async () => {\n    setIsLoading(true);\n    setUploadProgress(0);\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await axios.put(`/chatbot1/replace-document/${selectedSource}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true,\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        }\n      });\n      console.log('Full API Response:', response.data);\n      if (response.data.status === 'success' || response.data.status === 'PENDING') {\n        setMessage(`Replacement initiated. Task ID: ${response.data.task_id}. Checking status...`);\n        pollUploadStatus(selectedSource, response.data.task_id);\n      } else if (response.data.status === 'COMPLETED') {\n        setMessage(`Document replaced successfully. Document ID: ${response.data.document_id}`);\n        setSelectedFile(null);\n        await fetchDocuments(selectedSource);\n      } else {\n        setMessage(`Status: ${response.data.status}\\nMessage: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data, null, 2)}`);\n      }\n    } catch (error) {\n      var _error$response7, _error$response7$data, _error$response8;\n      console.error('Error replacing document:', error);\n      setMessage(`Error: ${((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'An error occurred while replacing the document.'}\\nFull Error: ${JSON.stringify((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data, null, 2)}`);\n    } finally {\n      setIsLoading(false);\n      setUploadProgress(0);\n    }\n  };\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\n    for (let i = 0; i < maxAttempts; i++) {\n      try {\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\n          headers: {\n            'X-CSRFToken': getCookie('csrftoken')\n          },\n          withCredentials: true\n        });\n        console.log('Poll response:', response.data);\n        if (response.data.status === 'SUCCESS' || response.data.status === 'COMPLETED') {\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          await fetchDocuments(source);\n          return;\n        } else if (response.data.status === 'ERROR') {\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          return;\n        }\n        setMessage(`Upload still in progress. Checking again in 5 seconds...\\nCurrent status: ${response.data.status}`);\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      } catch (error) {\n        console.error('Error polling upload status:', error);\n        setMessage(`Error checking upload status: ${error.message}`);\n        return;\n      }\n    }\n    setMessage('Upload status check timed out. The upload may still be in progress.');\n  };\n  const renderSourceList = (sources, title) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), sources.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: sources.map(source => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '10px',\n          border: '1px solid #ccc',\n          padding: '10px',\n          borderRadius: '4px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault();\n              fetchDocuments(source);\n            },\n            style: {\n              color: '#007bff',\n              textDecoration: 'none'\n            },\n            children: source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this)\n      }, source, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No \", title.toLowerCase(), \" found.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n  const renderDocuments = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: [\"Documents in \", selectedSource]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total documents: \", documents.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          padding: 0\n        },\n        children: documents.map((document, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '10px',\n            border: '1px solid #ccc',\n            padding: '10px',\n            borderRadius: '4px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: '0'\n            },\n            children: document.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this), document.path && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '5px 0 0',\n              fontSize: '0.9em',\n              color: '#666'\n            },\n            children: [\"Path: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: document.path,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              style: {\n                color: '#007bff'\n              },\n              children: document.path\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 19\n          }, this)]\n        }, document.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No documents available in this source.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: isLoading || !selectedFile,\n        style: {\n          marginLeft: '10px',\n          padding: '10px',\n          backgroundColor: '#28a745',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: isLoading ? 'Uploading...' : 'Upload Document'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), uploadProgress > 0 && uploadProgress < 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n        value: uploadProgress,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [uploadProgress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedSource(null),\n      style: {\n        marginTop: '20px',\n        padding: '10px',\n        backgroundColor: '#007bff',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        marginRight: '10px'\n      },\n      children: \"Back to Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSyncSource,\n      style: {\n        marginTop: '20px',\n        padding: '10px',\n        backgroundColor: '#28a745',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer'\n      },\n      children: \"Sync Source\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: 'white',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#333'\n      },\n      children: \"List of Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this) : selectedSource ? renderDocuments() : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderSourceList(globalSources, 'Global Sources'), renderSourceList(privateSources, 'Private Sources'), globalSources.length === 0 && privateSources.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"No sources found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '20px',\n        color: 'red'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n}\n_s(ListSources, \"zjtRMph2UKhflvgZDGl/uaYIJU0=\");\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ListSources","_s","globalSources","setGlobalSources","privateSources","setPrivateSources","selectedSource","setSelectedSource","documents","setDocuments","message","setMessage","isLoading","setIsLoading","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","refreshData","fetchSources","fetchDocuments","response","get","headers","getCookie","withCredentials","status","data","global_sources","private_sources","error","_error$response","_error$response$data","console","source","map","doc","path","filename","length","_error$response2","_error$response2$data","name","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","handleSyncSource","post","alert","_error$response3","_error$response4","_error$response4$data","handleFileChange","event","target","files","handleUpload","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","log","task_id","pollUploadStatus","document_id","JSON","stringify","confirmReplace","window","confirm","handleReplaceDocument","_error$response5","_error$response5$data","_error$response6","put","_error$response7","_error$response7$data","_error$response8","taskId","maxAttempts","full_response","Promise","resolve","setTimeout","renderSourceList","sources","title","children","style","color","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","listStyleType","padding","marginBottom","border","borderRadius","margin","href","onClick","e","preventDefault","textDecoration","toLowerCase","renderDocuments","index","fontSize","rel","id","type","onChange","disabled","marginLeft","backgroundColor","cursor","value","max","marginRight","maxWidth","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ListSources() {\r\n  const [globalSources, setGlobalSources] = useState([]);\r\n  const [privateSources, setPrivateSources] = useState([]);\r\n  const [selectedSource, setSelectedSource] = useState(null);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  const refreshData = async () => {\r\n    await fetchSources();\r\n    if (selectedSource) {\r\n      await fetchDocuments(selectedSource);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, []);\r\n\r\n  const fetchSources = async () => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-sources/', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setGlobalSources(response.data.global_sources || []);\r\n        setPrivateSources(response.data.private_sources || []);\r\n      } else {\r\n        setMessage('An error occurred while fetching the sources.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during source fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the sources.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDocuments = async (source) => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setSelectedSource(source);\r\n\r\n    try {\r\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200 && response.data.documents) {\r\n        setDocuments(response.data.documents.documents.map(doc => ({\r\n          ...doc,\r\n          path: doc.path || `/chatbot1/media/documents/${source}/${doc.filename}`\r\n        })));\r\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\r\n      } else {\r\n        setMessage('An error occurred while fetching the documents.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the documents.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const handleSyncSource = async () => {\r\n    try {\r\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n      alert(response.data.message);\r\n      fetchDocuments(selectedSource);\r\n    } catch (error) {\r\n      console.error('Error syncing source:', error);\r\n      console.error('Error details:', error.response?.data);\r\n      alert(error.response?.data?.error || 'An error occurred during synchronization. Please check the server logs for more details.');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile || !selectedSource) {\r\n      setMessage('Please select a file and a source to upload.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setUploadProgress(0);\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percentCompleted);\r\n        }\r\n      });\r\n\r\n      console.log('Full API Response:', response.data);\r\n\r\n      if (response.data.status === 'success' || response.data.status === 'PENDING') {\r\n        setMessage(`Upload initiated. Task ID: ${response.data.task_id}. Checking status...`);\r\n        pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else if (response.data.status === 'COMPLETED') {\r\n        setMessage(`Upload completed successfully. Document ID: ${response.data.document_id}`);\r\n        setSelectedFile(null);\r\n        await fetchDocuments(selectedSource);\r\n      } else {\r\n        setMessage(`Status: ${response.data.status}\\nMessage: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data, null, 2)}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading document:', error);\r\n      if (error.response && error.response.status === 409) {\r\n        const confirmReplace = window.confirm('A document with the same name already exists. Do you want to replace it?');\r\n        if (confirmReplace) {\r\n          handleReplaceDocument();\r\n        } else {\r\n          setMessage('Upload cancelled. The existing document was not replaced.');\r\n        }\r\n      } else {\r\n        setMessage(`Error: ${error.response?.data?.message || 'An error occurred while uploading the document.'}\\nFull Error: ${JSON.stringify(error.response?.data, null, 2)}`);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const handleReplaceDocument = async () => {\r\n    setIsLoading(true);\r\n    setUploadProgress(0);\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.put(`/chatbot1/replace-document/${selectedSource}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percentCompleted);\r\n        }\r\n      });\r\n\r\n      console.log('Full API Response:', response.data);\r\n\r\n      if (response.data.status === 'success' || response.data.status === 'PENDING') {\r\n        setMessage(`Replacement initiated. Task ID: ${response.data.task_id}. Checking status...`);\r\n        pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else if (response.data.status === 'COMPLETED') {\r\n        setMessage(`Document replaced successfully. Document ID: ${response.data.document_id}`);\r\n        setSelectedFile(null);\r\n        await fetchDocuments(selectedSource);\r\n      } else {\r\n        setMessage(`Status: ${response.data.status}\\nMessage: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data, null, 2)}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error replacing document:', error);\r\n      setMessage(`Error: ${error.response?.data?.message || 'An error occurred while replacing the document.'}\\nFull Error: ${JSON.stringify(error.response?.data, null, 2)}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\r\n    for (let i = 0; i < maxAttempts; i++) {\r\n      try {\r\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\r\n          headers: {\r\n            'X-CSRFToken': getCookie('csrftoken'),\r\n          },\r\n          withCredentials: true\r\n        });\r\n\r\n        console.log('Poll response:', response.data);\r\n\r\n        if (response.data.status === 'SUCCESS' || response.data.status === 'COMPLETED') {\r\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          await fetchDocuments(source);\r\n          return;\r\n        } else if (response.data.status === 'ERROR') {\r\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          return;\r\n        }\r\n\r\n        setMessage(`Upload still in progress. Checking again in 5 seconds...\\nCurrent status: ${response.data.status}`);\r\n        await new Promise(resolve => setTimeout(resolve, 5000));\r\n      } catch (error) {\r\n        console.error('Error polling upload status:', error);\r\n        setMessage(`Error checking upload status: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setMessage('Upload status check timed out. The upload may still be in progress.');\r\n  };\r\n\r\n  const renderSourceList = (sources, title) => (\r\n    <div>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>{title}</h2>\r\n      {sources.length > 0 ? (\r\n        <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n          {sources.map((source) => (\r\n            <li key={source} style={{ marginBottom: '10px', border: '1px solid #ccc', padding: '10px', borderRadius: '4px' }}>\r\n              <h3 style={{ margin: '0' }}>\r\n                <a href=\"#\" onClick={(e) => { e.preventDefault(); fetchDocuments(source); }} style={{ color: '#007bff', textDecoration: 'none' }}>\r\n                  {source}\r\n                </a>\r\n              </h3>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No {title.toLowerCase()} found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderDocuments = () => (\r\n    <div>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>Documents in {selectedSource}</h2>\r\n      {documents.length > 0 ? (\r\n        <>\r\n          <p>Total documents: {documents.length}</p>\r\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n            {documents.map((document, index) => (\r\n              <li key={document.id || index} style={{ marginBottom: '10px', border: '1px solid #ccc', padding: '10px', borderRadius: '4px' }}>\r\n                <h4 style={{ margin: '0' }}>{document.filename}</h4>\r\n                {document.path && (\r\n                  <p style={{ margin: '5px 0 0', fontSize: '0.9em', color: '#666' }}>\r\n                    Path: <a href={document.path} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#007bff' }}>{document.path}</a>\r\n                  </p>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <p>No documents available in this source.</p>\r\n      )}\r\n\r\n      <div style={{ marginTop: '20px' }}>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload} disabled={isLoading || !selectedFile} style={{ marginLeft: '10px', padding: '10px', backgroundColor: '#28a745', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>\r\n          {isLoading ? 'Uploading...' : 'Upload Document'}\r\n        </button>\r\n      </div>\r\n\r\n      {uploadProgress > 0 && uploadProgress < 100 && (\r\n        <div style={{ marginTop: '10px' }}>\r\n          <progress value={uploadProgress} max=\"100\"></progress>\r\n          <span>{uploadProgress}%</span>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={() => setSelectedSource(null)} style={{ marginTop: '20px', padding: '10px', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer', marginRight: '10px' }}>\r\n        Back to Sources\r\n      </button>\r\n      <button onClick={handleSyncSource} style={{ marginTop: '20px', padding: '10px', backgroundColor: '#28a745', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>\r\n        Sync Source\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div style={{ padding: '20px', backgroundColor: 'white', maxWidth: '800px', margin: '0 auto' }}>\r\n      <h1 style={{ textAlign: 'center', color: '#333' }}>List of Sources</h1>\r\n      {isLoading ? (\r\n        <p style={{ textAlign: 'center' }}>Loading...</p>\r\n      ) : (\r\n        selectedSource ? renderDocuments() : (\r\n          <>\r\n            {renderSourceList(globalSources, 'Global Sources')}\r\n            {renderSourceList(privateSources, 'Private Sources')}\r\n            {globalSources.length === 0 && privateSources.length === 0 && (\r\n              <p style={{ textAlign: 'center' }}>No sources found.</p>\r\n            )}\r\n          </>\r\n        )\r\n      )}\r\n      {message && <p style={{ marginTop: '20px', color: 'red' }}>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListSources;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}