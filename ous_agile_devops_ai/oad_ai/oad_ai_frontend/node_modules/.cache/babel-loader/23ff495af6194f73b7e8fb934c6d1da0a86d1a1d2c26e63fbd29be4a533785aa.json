{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListSources() {\n  _s();\n  const [globalSources, setGlobalSources] = useState([]);\n  const [privateSources, setPrivateSources] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadSteps, setUploadSteps] = useState([]);\n  const [sortField, setSortField] = useState('filename');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const formatDate = dateString => {\n    if (dateString && dateString !== 'N/A') {\n      return new Date(dateString).toLocaleString();\n    }\n    return 'N/A';\n  };\n  const handleSort = field => {\n    if (field === sortField) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n  const sortDocuments = docs => {\n    return docs.sort((a, b) => {\n      let comparison = 0;\n      if (a[sortField] < b[sortField]) {\n        comparison = -1;\n      } else if (a[sortField] > b[sortField]) {\n        comparison = 1;\n      }\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  };\n  const refreshData = async () => {\n    await fetchSources();\n    if (selectedSource) {\n      await fetchDocuments(selectedSource);\n    }\n  };\n  useEffect(() => {\n    refreshData();\n  }, []);\n  const fetchSources = async () => {\n    setIsLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.get('/chatbot1/list-sources/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        const {\n          global,\n          private: privateSources\n        } = response.data.external_sources;\n        setGlobalSources(global || []);\n        setPrivateSources(privateSources || []);\n      } else {\n        setMessage('An error occurred while fetching the sources.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error during source fetching:', error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred while fetching the sources.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchDocuments = async source => {\n    setIsLoading(true);\n    setMessage('');\n    setSelectedSource(source);\n    try {\n      const response = await axios.get(`/chatbot1/list-documents/${source.name}/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200 && response.data.documents) {\n        setDocuments(response.data.documents.documents.map(doc => ({\n          ...doc,\n          path: doc.path || `/chatbot1/media/documents/${source.name}/${doc.filename}`,\n          created_at: doc.created_at || null,\n          modified_at: doc.modified_at || null\n        })));\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\n      } else {\n        setMessage('An error occurred while fetching the documents.');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error during document fetching:', error);\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'An error occurred while fetching the documents.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getCookie = name => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  };\n  const handleSyncSource = async () => {\n    try {\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      alert(response.data.message);\n      fetchDocuments(selectedSource);\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data;\n      console.error('Error syncing source:', error);\n      console.error('Error details:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      alert(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'An error occurred during synchronization. Please check the server logs for more details.');\n    }\n  };\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile || !selectedSource) {\n      setMessage('Please select a file and a source to upload.');\n      return;\n    }\n    setIsLoading(true);\n    setMessage('');\n    setUploadProgress(0);\n    setUploadStatus('Preparing upload...');\n    setUploadSteps([]);\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true,\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n          setUploadStatus(`Uploading: ${percentCompleted}%`);\n        }\n      });\n      console.log('Full API Response:', response.data);\n      if (response.status === 200 || response.status === 201) {\n        setUploadStatus('Upload successful. Processing document...');\n        setUploadSteps(prevSteps => [...prevSteps, 'Document uploaded successfully']);\n        await pollUploadStatus(selectedSource, response.data.task_id);\n      } else if (response.status === 202) {\n        setUploadStatus('Document replaced successfully. Processing...');\n        setUploadSteps(prevSteps => [...prevSteps, 'Document replaced successfully']);\n        await pollUploadStatus(selectedSource, response.data.task_id);\n      } else {\n        setUploadStatus('Upload failed');\n        setMessage('An error occurred while uploading the document.');\n      }\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Error during document upload:', error);\n      setUploadStatus('Upload failed');\n      setMessage(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'An error occurred while uploading the document.');\n    } finally {\n      setIsLoading(false);\n      setUploadProgress(0);\n      setSelectedFile(null);\n    }\n  };\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\n    for (let i = 0; i < maxAttempts; i++) {\n      try {\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\n          headers: {\n            'X-CSRFToken': getCookie('csrftoken')\n          },\n          withCredentials: true\n        });\n        console.log('Poll response:', response.data);\n        if (response.data.status === 'SUCCESS') {\n          setUploadStatus('Upload and processing completed successfully');\n          setUploadSteps(prevSteps => [...prevSteps, 'Document processed successfully']);\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          await fetchDocuments(source);\n          return;\n        } else if (response.data.status === 'ERROR') {\n          setUploadStatus('Upload failed');\n          setUploadSteps(prevSteps => [...prevSteps, 'Error during document processing']);\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          return;\n        }\n        setUploadStatus(`Processing document... (Attempt ${i + 1}/${maxAttempts})`);\n        setUploadSteps(prevSteps => [...prevSteps, `Processing attempt ${i + 1}`]);\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      } catch (error) {\n        console.error('Error polling upload status:', error);\n        setUploadStatus('Error checking upload status');\n        setMessage(`Error checking upload status: ${error.message}`);\n        return;\n      }\n    }\n    setUploadStatus('Upload status check timed out');\n    setMessage('Upload status check timed out. The upload may still be in progress.');\n  };\n  const renderSourceList = (sources, title) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), sources.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: sources.map((source, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '10px',\n          border: '1px solid #ccc',\n          padding: '10px',\n          borderRadius: '4px',\n          backgroundColor: '#fff'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault();\n              fetchDocuments(source);\n            },\n            style: {\n              color: '#007bff',\n              textDecoration: 'none'\n            },\n            children: source.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No \", title.toLowerCase(), \" found.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n  const renderDocuments = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: [\"Documents in \", selectedSource === null || selectedSource === void 0 ? void 0 : selectedSource.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total documents: \", documents.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: '#f8f9fa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #dee2e6',\n                padding: '12px',\n                textAlign: 'left',\n                cursor: 'pointer'\n              },\n              onClick: () => handleSort('filename'),\n              children: [\"Filename \", sortField === 'filename' && (sortDirection === 'asc' ? '▲' : '▼')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #dee2e6',\n                padding: '12px',\n                textAlign: 'left',\n                cursor: 'pointer'\n              },\n              onClick: () => handleSort('path'),\n              children: [\"Path \", sortField === 'path' && (sortDirection === 'asc' ? '▲' : '▼')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #dee2e6',\n                padding: '12px',\n                textAlign: 'left',\n                cursor: 'pointer'\n              },\n              onClick: () => handleSort('created_at'),\n              children: [\"Created At \", sortField === 'created_at' && (sortDirection === 'asc' ? '▲' : '▼')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #dee2e6',\n                padding: '12px',\n                textAlign: 'left',\n                cursor: 'pointer'\n              },\n              onClick: () => handleSort('modified_at'),\n              children: [\"Modified At \", sortField === 'modified_at' && (sortDirection === 'asc' ? '▲' : '▼')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sortDocuments(documents).map((document, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #dee2e6',\n                padding: '12px'\n              },\n              children: document.filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #dee2e6',\n                padding: '12px'\n              },\n              children: document.path\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #dee2e6',\n                padding: '12px'\n              },\n              children: formatDate(document.created_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #dee2e6',\n                padding: '12px'\n              },\n              children: formatDate(document.modified_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this)]\n          }, document.id || index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No documents found in \", selectedSource === null || selectedSource === void 0 ? void 0 : selectedSource.name, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Source List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 19\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 21\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderSourceList(globalSources, 'Global Sources'), renderSourceList(privateSources, 'Private Sources')]\n    }, void 0, true), selectedSource && renderDocuments()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n}\n_s(ListSources, \"bXOcoTJkMuDheJQ4Edvd8dOpS/A=\");\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ListSources","_s","globalSources","setGlobalSources","privateSources","setPrivateSources","selectedSource","setSelectedSource","documents","setDocuments","message","setMessage","isLoading","setIsLoading","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","uploadSteps","setUploadSteps","sortField","setSortField","sortDirection","setSortDirection","formatDate","dateString","Date","toLocaleString","handleSort","field","sortDocuments","docs","sort","a","b","comparison","refreshData","fetchSources","fetchDocuments","response","get","headers","getCookie","withCredentials","status","global","private","data","external_sources","error","_error$response","_error$response$data","console","source","name","map","doc","path","filename","created_at","modified_at","length","_error$response2","_error$response2$data","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","handleSyncSource","post","alert","_error$response3","_error$response4","_error$response4$data","handleFileChange","event","target","files","handleUpload","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","log","prevSteps","pollUploadStatus","task_id","_error$response5","_error$response5$data","taskId","maxAttempts","JSON","stringify","full_response","Promise","resolve","setTimeout","renderSourceList","sources","title","children","style","color","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","listStyleType","padding","index","marginBottom","border","borderRadius","backgroundColor","margin","href","onClick","e","preventDefault","textDecoration","toLowerCase","renderDocuments","width","borderCollapse","textAlign","cursor","id","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ListSources() {\r\n  const [globalSources, setGlobalSources] = useState([]);\r\n  const [privateSources, setPrivateSources] = useState([]);\r\n  const [selectedSource, setSelectedSource] = useState(null);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [uploadSteps, setUploadSteps] = useState([]);\r\n  const [sortField, setSortField] = useState('filename');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n\r\n  const formatDate = (dateString) => {\r\n    if (dateString && dateString !== 'N/A') {\r\n      return new Date(dateString).toLocaleString();\r\n    }\r\n    return 'N/A';\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    if (field === sortField) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const sortDocuments = (docs) => {\r\n    return docs.sort((a, b) => {\r\n      let comparison = 0;\r\n      if (a[sortField] < b[sortField]) {\r\n        comparison = -1;\r\n      } else if (a[sortField] > b[sortField]) {\r\n        comparison = 1;\r\n      }\r\n      return sortDirection === 'asc' ? comparison : -comparison;\r\n    });\r\n  };\r\n\r\n  const refreshData = async () => {\r\n    await fetchSources();\r\n    if (selectedSource) {\r\n      await fetchDocuments(selectedSource);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, []);\r\n\r\n  const fetchSources = async () => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-sources/', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const { global, private: privateSources } = response.data.external_sources;\r\n        setGlobalSources(global || []);\r\n        setPrivateSources(privateSources || []);\r\n      } else {\r\n        setMessage('An error occurred while fetching the sources.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during source fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the sources.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDocuments = async (source) => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setSelectedSource(source);\r\n\r\n    try {\r\n      const response = await axios.get(`/chatbot1/list-documents/${source.name}/`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200 && response.data.documents) {\r\n        setDocuments(response.data.documents.documents.map(doc => ({\r\n          ...doc,\r\n          path: doc.path || `/chatbot1/media/documents/${source.name}/${doc.filename}`,\r\n          created_at: doc.created_at || null,\r\n          modified_at: doc.modified_at || null\r\n        })));\r\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\r\n      } else {\r\n        setMessage('An error occurred while fetching the documents.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the documents.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const handleSyncSource = async () => {\r\n    try {\r\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n      alert(response.data.message);\r\n      fetchDocuments(selectedSource);\r\n    } catch (error) {\r\n      console.error('Error syncing source:', error);\r\n      console.error('Error details:', error.response?.data);\r\n      alert(error.response?.data?.error || 'An error occurred during synchronization. Please check the server logs for more details.');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile || !selectedSource) {\r\n      setMessage('Please select a file and a source to upload.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setUploadProgress(0);\r\n    setUploadStatus('Preparing upload...');\r\n    setUploadSteps([]);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n\r\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percentCompleted);\r\n          setUploadStatus(`Uploading: ${percentCompleted}%`);\r\n        }\r\n      });\r\n\r\n      console.log('Full API Response:', response.data);\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        setUploadStatus('Upload successful. Processing document...');\r\n        setUploadSteps(prevSteps => [...prevSteps, 'Document uploaded successfully']);\r\n        await pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else if (response.status === 202) {\r\n        setUploadStatus('Document replaced successfully. Processing...');\r\n        setUploadSteps(prevSteps => [...prevSteps, 'Document replaced successfully']);\r\n        await pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else {\r\n        setUploadStatus('Upload failed');\r\n        setMessage('An error occurred while uploading the document.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document upload:', error);\r\n      setUploadStatus('Upload failed');\r\n      setMessage(error.response?.data?.error || 'An error occurred while uploading the document.');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setUploadProgress(0);\r\n      setSelectedFile(null);\r\n    }\r\n  };\r\n\r\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\r\n    for (let i = 0; i < maxAttempts; i++) {\r\n      try {\r\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\r\n          headers: {\r\n            'X-CSRFToken': getCookie('csrftoken'),\r\n          },\r\n          withCredentials: true\r\n        });\r\n\r\n        console.log('Poll response:', response.data);\r\n\r\n        if (response.data.status === 'SUCCESS') {\r\n          setUploadStatus('Upload and processing completed successfully');\r\n          setUploadSteps(prevSteps => [...prevSteps, 'Document processed successfully']);\r\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          await fetchDocuments(source);\r\n          return;\r\n        } else if (response.data.status === 'ERROR') {\r\n          setUploadStatus('Upload failed');\r\n          setUploadSteps(prevSteps => [...prevSteps, 'Error during document processing']);\r\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          return;\r\n        }\r\n\r\n        setUploadStatus(`Processing document... (Attempt ${i + 1}/${maxAttempts})`);\r\n        setUploadSteps(prevSteps => [...prevSteps, `Processing attempt ${i + 1}`]);\r\n        await new Promise(resolve => setTimeout(resolve, 5000));\r\n      } catch (error) {\r\n        console.error('Error polling upload status:', error);\r\n        setUploadStatus('Error checking upload status');\r\n        setMessage(`Error checking upload status: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setUploadStatus('Upload status check timed out');\r\n    setMessage('Upload status check timed out. The upload may still be in progress.');\r\n  };\r\n\r\n  const renderSourceList = (sources, title) => (\r\n    <div>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>{title}</h2>\r\n      {sources.length > 0 ? (\r\n        <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n          {sources.map((source, index) => (\r\n            <li key={index} style={{ marginBottom: '10px', border: '1px solid #ccc', padding: '10px', borderRadius: '4px', backgroundColor: '#fff' }}>\r\n              <h3 style={{ margin: '0' }}>\r\n                <a href=\"#\" onClick={(e) => { e.preventDefault(); fetchDocuments(source); }} style={{ color: '#007bff', textDecoration: 'none' }}>\r\n                  {source.name}\r\n                </a>\r\n              </h3>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No {title.toLowerCase()} found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderDocuments = () => (\r\n    <div>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>Documents in {selectedSource?.name}</h2>\r\n      {documents.length > 0 ? (\r\n        <>\r\n          <p>Total documents: {documents.length}</p>\r\n          <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '20px' }}>\r\n            <thead>\r\n              <tr style={{ backgroundColor: '#f8f9fa' }}>\r\n                <th style={{ border: '1px solid #dee2e6', padding: '12px', textAlign: 'left', cursor: 'pointer' }} onClick={() => handleSort('filename')}>\r\n                  Filename {sortField === 'filename' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n                </th>\r\n                <th style={{ border: '1px solid #dee2e6', padding: '12px', textAlign: 'left', cursor: 'pointer' }} onClick={() => handleSort('path')}>\r\n                  Path {sortField === 'path' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n                </th>\r\n                <th style={{ border: '1px solid #dee2e6', padding: '12px', textAlign: 'left', cursor: 'pointer' }} onClick={() => handleSort('created_at')}>\r\n                  Created At {sortField === 'created_at' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n                </th>\r\n                <th style={{ border: '1px solid #dee2e6', padding: '12px', textAlign: 'left', cursor: 'pointer' }} onClick={() => handleSort('modified_at')}>\r\n                  Modified At {sortField === 'modified_at' && (sortDirection === 'asc' ? '▲' : '▼')}\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sortDocuments(documents).map((document, index) => (\r\n                <tr key={document.id || index}>\r\n                  <td style={{ border: '1px solid #dee2e6', padding: '12px' }}>{document.filename}</td>\r\n                  <td style={{ border: '1px solid #dee2e6', padding: '12px' }}>{document.path}</td>\r\n                  <td style={{ border: '1px solid #dee2e6', padding: '12px' }}>{formatDate(document.created_at)}</td>\r\n                  <td style={{ border: '1px solid #dee2e6', padding: '12px' }}>{formatDate(document.modified_at)}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      ) : (\r\n        <p>No documents found in {selectedSource?.name}.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Source List</h1>\r\n      {message && <p>{message}</p>}\r\n      {isLoading && <p>Loading...</p>}\r\n      {!isLoading && (\r\n        <>\r\n          {renderSourceList(globalSources, 'Global Sources')}\r\n          {renderSourceList(privateSources, 'Private Sources')}\r\n        </>\r\n      )}\r\n      {selectedSource && renderDocuments()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListSources;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}