{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\AutoUploadManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTO_UPLOAD_URL = '/chatbot1/auto-upload/';\nconst START_SCHEDULER_URL = '/chatbot1/start-scheduler/';\nconst PROCESS_DOCUMENTS_URL = '/chatbot1/process-documents/';\nconst GET_UPLOAD_STATUS_URL = '/chatbot1/get-upload-status/';\nfunction AutoUploadManager() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [schedulerStatus, setSchedulerStatus] = useState('Not running');\n  const [uploadDetails, setUploadDetails] = useState([]);\n  useEffect(() => {\n    axios.defaults.withCredentials = true;\n    // Fetch initial upload status when component mounts\n    fetchUploadStatus();\n  }, []);\n  const fetchUploadStatus = useCallback(async () => {\n    try {\n      const response = await axios.get(GET_UPLOAD_STATUS_URL);\n      setUploadDetails(response.data.upload_details || []);\n      setSchedulerStatus(response.data.scheduler_status || 'Not running');\n    } catch (error) {\n      console.error('Error fetching upload status:', error);\n      setMessage('Failed to fetch upload status');\n    }\n  }, []);\n  const startScheduler = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post(START_SCHEDULER_URL);\n      setSchedulerStatus(response.data.status);\n      setMessage(response.data.message);\n    } catch (error) {\n      console.error('Error starting scheduler:', error);\n      setMessage('Failed to start scheduler');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  const triggerAutoUpload = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post(AUTO_UPLOAD_URL);\n      setUploadedFiles(response.data.processed_files || []);\n      setMessage(response.data.message);\n      // Fetch updated upload status after auto-upload\n      await fetchUploadStatus();\n    } catch (error) {\n      console.error('Error triggering auto-upload:', error);\n      setMessage('Failed to trigger auto-upload');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [fetchUploadStatus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Auto Upload Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startScheduler,\n      disabled: isLoading,\n      children: schedulerStatus === 'Running' ? 'Scheduler Running' : 'Start Scheduler'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: triggerAutoUpload,\n      disabled: isLoading,\n      children: \"Trigger Auto Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Scheduler Status: \", schedulerStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Uploaded Files:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: file\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload Details:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: uploadDetails.map((detail, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [detail.filename, \" - Status: \", detail.status, detail.message && ` - Message: ${detail.message}`]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(AutoUploadManager, \"LvljuOBmr4oioEpOEWifHG3PIPw=\");\n_c = AutoUploadManager;\nexport default AutoUploadManager;\nvar _c;\n$RefreshReg$(_c, \"AutoUploadManager\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","axios","jsxDEV","_jsxDEV","AUTO_UPLOAD_URL","START_SCHEDULER_URL","PROCESS_DOCUMENTS_URL","GET_UPLOAD_STATUS_URL","AutoUploadManager","_s","isLoading","setIsLoading","message","setMessage","uploadedFiles","setUploadedFiles","schedulerStatus","setSchedulerStatus","uploadDetails","setUploadDetails","defaults","withCredentials","fetchUploadStatus","response","get","data","upload_details","scheduler_status","error","console","startScheduler","post","status","triggerAutoUpload","processed_files","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","file","index","detail","filename","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/AutoUploadManager.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AUTO_UPLOAD_URL = '/chatbot1/auto-upload/';\r\nconst START_SCHEDULER_URL = '/chatbot1/start-scheduler/';\r\nconst PROCESS_DOCUMENTS_URL = '/chatbot1/process-documents/';\r\nconst GET_UPLOAD_STATUS_URL = '/chatbot1/get-upload-status/';\r\n\r\nfunction AutoUploadManager() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [schedulerStatus, setSchedulerStatus] = useState('Not running');\r\n  const [uploadDetails, setUploadDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.defaults.withCredentials = true;\r\n    // Fetch initial upload status when component mounts\r\n    fetchUploadStatus();\r\n  }, []);\r\n\r\n  const fetchUploadStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(GET_UPLOAD_STATUS_URL);\r\n      setUploadDetails(response.data.upload_details || []);\r\n      setSchedulerStatus(response.data.scheduler_status || 'Not running');\r\n    } catch (error) {\r\n      console.error('Error fetching upload status:', error);\r\n      setMessage('Failed to fetch upload status');\r\n    }\r\n  }, []);\r\n\r\n  const startScheduler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.post(START_SCHEDULER_URL);\r\n      setSchedulerStatus(response.data.status);\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      console.error('Error starting scheduler:', error);\r\n      setMessage('Failed to start scheduler');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const triggerAutoUpload = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.post(AUTO_UPLOAD_URL);\r\n      setUploadedFiles(response.data.processed_files || []);\r\n      setMessage(response.data.message);\r\n      // Fetch updated upload status after auto-upload\r\n      await fetchUploadStatus();\r\n    } catch (error) {\r\n      console.error('Error triggering auto-upload:', error);\r\n      setMessage('Failed to trigger auto-upload');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchUploadStatus]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Auto Upload Manager</h2>\r\n      <button onClick={startScheduler} disabled={isLoading}>\r\n        {schedulerStatus === 'Running' ? 'Scheduler Running' : 'Start Scheduler'}\r\n      </button>\r\n      <button onClick={triggerAutoUpload} disabled={isLoading}>\r\n        Trigger Auto Upload\r\n      </button>\r\n      <p>Scheduler Status: {schedulerStatus}</p>\r\n      <p>{message}</p>\r\n      <h3>Uploaded Files:</h3>\r\n      <ul>\r\n        {uploadedFiles.map((file, index) => (\r\n          <li key={index}>{file}</li>\r\n        ))}\r\n      </ul>\r\n      <h3>Upload Details:</h3>\r\n      <ul>\r\n        {uploadDetails.map((detail, index) => (\r\n          <li key={index}>\r\n            {detail.filename} - Status: {detail.status}\r\n            {detail.message && ` - Message: ${detail.message}`}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AutoUploadManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}