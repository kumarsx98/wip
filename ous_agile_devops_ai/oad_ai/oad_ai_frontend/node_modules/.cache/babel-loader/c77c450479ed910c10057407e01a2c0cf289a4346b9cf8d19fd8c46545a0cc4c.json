{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\5-Sep\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListSources() {\n  _s();\n  const [globalSources, setGlobalSources] = useState([]);\n  const [privateSources, setPrivateSources] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadSteps, setUploadSteps] = useState([]);\n  const [sortField, setSortField] = useState('filename');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const formatDate = dateString => {\n    if (dateString && dateString !== '') {\n      return new Date(dateString).toLocaleString();\n    }\n    return 'N/A';\n  };\n  const handleSort = field => {\n    if (field === sortField) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n  const sortDocuments = docs => {\n    return docs.sort((a, b) => {\n      let comparison = 0;\n      if (a[sortField] < b[sortField]) {\n        comparison = -1;\n      } else if (a[sortField] > b[sortField]) {\n        comparison = 1;\n      }\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  };\n  const refreshData = async () => {\n    await fetchSources();\n    if (selectedSource) {\n      await fetchDocuments(selectedSource);\n    }\n  };\n  useEffect(() => {\n    refreshData();\n  }, []);\n  const fetchSources = async () => {\n    setIsLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.get('/chatbot1/list-sources/', {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        setGlobalSources(response.data.global_sources || []);\n        setPrivateSources(response.data.private_sources || []);\n      } else {\n        setMessage('An error occurred while fetching the sources.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error during source fetching:', error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred while fetching the sources.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchDocuments = async source => {\n    setIsLoading(true);\n    setMessage('');\n    setSelectedSource(source);\n    try {\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.status === 200 && response.data.documents) {\n        setDocuments(response.data.documents.documents.map(doc => ({\n          ...doc,\n          path: doc.path || `/chatbot1/media/documents/${source}/${doc.filename}`,\n          created_at: doc.created_at || null,\n          modified_at: doc.modified_at || null\n        })));\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\n      } else {\n        setMessage('An error occurred while fetching the documents.');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error during document fetching:', error);\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'An error occurred while fetching the documents.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getCookie = name => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  };\n  const handleSyncSource = async () => {\n    try {\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      alert(response.data.message);\n      fetchDocuments(selectedSource);\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data;\n      console.error('Error syncing source:', error);\n      console.error('Error details:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      alert(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'An error occurred during synchronization. Please check the server logs for more details.');\n    }\n  };\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile || !selectedSource) {\n      setMessage('Please select a file and a source to upload.');\n      return;\n    }\n    setIsLoading(true);\n    setMessage('');\n    setUploadProgress(0);\n    setUploadStatus('Preparing upload...');\n    setUploadSteps([]);\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true,\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n          setUploadStatus(`Uploading: ${percentCompleted}%`);\n        }\n      });\n      console.log('Full API Response:', response.data);\n      if (response.status === 200 || response.status === 201) {\n        setUploadStatus('Upload successful. Processing document...');\n        setUploadSteps(prevSteps => [...prevSteps, 'Document uploaded successfully']);\n        await pollUploadStatus(selectedSource, response.data.task_id);\n      } else if (response.status === 202) {\n        setUploadStatus('Document replaced successfully. Processing...');\n        setUploadSteps(prevSteps => [...prevSteps, 'Document replaced successfully']);\n        await pollUploadStatus(selectedSource, response.data.task_id);\n      } else {\n        setUploadStatus('Upload failed');\n        setMessage('An error occurred while uploading the document.');\n      }\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Error during document upload:', error);\n      setUploadStatus('Upload failed');\n      setMessage(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'An error occurred while uploading the document.');\n    } finally {\n      setIsLoading(false);\n      setUploadProgress(0);\n      setSelectedFile(null);\n    }\n  };\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\n    for (let i = 0; i < maxAttempts; i++) {\n      try {\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\n          headers: {\n            'X-CSRFToken': getCookie('csrftoken')\n          },\n          withCredentials: true\n        });\n        console.log('Poll response:', response.data);\n        if (response.data.status === 'SUCCESS') {\n          setUploadStatus('Upload and processing completed successfully');\n          setUploadSteps(prevSteps => [...prevSteps, 'Document processed successfully']);\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          await fetchDocuments(source);\n          return;\n        } else if (response.data.status === 'ERROR') {\n          setUploadStatus('Upload failed');\n          setUploadSteps(prevSteps => [...prevSteps, 'Error during document processing']);\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\n          return;\n        }\n        setUploadStatus(`Processing document... (Attempt ${i + 1}/${maxAttempts})`);\n        setUploadSteps(prevSteps => [...prevSteps, `Processing attempt ${i + 1}`]);\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      } catch (error) {\n        console.error('Error polling upload status:', error);\n        setUploadStatus('Error checking upload status');\n        setMessage(`Error checking upload status: ${error.message}`);\n        return;\n      }\n    }\n    setUploadStatus('Upload status check timed out');\n    setMessage('Upload status check timed out. The upload may still be in progress.');\n  };\n  const renderSourceList = (sources, title) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#444',\n        marginTop: '20px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), sources.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: sources.map(source => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '10px',\n          border: '1px solid #ccc',\n          padding: '10px',\n          borderRadius: '4px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault();\n              fetchDocuments(source);\n            },\n            style: {\n              color: '#007bff',\n              textDecoration: 'none'\n            },\n            children: source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this)\n      }, source, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No \", title.toLowerCase(), \" available.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n  const renderDocumentsTable = () => {\n    if (documents.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No documents found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('filename'),\n            children: \"Filename\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('created_at'),\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('modified_at'),\n            children: \"Modified At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: tableHeaderStyle,\n            onClick: () => handleSort('visibility'),\n            children: \"Visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortDocuments(documents).map((doc, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: index % 2 === 0 ? '#f8f8f8' : 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: doc.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: formatDate(doc.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: formatDate(doc.modified_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: tableCellStyle,\n            children: doc.visibility || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, doc.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      maxWidth: '800px',\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#333',\n        borderBottom: '2px solid #333',\n        paddingBottom: '10px'\n      },\n      children: \"Document Sources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), renderSourceList(globalSources, 'Global Sources'), renderSourceList(privateSources, 'Private Sources'), selectedSource && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Documents in \", selectedSource]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSyncSource,\n        style: buttonStyle,\n        children: \"Sync Source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading documents...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }, this) : renderDocumentsTable()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        style: {\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: !selectedFile || !selectedSource,\n        style: buttonStyle,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: uploadProgress,\n        max: \"100\",\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 32\n      }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 26\n      }, this), uploadSteps.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: step\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        marginTop: '20px'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n}\n_s(ListSources, \"bXOcoTJkMuDheJQ4Edvd8dOpS/A=\");\n_c = ListSources;\nconst tableHeaderStyle = {\n  backgroundColor: '#f2f2f2',\n  padding: '12px',\n  textAlign: 'left',\n  borderBottom: '1px solid #ddd',\n  cursor: 'pointer'\n};\nconst tableCellStyle = {\n  padding: '12px',\n  borderBottom: '1px solid #ddd'\n};\nconst buttonStyle = {\n  backgroundColor: '#007bff',\n  color: 'white',\n  padding: '10px 15px',\n  border: 'none',\n  borderRadius: '4px',\n  cursor: 'pointer',\n  marginRight: '10px'\n};\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ListSources","_s","globalSources","setGlobalSources","privateSources","setPrivateSources","selectedSource","setSelectedSource","documents","setDocuments","message","setMessage","isLoading","setIsLoading","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","uploadSteps","setUploadSteps","sortField","setSortField","sortDirection","setSortDirection","formatDate","dateString","Date","toLocaleString","handleSort","field","sortDocuments","docs","sort","a","b","comparison","refreshData","fetchSources","fetchDocuments","response","get","headers","getCookie","withCredentials","status","data","global_sources","private_sources","error","_error$response","_error$response$data","console","source","map","doc","path","filename","created_at","modified_at","length","_error$response2","_error$response2$data","name","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","handleSyncSource","post","alert","_error$response3","_error$response4","_error$response4$data","handleFileChange","event","target","files","handleUpload","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","log","prevSteps","pollUploadStatus","task_id","_error$response5","_error$response5$data","taskId","maxAttempts","JSON","stringify","full_response","Promise","resolve","setTimeout","renderSourceList","sources","title","children","style","color","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","listStyleType","padding","marginBottom","border","borderRadius","margin","href","onClick","e","preventDefault","textDecoration","toLowerCase","renderDocumentsTable","width","borderCollapse","tableHeaderStyle","index","backgroundColor","tableCellStyle","visibility","id","fontFamily","maxWidth","borderBottom","paddingBottom","buttonStyle","type","onChange","disabled","value","max","step","_c","textAlign","cursor","marginRight","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/5-Sep/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ListSources() {\r\n  const [globalSources, setGlobalSources] = useState([]);\r\n  const [privateSources, setPrivateSources] = useState([]);\r\n  const [selectedSource, setSelectedSource] = useState(null);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [uploadSteps, setUploadSteps] = useState([]);\r\n  const [sortField, setSortField] = useState('filename');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n\r\n  const formatDate = (dateString) => {\r\n    if (dateString && dateString !== '') {\r\n      return new Date(dateString).toLocaleString();\r\n    }\r\n    return 'N/A';\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    if (field === sortField) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const sortDocuments = (docs) => {\r\n    return docs.sort((a, b) => {\r\n      let comparison = 0;\r\n      if (a[sortField] < b[sortField]) {\r\n        comparison = -1;\r\n      } else if (a[sortField] > b[sortField]) {\r\n        comparison = 1;\r\n      }\r\n      return sortDirection === 'asc' ? comparison : -comparison;\r\n    });\r\n  };\r\n\r\n  const refreshData = async () => {\r\n    await fetchSources();\r\n    if (selectedSource) {\r\n      await fetchDocuments(selectedSource);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, []);\r\n\r\n  const fetchSources = async () => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-sources/', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setGlobalSources(response.data.global_sources || []);\r\n        setPrivateSources(response.data.private_sources || []);\r\n      } else {\r\n        setMessage('An error occurred while fetching the sources.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during source fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the sources.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDocuments = async (source) => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setSelectedSource(source);\r\n\r\n    try {\r\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.status === 200 && response.data.documents) {\r\n        setDocuments(response.data.documents.documents.map(doc => ({\r\n          ...doc,\r\n          path: doc.path || `/chatbot1/media/documents/${source}/${doc.filename}`,\r\n          created_at: doc.created_at || null,\r\n          modified_at: doc.modified_at || null\r\n        })));\r\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\r\n      } else {\r\n        setMessage('An error occurred while fetching the documents.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document fetching:', error);\r\n      setMessage(error.response?.data?.error || 'An error occurred while fetching the documents.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.substring(0, name.length + 1) === `${name}=`) {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const handleSyncSource = async () => {\r\n    try {\r\n      const response = await axios.post(`/chatbot1/sync-source/${selectedSource}/`, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true\r\n      });\r\n      alert(response.data.message);\r\n      fetchDocuments(selectedSource);\r\n    } catch (error) {\r\n      console.error('Error syncing source:', error);\r\n      console.error('Error details:', error.response?.data);\r\n      alert(error.response?.data?.error || 'An error occurred during synchronization. Please check the server logs for more details.');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile || !selectedSource) {\r\n      setMessage('Please select a file and a source to upload.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setUploadProgress(0);\r\n    setUploadStatus('Preparing upload...');\r\n    setUploadSteps([]);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n\r\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percentCompleted);\r\n          setUploadStatus(`Uploading: ${percentCompleted}%`);\r\n        }\r\n      });\r\n\r\n      console.log('Full API Response:', response.data);\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        setUploadStatus('Upload successful. Processing document...');\r\n        setUploadSteps(prevSteps => [...prevSteps, 'Document uploaded successfully']);\r\n        await pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else if (response.status === 202) {\r\n        setUploadStatus('Document replaced successfully. Processing...');\r\n        setUploadSteps(prevSteps => [...prevSteps, 'Document replaced successfully']);\r\n        await pollUploadStatus(selectedSource, response.data.task_id);\r\n      } else {\r\n        setUploadStatus('Upload failed');\r\n        setMessage('An error occurred while uploading the document.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document upload:', error);\r\n      setUploadStatus('Upload failed');\r\n      setMessage(error.response?.data?.error || 'An error occurred while uploading the document.');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setUploadProgress(0);\r\n      setSelectedFile(null);\r\n    }\r\n  };\r\n\r\n  const pollUploadStatus = async (source, taskId, maxAttempts = 10) => {\r\n    for (let i = 0; i < maxAttempts; i++) {\r\n      try {\r\n        const response = await axios.get(`/chatbot1/check-upload-status/${source}/${taskId}/`, {\r\n          headers: {\r\n            'X-CSRFToken': getCookie('csrftoken'),\r\n          },\r\n          withCredentials: true\r\n        });\r\n\r\n        console.log('Poll response:', response.data);\r\n\r\n        if (response.data.status === 'SUCCESS') {\r\n          setUploadStatus('Upload and processing completed successfully');\r\n          setUploadSteps(prevSteps => [...prevSteps, 'Document processed successfully']);\r\n          setMessage(`Upload completed successfully.\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          await fetchDocuments(source);\r\n          return;\r\n        } else if (response.data.status === 'ERROR') {\r\n          setUploadStatus('Upload failed');\r\n          setUploadSteps(prevSteps => [...prevSteps, 'Error during document processing']);\r\n          setMessage(`Upload failed.\\nError: ${response.data.message}\\nFull Response: ${JSON.stringify(response.data.full_response, null, 2)}`);\r\n          return;\r\n        }\r\n\r\n        setUploadStatus(`Processing document... (Attempt ${i + 1}/${maxAttempts})`);\r\n        setUploadSteps(prevSteps => [...prevSteps, `Processing attempt ${i + 1}`]);\r\n        await new Promise(resolve => setTimeout(resolve, 5000));\r\n      } catch (error) {\r\n        console.error('Error polling upload status:', error);\r\n        setUploadStatus('Error checking upload status');\r\n        setMessage(`Error checking upload status: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setUploadStatus('Upload status check timed out');\r\n    setMessage('Upload status check timed out. The upload may still be in progress.');\r\n  };\r\n\r\n  const renderSourceList = (sources, title) => (\r\n    <div>\r\n      <h2 style={{ color: '#444', marginTop: '20px' }}>{title}</h2>\r\n      {sources.length > 0 ? (\r\n        <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n          {sources.map((source) => (\r\n            <li key={source} style={{ marginBottom: '10px', border: '1px solid #ccc', padding: '10px', borderRadius: '4px' }}>\r\n              <h3 style={{ margin: '0' }}>\r\n                <a href=\"#\" onClick={(e) => { e.preventDefault(); fetchDocuments(source); }} style={{ color: '#007bff', textDecoration: 'none' }}>\r\n                  {source}\r\n                </a>\r\n              </h3>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No {title.toLowerCase()} available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderDocumentsTable = () => {\r\n    if (documents.length === 0) {\r\n      return <p>No documents found.</p>;\r\n    }\r\n\r\n    return (\r\n      <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '20px' }}>\r\n        <thead>\r\n          <tr>\r\n            <th style={tableHeaderStyle} onClick={() => handleSort('filename')}>Filename</th>\r\n            <th style={tableHeaderStyle} onClick={() => handleSort('created_at')}>Created At</th>\r\n            <th style={tableHeaderStyle} onClick={() => handleSort('modified_at')}>Modified At</th>\r\n            <th style={tableHeaderStyle} onClick={() => handleSort('visibility')}>Visibility</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortDocuments(documents).map((doc, index) => (\r\n            <tr key={doc.id || index} style={{ backgroundColor: index % 2 === 0 ? '#f8f8f8' : 'white' }}>\r\n              <td style={tableCellStyle}>{doc.filename}</td>\r\n              <td style={tableCellStyle}>{formatDate(doc.created_at)}</td>\r\n              <td style={tableCellStyle}>{formatDate(doc.modified_at)}</td>\r\n              <td style={tableCellStyle}>{doc.visibility || 'N/A'}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ fontFamily: 'Arial, sans-serif', maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\r\n      <h1 style={{ color: '#333', borderBottom: '2px solid #333', paddingBottom: '10px' }}>Document Sources</h1>\r\n\r\n      {renderSourceList(globalSources, 'Global Sources')}\r\n      {renderSourceList(privateSources, 'Private Sources')}\r\n\r\n      {selectedSource && (\r\n        <div>\r\n          <h2>Documents in {selectedSource}</h2>\r\n          <button onClick={handleSyncSource} style={buttonStyle}>Sync Source</button>\r\n          {isLoading ? (\r\n            <p>Loading documents...</p>\r\n          ) : (\r\n            renderDocumentsTable()\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div style={{ marginTop: '20px' }}>\r\n        <h2>Upload Document</h2>\r\n        <input type=\"file\" onChange={handleFileChange} style={{ marginBottom: '10px' }} />\r\n        <button onClick={handleUpload} disabled={!selectedFile || !selectedSource} style={buttonStyle}>\r\n          Upload\r\n        </button>\r\n        {uploadProgress > 0 && <progress value={uploadProgress} max=\"100\" style={{ width: '100%' }} />}\r\n        {uploadStatus && <p>{uploadStatus}</p>}\r\n        {uploadSteps.length > 0 && (\r\n          <ul>\r\n            {uploadSteps.map((step, index) => (\r\n              <li key={index}>{step}</li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      {message && <p style={{ color: 'red', marginTop: '20px' }}>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst tableHeaderStyle = {\r\n  backgroundColor: '#f2f2f2',\r\n  padding: '12px',\r\n  textAlign: 'left',\r\n  borderBottom: '1px solid #ddd',\r\n  cursor: 'pointer'\r\n};\r\n\r\nconst tableCellStyle = {\r\n  padding: '12px',\r\n  borderBottom: '1px solid #ddd'\r\n};\r\n\r\nconst buttonStyle = {\r\n  backgroundColor: '#007bff',\r\n  color: 'white',\r\n  padding: '10px 15px',\r\n  border: 'none',\r\n  borderRadius: '4px',\r\n  cursor: 'pointer',\r\n  marginRight: '10px'\r\n};\r\n\r\nexport default ListSources;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}