{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Desktop\\\\django_test\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from './Header';\nimport ConversationBox from './ConversationBox';\nimport InputBox from './InputBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const {\n    mysource\n  } = useParams(); // Ensure mysource is correctly retrieved\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [djangoResult, setDjangoResult] = useState(null);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [question, setQuestion] = useState('');\n  const conversationBoxRef = useRef(null);\n  useEffect(() => {\n    if (conversationBoxRef.current) {\n      conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const message = e.target.message.value.trim();\n    if (message !== '') {\n      e.target.message.value = '';\n      setIsLoading(true);\n      setShowSpinner(true);\n      setMessages([...messages, {\n        text: message,\n        sender: 'user'\n      }]);\n      try {\n        const payload = {\n          question: message,\n          source: mysource || 'defaultSource' // Use a default source if mysource is undefined\n        };\n        console.log('Sending payload:', payload); // Log the payload\n        const resp = await axios.post('/chatbot1/search/', payload);\n        console.log('Full response from API:', resp.data);\n        let response = resp.data.response || \"No response from API\";\n        console.log('Response from API:', response);\n        setMessages(prevMessages => [...prevMessages, {\n          text: response,\n          sender: 'bot',\n          copyButton: true,\n          filenames: resp.data.references ? resp.data.references.map(ref => ref.filename) : []\n        }]);\n        setShowSpinner(false);\n        if (conversationBoxRef.current) {\n          conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n      setIsLoading(false);\n      setShowSpinner(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Home ${mysource === 'OADInternal' ? 'internal' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      djangoResult: djangoResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: mysource === 'OADPublic' ? 'Public Chatbot' : 'Internal Chatbot'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConversationBox, {\n      messages: messages,\n      isLoading: isLoading,\n      conversationBoxRef: conversationBoxRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      question: question,\n      setQuestion: setQuestion,\n      handleSendMessage: handleSendMessage,\n      isLoading: isLoading,\n      showSpinner: showSpinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"XWaiVzBQTEXSamgn41ZgYjgaB0g=\", false, function () {\n  return [useParams];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useParams","axios","Header","ConversationBox","InputBox","jsxDEV","_jsxDEV","Home","_s","mysource","messages","setMessages","isLoading","setIsLoading","djangoResult","setDjangoResult","showSpinner","setShowSpinner","question","setQuestion","conversationBoxRef","current","scrollTop","scrollHeight","handleSendMessage","e","preventDefault","message","target","value","trim","text","sender","payload","source","console","log","resp","post","data","response","prevMessages","copyButton","filenames","references","map","ref","filename","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Desktop/django_test/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/Home.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from './Header';\r\nimport ConversationBox from './ConversationBox';\r\nimport InputBox from './InputBox';\r\n\r\nfunction Home() {\r\n  const { mysource } = useParams(); // Ensure mysource is correctly retrieved\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [djangoResult, setDjangoResult] = useState(null);\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [question, setQuestion] = useState('');\r\n  const conversationBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (conversationBoxRef.current) {\r\n      conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const message = e.target.message.value.trim();\r\n    if (message !== '') {\r\n      e.target.message.value = '';\r\n      setIsLoading(true);\r\n      setShowSpinner(true);\r\n      setMessages([...messages, { text: message, sender: 'user' }]);\r\n\r\n      try {\r\n        const payload = {\r\n          question: message,\r\n          source: mysource || 'defaultSource' // Use a default source if mysource is undefined\r\n        };\r\n        console.log('Sending payload:', payload); // Log the payload\r\n        const resp = await axios.post('/chatbot1/search/', payload);\r\n        console.log('Full response from API:', resp.data);\r\n        let response = resp.data.response || \"No response from API\";\r\n\r\n        console.log('Response from API:', response);\r\n\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          {\r\n            text: response,\r\n            sender: 'bot',\r\n            copyButton: true,\r\n            filenames: resp.data.references ? resp.data.references.map((ref) => ref.filename) : [],\r\n          },\r\n        ]);\r\n\r\n        setShowSpinner(false);\r\n\r\n        if (conversationBoxRef.current) {\r\n          conversationBoxRef.current.scrollTop = conversationBoxRef.current.scrollHeight;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending message:', error);\r\n      }\r\n\r\n      setIsLoading(false);\r\n      setShowSpinner(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`Home ${mysource === 'OADInternal' ? 'internal' : ''}`}>\r\n      <Header djangoResult={djangoResult} />\r\n      <h1>{mysource === 'OADPublic' ? 'Public Chatbot' : 'Internal Chatbot'}</h1>\r\n      <ConversationBox\r\n        messages={messages}\r\n        isLoading={isLoading}\r\n        conversationBoxRef={conversationBoxRef}\r\n      />\r\n      <InputBox\r\n        question={question}\r\n        setQuestion={setQuestion}\r\n        handleSendMessage={handleSendMessage}\r\n        isLoading={isLoading}\r\n        showSpinner={showSpinner}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}