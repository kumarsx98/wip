{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\ListSources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListSources() {\n  _s();\n  const [globalSources, setGlobalSources] = useState([]);\n  const [privateSources, setPrivateSources] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const refreshData = async () => {\n    await fetchSources();\n    if (selectedSource) {\n      await fetchDocuments(selectedSource);\n    }\n  };\n  useEffect(() => {\n    refreshData();\n  }, []);\n  const fetchSources = async () => {\n    setIsLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.get('/chatbot1/list-sources/');\n      if (response.status === 200) {\n        setGlobalSources(response.data.global_sources || []);\n        setPrivateSources(response.data.private_sources || []);\n      } else {\n        setMessage('An error occurred while fetching the sources.');\n      }\n    } catch (error) {\n      console.error('Error during source fetching:', error);\n      setMessage('An error occurred while fetching the sources.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchDocuments = async source => {\n    setIsLoading(true);\n    setMessage('');\n    setSelectedSource(source);\n    try {\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`);\n      if (response.status === 200) {\n        setDocuments(response.data.documents.documents || []);\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\n      } else {\n        setMessage('An error occurred while fetching the documents.');\n      }\n    } catch (error) {\n      console.error('Error during document fetching:', error);\n      setMessage('An error occurred while fetching the documents.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile || !selectedSource) {\n      setMessage('Please select a source and a file.');\n      return;\n    }\n    setIsLoading(true);\n    setMessage('');\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(progress);\n        }\n      });\n      if (response.status === 200 || response.status === 201) {\n        setMessage('File uploaded successfully.');\n        await fetchDocuments(selectedSource);\n      } else {\n        setMessage('An error occurred during the file upload.');\n      }\n    } catch (error) {\n      console.error('Error during file upload:', error);\n      setMessage('An error occurred during the file upload.');\n    } finally {\n      setIsLoading(false);\n      setUploadProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Source List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [globalSources.map((source, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => fetchDocuments(source),\n        children: source\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)), privateSources.map((source, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => fetchDocuments(source),\n        children: source\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Selected Source: \", selectedSource]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setSelectedFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Upload Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"progress\", {\n      value: uploadProgress,\n      max: \"100\",\n      children: [uploadProgress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 30\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Document List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: documents.map((doc, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: doc.filename\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(ListSources, \"zjtRMph2UKhflvgZDGl/uaYIJU0=\");\n_c = ListSources;\nexport default ListSources;\nvar _c;\n$RefreshReg$(_c, \"ListSources\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ListSources","_s","globalSources","setGlobalSources","privateSources","setPrivateSources","selectedSource","setSelectedSource","documents","setDocuments","message","setMessage","isLoading","setIsLoading","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","refreshData","fetchSources","fetchDocuments","response","get","status","data","global_sources","private_sources","error","console","source","length","handleFileUpload","formData","FormData","append","post","headers","onUploadProgress","progressEvent","progress","Math","round","loaded","total","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","type","onChange","e","target","files","value","max","doc","filename","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/ListSources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ListSources() {\r\n  const [globalSources, setGlobalSources] = useState([]);\r\n  const [privateSources, setPrivateSources] = useState([]);\r\n  const [selectedSource, setSelectedSource] = useState(null);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  const refreshData = async () => {\r\n    await fetchSources();\r\n    if (selectedSource) {\r\n      await fetchDocuments(selectedSource);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, []);\r\n\r\n  const fetchSources = async () => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await axios.get('/chatbot1/list-sources/');\r\n      if (response.status === 200) {\r\n        setGlobalSources(response.data.global_sources || []);\r\n        setPrivateSources(response.data.private_sources || []);\r\n      } else {\r\n        setMessage('An error occurred while fetching the sources.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during source fetching:', error);\r\n      setMessage('An error occurred while fetching the sources.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDocuments = async (source) => {\r\n    setIsLoading(true);\r\n    setMessage('');\r\n    setSelectedSource(source);\r\n\r\n    try {\r\n      const response = await axios.get(`/chatbot1/list-documents/${source}/`);\r\n      if (response.status === 200) {\r\n        setDocuments(response.data.documents.documents || []);\r\n        setMessage(response.data.documents.documents.length === 0 ? 'No documents found.' : '');\r\n      } else {\r\n        setMessage('An error occurred while fetching the documents.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during document fetching:', error);\r\n      setMessage('An error occurred while fetching the documents.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile || !selectedSource) {\r\n      setMessage('Please select a source and a file.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage('');\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post(`/chatbot1/upload-document/${selectedSource}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(progress);\r\n        },\r\n      });\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        setMessage('File uploaded successfully.');\r\n        await fetchDocuments(selectedSource);\r\n      } else {\r\n        setMessage('An error occurred during the file upload.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during file upload:', error);\r\n      setMessage('An error occurred during the file upload.');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Source List</h2>\r\n      <ul>\r\n        {globalSources.map((source, index) => (\r\n          <li key={index} onClick={() => fetchDocuments(source)}>\r\n            {source}\r\n          </li>\r\n        ))}\r\n        {privateSources.map((source, index) => (\r\n          <li key={index} onClick={() => fetchDocuments(source)}>\r\n            {source}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3>Selected Source: {selectedSource}</h3>\r\n\r\n      <input\r\n        type=\"file\"\r\n        onChange={(e) => setSelectedFile(e.target.files[0])}\r\n      />\r\n      <button onClick={handleFileUpload}>Upload Document</button>\r\n\r\n      {uploadProgress > 0 && <progress value={uploadProgress} max=\"100\">{uploadProgress}%</progress>}\r\n\r\n      {isLoading && <p>Loading...</p>}\r\n      {message && <p>{message}</p>}\r\n\r\n      <h2>Document List</h2>\r\n      <ul>\r\n        {documents.map((doc, index) => (\r\n          <li key={index}>{doc.filename}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListSources;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}