{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\SAMLLogin.js\",\n  _s = $RefreshSig$();\n// SAMLLogin.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SAMLLogin() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSAMLLogin = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/saml/login/');\n      const data = await response.json();\n      window.location.href = data.sso_url;\n    } catch (error) {\n      console.error('Error initiating SAML login:', error);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SAML Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSAMLLogin,\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Login with SAML'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(SAMLLogin, \"DnY8KtHWiqG98vKbBdb88BioG/Y=\", false, function () {\n  return [useNavigate];\n});\n_c = SAMLLogin;\nexport default SAMLLogin;\nvar _c;\n$RefreshReg$(_c, \"SAMLLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SAMLLogin","_s","loading","setLoading","navigate","handleSAMLLogin","response","fetch","data","json","window","location","href","sso_url","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/SAMLLogin.js"],"sourcesContent":["// SAMLLogin.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction SAMLLogin() {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSAMLLogin = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/saml/login/');\r\n      const data = await response.json();\r\n      window.location.href = data.sso_url;\r\n    } catch (error) {\r\n      console.error('Error initiating SAML login:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>SAML Login</h2>\r\n      <button onClick={handleSAMLLogin} disabled={loading}>\r\n        {loading ? 'Loading...' : 'Login with SAML'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SAMLLogin;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,CAAC;MAC5C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,IAAI,CAACK,OAAO;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBrB,OAAA;MAAQsB,OAAO,EAAEhB,eAAgB;MAACiB,QAAQ,EAAEpB,OAAQ;MAAAc,QAAA,EACjDd,OAAO,GAAG,YAAY,GAAG;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnB,EAAA,CAxBQD,SAAS;EAAA,QAECH,WAAW;AAAA;AAAA0B,EAAA,GAFrBvB,SAAS;AA0BlB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}