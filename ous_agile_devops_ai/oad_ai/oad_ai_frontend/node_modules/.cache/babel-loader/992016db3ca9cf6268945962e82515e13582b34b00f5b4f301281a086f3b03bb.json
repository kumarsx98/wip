{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMX1\\\\Downloads\\\\Repo\\\\OAD_Auto\\\\ous_agile_devops_ai\\\\oad_ai\\\\oad_ai_frontend\\\\src\\\\UploadDocument.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadDocument() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const {\n    source\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const socket = new WebSocket(`ws://127.0.0.1:8001/ws/documents/${source}/`);\n    socket.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    socket.onmessage = event => {\n      console.log('WebSocket message received:', event.data);\n      const data = JSON.parse(event.data);\n      if (data.message) {\n        setUploadStatus(data.message.status);\n        setProgress(data.message.progress);\n        if (data.message.status === 'success') {\n          fetchDocuments(); // Call fetchDocuments when upload is successful\n        }\n      }\n    };\n    socket.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    return () => {\n      console.log('Closing WebSocket connection');\n      socket.close();\n    };\n  }, [source, navigate]);\n  const fetchDocuments = async () => {\n    try {\n      const response = await axios.get(`/get-documents/${source}/`);\n      console.log('Fetched documents:', response.data);\n      // Handle the fetched documents as needed\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file to upload');\n      return;\n    }\n    setIsLoading(true);\n    setUploadStatus('Initiating upload...');\n    setProgress(10);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post(`/upload-document/${source}/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': getCookie('csrftoken')\n        },\n        withCredentials: true\n      });\n      if (response.data.status === 'success') {\n        setUploadStatus('File upload initiated. Processing...');\n        // Don't navigate away immediately, wait for WebSocket message\n      } else {\n        setUploadStatus('Unexpected response. Please check the server logs.');\n        setProgress(0);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error uploading document:', error);\n      setUploadStatus('Error: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Unknown error occurred'));\n      setProgress(0);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // ... rest of your component code (handleFileChange, getCookie, etc.)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Upload Document to \", source]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", uploadStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Progress: \", progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadDocument, \"PfGByisXmot4SGTh5/AZc379ExE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UploadDocument;\nexport default UploadDocument;\nvar _c;\n$RefreshReg$(_c, \"UploadDocument\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","UploadDocument","_s","file","setFile","uploadStatus","setUploadStatus","isLoading","setIsLoading","progress","setProgress","source","navigate","socket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","message","status","fetchDocuments","onerror","error","close","response","get","handleUpload","e","preventDefault","alert","formData","FormData","append","post","headers","getCookie","withCredentials","_error$response","_error$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","handleFileChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/AMX1/Downloads/Repo/OAD_Auto/ous_agile_devops_ai/oad_ai/oad_ai_frontend/src/UploadDocument.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nfunction UploadDocument() {\r\n  const [file, setFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const { source } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket(`ws://127.0.0.1:8001/ws/documents/${source}/`);\r\n\r\n    socket.onopen = () => {\r\n      console.log('WebSocket connection established');\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      console.log('WebSocket message received:', event.data);\r\n      const data = JSON.parse(event.data);\r\n      if (data.message) {\r\n        setUploadStatus(data.message.status);\r\n        setProgress(data.message.progress);\r\n        if (data.message.status === 'success') {\r\n          fetchDocuments(); // Call fetchDocuments when upload is successful\r\n        }\r\n      }\r\n    };\r\n\r\n    socket.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n    };\r\n\r\n    return () => {\r\n      console.log('Closing WebSocket connection');\r\n      socket.close();\r\n    };\r\n  }, [source, navigate]);\r\n\r\n  const fetchDocuments = async () => {\r\n    try {\r\n      const response = await axios.get(`/get-documents/${source}/`);\r\n      console.log('Fetched documents:', response.data);\r\n      // Handle the fetched documents as needed\r\n    } catch (error) {\r\n      console.error('Error fetching documents:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      alert('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setUploadStatus('Initiating upload...');\r\n    setProgress(10);\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await axios.post(`/upload-document/${source}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': getCookie('csrftoken'),\r\n        },\r\n        withCredentials: true,\r\n      });\r\n\r\n      if (response.data.status === 'success') {\r\n        setUploadStatus('File upload initiated. Processing...');\r\n        // Don't navigate away immediately, wait for WebSocket message\r\n      } else {\r\n        setUploadStatus('Unexpected response. Please check the server logs.');\r\n        setProgress(0);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading document:', error);\r\n      setUploadStatus('Error: ' + (error.response?.data?.message || error.message || 'Unknown error occurred'));\r\n      setProgress(0);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // ... rest of your component code (handleFileChange, getCookie, etc.)\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Document to {source}</h2>\r\n      <form onSubmit={handleUpload}>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button type=\"submit\" disabled={isLoading}>Upload</button>\r\n      </form>\r\n      <div>\r\n        <p>Status: {uploadStatus}</p>\r\n        <p>Progress: {progress}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadDocument;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}